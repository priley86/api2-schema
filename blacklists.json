{
  "apiVersion": "2",
  "swaggerVersion": "1.2",
  "basePath": "/",
  "resourcePath": "/Blacklists",
  "produces": ["application/json"],
  "apis": [
    {
      "path": "/api/v2/blacklists/tokens",
      "operations": [
        {
          "method": "get",
          "summary": "Get blacklisted tokens",
          "notes": "Retrieve the `jti` and `aud` of all tokens that are blacklisted.\n\nNote: The <a href=\"https://auth0.com/docs/jwt\">JWT specification</a> states that the `jti` field can be used to prevent replay attacks. Though Auth0 tokens do not include a `jti`, you can nevertheless blacklist a `jti` to prevent a token being used more than a predetermined number of times. This behavior is similar to implementing a nonce (where the token's signature can be thought of as the nonce). If a token gets stolen, it (or the tokens issued after it) should be blacklisted and let expire.\n",
          "type": "array",
          "nickname": "get_tokens",
          "parameters": [
            {
              "paramType": "query",
              "name": "aud",
              "description": "Optional filter on the JWT's aud claim (the client_id to which the JWT was issued).",
              "type": "string"
            }
          ],
          "items": { "$ref": "get_tokens_response" },
          "responseMessages": [
            { "code": 200, "message": "Tokens successfully retrieved." },
            {
              "code": 400,
              "message": "Invalid request query string. The message will vary depending on the cause.",
              "errorCode": "invalid_query_string"
            },
            { "code": 401, "message": "Invalid token." },
            { "code": 401, "message": "Client is not global." },
            {
              "code": 401,
              "message": "Invalid signature received for JSON Web Token validation."
            },
            {
              "code": 403,
              "message": "Insufficient scope; expected any of: blacklist:tokens.",
              "errorCode": "insufficient_scope"
            },
            {
              "code": 429,
              "message": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."
            }
          ],
          "authorizations": { "jwt": { "scopes": ["blacklist:tokens"] } }
        },
        {
          "method": "post",
          "summary": "Blacklist a token",
          "notes": "Add the token identified by the `jti` to a blacklist for the tenant.\n",
          "type": "void",
          "nickname": "post_tokens",
          "parameters": [
            {
              "paramType": "body",
              "name": "body",
              "type": "post_tokens_body",
              "required": true
            }
          ],
          "responseMessages": [
            { "code": 204, "message": "Token successfully blacklisted." },
            {
              "code": 400,
              "message": "Invalid request body. The message will vary depending on the cause.",
              "errorCode": "invalid_body"
            },
            { "code": 401, "message": "Invalid token." },
            { "code": 401, "message": "Client is not global." },
            {
              "code": 401,
              "message": "Invalid signature received for JSON Web Token validation."
            },
            {
              "code": 403,
              "message": "Insufficient scope; expected any of: blacklist:tokens.",
              "errorCode": "insufficient_scope"
            },
            {
              "code": 403,
              "message": "You cannot blacklist tokens for the specified audience. You must own the client.",
              "errorCode": "unowned_resource"
            },
            {
              "code": 429,
              "message": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."
            }
          ],
          "consumes": ["application/json", "application/x-www-form-urlencoded"],
          "authorizations": { "jwt": { "scopes": ["blacklist:tokens"] } }
        }
      ]
    }
  ],
  "consumes": ["application/json", "application/x-www-form-urlencoded"],
  "models": {
    "get_tokens_response": {
      "type": "object",
      "schemaName": "token",
      "properties": {
        "aud": {
          "type": "string",
          "description": "JWT's aud claim (the client_id to which the JWT was issued).",
          "format": "client-id"
        },
        "jti": {
          "type": "string",
          "description": "jti (unique ID within aud) of the blacklisted JWT.",
          "minLength": 1
        }
      },
      "required": ["jti"],
      "additionalProperties": false
    },
    "post_tokens_body": {
      "type": "object",
      "schemaName": "token",
      "properties": {
        "aud": {
          "type": "string",
          "description": "JWT's aud claim (the client_id to which the JWT was issued).",
          "format": "client-id"
        },
        "jti": {
          "type": "string",
          "description": "jti (unique ID within aud) of the blacklisted JWT.",
          "minLength": 1
        }
      },
      "required": ["jti"],
      "additionalProperties": false
    }
  }
}

{
  "apiVersion": "2",
  "swaggerVersion": "1.2",
  "basePath": "/",
  "resourcePath": "/Roles",
  "produces": ["application/json"],
  "apis": [
    {
      "path": "/api/v2/roles",
      "operations": [
        {
          "method": "get",
          "summary": "Get roles",
          "notes": "Retrieve filtered list of roles that can be assigned to users.\n",
          "type": "array",
          "nickname": "get_roles",
          "parameters": [
            {
              "paramType": "query",
              "name": "per_page",
              "description": "Number of results per page. Defaults to 50.",
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            {
              "paramType": "query",
              "name": "page",
              "description": "Page index of the results to return. First page is 0.",
              "type": "integer",
              "minimum": 0
            },
            {
              "paramType": "query",
              "name": "include_totals",
              "description": "Return results inside an object that contains the total result count (true) or as a direct array of results (false, default).",
              "type": "boolean"
            },
            {
              "paramType": "query",
              "name": "name_filter",
              "description": "Optional filter on name (case-insensitive).",
              "type": "string"
            }
          ],
          "items": { "$ref": "get_roles_response" },
          "responseMessages": [
            { "code": 200, "message": "Roles successfully retrieved." },
            {
              "code": 400,
              "message": "Invalid request URI. The message will vary depending on the cause.",
              "errorCode": "invalid_uri"
            },
            {
              "code": 400,
              "message": "Invalid request body. The message will vary depending on the cause.",
              "errorCode": "invalid_body"
            },
            { "code": 401, "message": "Invalid token." },
            {
              "code": 401,
              "message": "Invalid signature received for JSON Web Token validation."
            },
            {
              "code": 403,
              "message": "Insufficient scope; expected: read:roles."
            },
            {
              "code": 429,
              "message": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."
            }
          ],
          "authorizations": { "jwt": { "scopes": ["read:roles"] } }
        },
        {
          "method": "post",
          "summary": "Create a role",
          "notes": "Create a new role.\n",
          "type": "post_roles_response",
          "nickname": "post_roles",
          "parameters": [
            {
              "paramType": "body",
              "name": "body",
              "type": "post_roles_body",
              "required": true
            }
          ],
          "responseMessages": [
            { "code": 200, "message": "Role successfully created." },
            {
              "code": 400,
              "message": "Invalid request URI. The message will vary depending on the cause.",
              "errorCode": "invalid_uri"
            },
            {
              "code": 400,
              "message": "Invalid request body. The message will vary depending on the cause.",
              "errorCode": "invalid_body"
            },
            { "code": 401, "message": "Invalid token." },
            {
              "code": 401,
              "message": "Invalid signature received for JSON Web Token validation."
            },
            {
              "code": 403,
              "message": "Insufficient scope; expected: create:roles."
            },
            {
              "code": 429,
              "message": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."
            }
          ],
          "consumes": ["application/json", "application/x-www-form-urlencoded"],
          "authorizations": { "jwt": { "scopes": ["create:roles"] } }
        }
      ]
    },
    {
      "path": "/api/v2/roles/{id}",
      "operations": [
        {
          "method": "get",
          "summary": "Get a role",
          "notes": "Retrieve a role.\n",
          "type": "get_roles_by_id_response",
          "nickname": "get_roles_by_id",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "ID of the role to retrieve.",
              "type": "string",
              "required": true
            }
          ],
          "responseMessages": [
            { "code": 200, "message": "Role successfully retrieved." },
            {
              "code": 400,
              "message": "Invalid request URI. The message will vary depending on the cause.",
              "errorCode": "invalid_uri"
            },
            {
              "code": 400,
              "message": "Invalid request body. The message will vary depending on the cause.",
              "errorCode": "invalid_body"
            },
            { "code": 401, "message": "Invalid token." },
            {
              "code": 401,
              "message": "Invalid signature received for JSON Web Token validation."
            },
            {
              "code": 403,
              "message": "Insufficient scope; expected: read:roles."
            },
            { "code": 404, "message": "Role not found." },
            {
              "code": 429,
              "message": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."
            }
          ],
          "authorizations": { "jwt": { "scopes": ["read:roles"] } }
        },
        {
          "method": "delete",
          "summary": "Delete a role",
          "notes": "Delete a role.\n",
          "type": "void",
          "nickname": "delete_roles_by_id",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "ID of the role to delete.",
              "type": "string",
              "required": true
            }
          ],
          "responseMessages": [
            { "code": 200, "message": "Role successfully deleted." },
            {
              "code": 400,
              "message": "Invalid request URI. The message will vary depending on the cause.",
              "errorCode": "invalid_uri"
            },
            { "code": 401, "message": "Invalid token." },
            {
              "code": 401,
              "message": "Invalid signature received for JSON Web Token validation."
            },
            {
              "code": 403,
              "message": "Insufficient scope; expected: delete:roles."
            },
            { "code": 404, "message": "Role not found." },
            {
              "code": 429,
              "message": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."
            }
          ],
          "authorizations": { "jwt": { "scopes": ["delete:roles"] } }
        },
        {
          "method": "patch",
          "summary": "Update a role",
          "notes": "Update a role.\n",
          "type": "patch_roles_by_id_response",
          "nickname": "patch_roles_by_id",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "ID of the role to update.",
              "type": "string",
              "required": true
            },
            {
              "paramType": "body",
              "name": "body",
              "type": "patch_roles_by_id_body",
              "required": true
            }
          ],
          "responseMessages": [
            { "code": 200, "message": "Role successfully updated." },
            {
              "code": 400,
              "message": "Invalid request URI. The message will vary depending on the cause.",
              "errorCode": "invalid_uri"
            },
            {
              "code": 400,
              "message": "Invalid request body. The message will vary depending on the cause.",
              "errorCode": "invalid_body"
            },
            { "code": 401, "message": "Invalid token." },
            {
              "code": 401,
              "message": "Invalid signature received for JSON Web Token validation."
            },
            {
              "code": 403,
              "message": "Insufficient scope; expected: update:roles."
            },
            {
              "code": 429,
              "message": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."
            }
          ],
          "consumes": ["application/json", "application/x-www-form-urlencoded"],
          "authorizations": { "jwt": { "scopes": ["update:roles"] } }
        }
      ]
    },
    {
      "path": "/api/v2/roles/{id}/permissions",
      "operations": [
        {
          "method": "get",
          "summary": "Get permissions granted by role",
          "notes": "Retrieve list of permissions granted by a role.\n",
          "type": "array",
          "nickname": "get_role_permission",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "ID of the role to list granted permissions.",
              "type": "string",
              "required": true
            },
            {
              "paramType": "query",
              "name": "per_page",
              "description": "Number of results per page. Defaults to 50.",
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            {
              "paramType": "query",
              "name": "page",
              "description": "Page index of the results to return. First page is 0.",
              "type": "integer",
              "minimum": 0
            },
            {
              "paramType": "query",
              "name": "include_totals",
              "description": "Return results inside an object that contains the total result count (true) or as a direct array of results (false, default).",
              "type": "boolean"
            }
          ],
          "items": { "$ref": "get_role_permission_response" },
          "responseMessages": [
            {
              "code": 200,
              "message": "Role permissions successfully retrieved."
            },
            {
              "code": 400,
              "message": "Invalid request URI. The message will vary depending on the cause.",
              "errorCode": "invalid_uri"
            },
            {
              "code": 400,
              "message": "Invalid request body. The message will vary depending on the cause.",
              "errorCode": "invalid_body"
            },
            { "code": 401, "message": "Invalid token." },
            {
              "code": 401,
              "message": "Invalid signature received for JSON Web Token validation."
            },
            {
              "code": 403,
              "message": "Insufficient scope; expected: read:roles."
            },
            { "code": 404, "message": "Role not found." },
            {
              "code": 429,
              "message": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."
            }
          ],
          "authorizations": { "jwt": { "scopes": ["read:roles"] } }
        },
        {
          "method": "delete",
          "summary": "Remove permissions from a role",
          "notes": "Remove permissions associated with a role.\n",
          "nickname": "delete_role_permission_assignment",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "ID of the role to remove permissions from.",
              "type": "string",
              "required": true
            },
            {
              "paramType": "body",
              "name": "body",
              "type": "delete_role_permission_assignment_body",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 200,
              "message": "Role permissions successfully updated."
            },
            {
              "code": 400,
              "message": "Invalid request URI. The message will vary depending on the cause.",
              "errorCode": "invalid_uri"
            },
            {
              "code": 400,
              "message": "Invalid request body. The message will vary depending on the cause.",
              "errorCode": "invalid_body"
            },
            { "code": 401, "message": "Invalid token." },
            {
              "code": 401,
              "message": "Invalid signature received for JSON Web Token validation."
            },
            {
              "code": 403,
              "message": "Insufficient scope; expected: update:roles."
            },
            {
              "code": 429,
              "message": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."
            }
          ],
          "consumes": ["application/json", "application/x-www-form-urlencoded"],
          "authorizations": { "jwt": { "scopes": ["update:roles"] } }
        },
        {
          "method": "post",
          "summary": "Associate permissions with a role",
          "notes": "Associate permissions with a role.\n",
          "nickname": "post_role_permission_assignment",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "ID of the role to add permissions to.",
              "type": "string",
              "required": true
            },
            {
              "paramType": "body",
              "name": "body",
              "type": "post_role_permission_assignment_body",
              "required": true
            }
          ],
          "responseMessages": [
            { "code": 201, "message": "Role permissions updated." },
            {
              "code": 400,
              "message": "Invalid request URI. The message will vary depending on the cause.",
              "errorCode": "invalid_uri"
            },
            {
              "code": 400,
              "message": "Invalid request body. The message will vary depending on the cause.",
              "errorCode": "invalid_body"
            },
            { "code": 401, "message": "Invalid token." },
            {
              "code": 401,
              "message": "Invalid signature received for JSON Web Token validation."
            },
            {
              "code": 403,
              "message": "Insufficient scope; expected: update:roles."
            },
            {
              "code": 429,
              "message": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."
            }
          ],
          "consumes": ["application/json", "application/x-www-form-urlencoded"],
          "authorizations": { "jwt": { "scopes": ["update:roles"] } }
        }
      ]
    },
    {
      "path": "/api/v2/roles/{id}/users",
      "operations": [
        {
          "method": "get",
          "summary": "Get a role's users",
          "notes": "Retrieve users associated with a role. This endpoint supports two types of pagination:\n- Offset pagination\n- Checkpoint pagination\n\nCheckpoint pagination must be used if you need to retrieve more than 1000 users for a given role.\n\n<h2>Checkpoint Pagination</h2>\n\nTo search by checkpoint, use the following parameters:\n- from: Optional id from which to start selection.\n- take: The total amount of entries to retrieve when using the from parameter. Defaults to 50.\n\nNote: The first time you call this endpoint using Checkpoint Pagination, you should omit the <code>from</code> parameter. If there are more results, a <code>next</code> value will be included in the response. You can use this for subsequent API calls. When <code>next</code> is no longer included in the response, this indicates there are no more pages remaining.\n",
          "type": "array",
          "nickname": "get_role_user",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "ID of the role to retrieve a list of users associated with.",
              "type": "string",
              "required": true
            },
            {
              "paramType": "query",
              "name": "per_page",
              "description": "Number of results per page. Defaults to 50.",
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            {
              "paramType": "query",
              "name": "page",
              "description": "Page index of the results to return. First page is 0.",
              "type": "integer",
              "minimum": 0
            },
            {
              "paramType": "query",
              "name": "include_totals",
              "description": "Return results inside an object that contains the total result count (true) or as a direct array of results (false, default).",
              "type": "boolean"
            },
            {
              "paramType": "query",
              "name": "from",
              "description": "Optional Id from which to start selection.",
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "take",
              "description": "Number of results per page. Defaults to 50.",
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            }
          ],
          "items": { "$ref": "get_role_user_response" },
          "responseMessages": [
            { "code": 200, "message": "Role users successfully retrieved." },
            {
              "code": 400,
              "message": "Invalid request URI. The message will vary depending on the cause.",
              "errorCode": "invalid_uri"
            },
            {
              "code": 400,
              "message": "Invalid request body. The message will vary depending on the cause.",
              "errorCode": "invalid_body"
            },
            { "code": 401, "message": "Invalid token." },
            {
              "code": 401,
              "message": "Invalid signature received for JSON Web Token validation."
            },
            {
              "code": 403,
              "message": "Insufficient scope; expected all of: read:users, read:roles."
            },
            { "code": 404, "message": "Role not found." },
            {
              "code": 429,
              "message": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."
            }
          ],
          "authorizations": {
            "jwt": {
              "scopes": ["read:users", "read:roles", "read:role_members"]
            }
          }
        },
        {
          "method": "post",
          "summary": "Assign users to a role",
          "notes": "Assign users to a role.",
          "nickname": "post_role_users",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "ID of the role to assign users to.",
              "type": "string",
              "required": true
            },
            {
              "paramType": "body",
              "name": "body",
              "type": "post_role_users_body",
              "required": true
            }
          ],
          "responseMessages": [
            { "code": 200, "message": "Role users successfully updated." },
            {
              "code": 400,
              "message": "Invalid request URI. The message will vary depending on the cause.",
              "errorCode": "invalid_uri"
            },
            {
              "code": 400,
              "message": "Invalid request body. The message will vary depending on the cause.",
              "errorCode": "invalid_body"
            },
            { "code": 401, "message": "Invalid token." },
            {
              "code": 401,
              "message": "Invalid signature received for JSON Web Token validation."
            },
            {
              "code": 403,
              "message": "Insufficient scope; expected: update:roles."
            },
            { "code": 404, "message": "Role not found." },
            {
              "code": 404,
              "message": "One or more of the users do not exist."
            },
            {
              "code": 429,
              "message": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."
            }
          ],
          "consumes": ["application/json", "application/x-www-form-urlencoded"],
          "authorizations": {
            "jwt": { "scopes": ["update:roles", "create:role_members"] }
          }
        }
      ]
    }
  ],
  "consumes": ["application/json", "application/x-www-form-urlencoded"],
  "models": {
    "get_roles_response": {
      "type": "object",
      "properties": {
        "id": { "type": "string", "description": "ID for this role." },
        "name": { "type": "string", "description": "Name of the role." },
        "description": {
          "type": "string",
          "description": "Description of the role."
        }
      },
      "additionalProperties": false
    },
    "post_roles_response": {
      "type": "object",
      "properties": {
        "id": { "type": "string", "description": "ID for this role." },
        "name": { "type": "string", "description": "Name of the role." },
        "description": {
          "type": "string",
          "description": "Description of the role."
        }
      },
      "additionalProperties": false
    },
    "post_roles_body": {
      "title": "post_role",
      "type": "object",
      "properties": {
        "name": { "type": "string", "description": "Name of the role." },
        "description": {
          "type": "string",
          "description": "Description of the role."
        }
      },
      "required": ["name"],
      "additionalProperties": false
    },
    "get_roles_by_id_response": {
      "type": "object",
      "properties": {
        "id": { "type": "string", "description": "ID for this role." },
        "name": { "type": "string", "description": "Name of the role." },
        "description": {
          "type": "string",
          "description": "Description of the role."
        }
      },
      "additionalProperties": false
    },
    "patch_roles_by_id_response": {
      "type": "object",
      "properties": {
        "id": { "type": "string", "description": "ID for this role." },
        "name": { "type": "string", "description": "Name of the role." },
        "description": {
          "type": "string",
          "description": "Description of the role."
        }
      },
      "additionalProperties": false
    },
    "patch_roles_by_id_body": {
      "title": "update_role",
      "type": "object",
      "properties": {
        "name": { "type": "string", "description": "Name of this role." },
        "description": {
          "type": "string",
          "description": "Description of this role."
        }
      },
      "additionalProperties": false
    },
    "get_role_permission_response": {
      "type": "object",
      "properties": {
        "resource_server_identifier": {
          "type": "string",
          "description": "Resource server (API) identifier that this permission is for."
        },
        "permission_name": {
          "type": "string",
          "description": "Name of this permission."
        },
        "resource_server_name": {
          "type": "string",
          "description": "Resource server (API) name this permission is for."
        },
        "description": {
          "type": "string",
          "description": "Description of this permission."
        }
      },
      "additionalProperties": false
    },
    "delete_role_permission_assignment_body": {
      "title": "delete_role_permission_assignment",
      "type": "object",
      "required": ["permissions"],
      "additionalProperties": false,
      "properties": {
        "permissions": {
          "type": "array",
          "description": "array of resource_server_identifier, permission_name pairs.",
          "items": {
            "type": "object",
            "required": ["resource_server_identifier", "permission_name"],
            "properties": {
              "resource_server_identifier": {
                "type": "string",
                "description": "Resource server (API) identifier that this permission is for."
              },
              "permission_name": {
                "type": "string",
                "description": "Name of this permission."
              }
            },
            "additionalProperties": false
          },
          "minItems": 1,
          "maxItems": 1000
        }
      }
    },
    "post_role_permission_assignment_body": {
      "title": "post_role_permission_assignment",
      "type": "object",
      "required": ["permissions"],
      "additionalProperties": false,
      "properties": {
        "permissions": {
          "type": "array",
          "description": "array of resource_server_identifier, permission_name pairs.",
          "items": {
            "type": "object",
            "required": ["resource_server_identifier", "permission_name"],
            "properties": {
              "resource_server_identifier": {
                "type": "string",
                "description": "Resource server (API) identifier that this permission is for."
              },
              "permission_name": {
                "type": "string",
                "description": "Name of this permission."
              }
            },
            "additionalProperties": false
          },
          "minItems": 1,
          "maxItems": 1000
        }
      }
    },
    "get_role_user_response": {
      "type": "object",
      "properties": {
        "user_id": { "type": "string", "description": "ID of this user." },
        "picture": {
          "type": "string",
          "description": "URL to a picture for this user."
        },
        "name": { "type": "string", "description": "Name of this user." },
        "email": {
          "type": "string",
          "description": "Email address of this user.",
          "format": "email",
          "defaultValue": "john.doe@gmail.com"
        }
      },
      "additionalProperties": false
    },
    "post_role_users_body": {
      "title": "post_role_users",
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "description": "user_id's of the users to assign the role to.",
          "items": { "format": "user-id-with-max-length", "type": "string" },
          "maxItems": 100
        }
      },
      "required": ["users"],
      "additionalProperties": false
    }
  }
}

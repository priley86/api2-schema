{
  "apiVersion": "2",
  "swaggerVersion": "1.2",
  "basePath": "/",
  "resourcePath": "/Clients",
  "produces": ["application/json"],
  "apis": [
    {
      "path": "/api/v2/clients",
      "operations": [
        {
          "method": "get",
          "summary": "Get clients",
          "notes": "Retrieve clients (applications and SSO integrations) matching provided filters. A list of fields to include or exclude\nmay also be specified. Note:\n<ul>\n  <li>\n    <code>client_id</code>, <code>app_type</code>, <code>name</code>, and <code>description</code> can be retrieved with\n    any scope.\n  </li>\n  <li>\n    <code>callbacks</code>, <code>oidc_backchannel_logout</code>, <code>allowed_origins</code>,\n    <code>web_origins</code>, <code>tenant</code>, <code>global</code>, <code>config_route</code>,\n    <code>callback_url_template</code>, <code>jwt_configuration</code>,\n    <code>jwt_configuration.lifetime_in_seconds</code>, <code>jwt_configuration.secret_encoded</code>,\n    <code>jwt_configuration.scopes</code>, <code>jwt_configuration.alg</code>, <code>api_type</code>,\n    <code>logo_uri</code>, <code>allowed_clients</code>, <code>owners</code>, <code>custom_login_page</code>,\n    <code>custom_login_page_off</code>, <code>sso</code>, <code>addons</code>, <code>form_template</code>,\n    <code>custom_login_page_codeview</code>, <code>resource_servers</code>, <code>client_metadata</code>,\n    <code>mobile</code>, <code>mobile.android</code>, <code>mobile.ios</code>, <code>allowed_logout_urls</code>,\n    <code>token_endpoint_auth_method</code>, <code>is_first_party</code>, <code>oidc_conformant</code>,\n    <code>is_token_endpoint_ip_header_trusted</code>, <code>initiate_login_uri</code>, <code>grant_types</code>,\n    <code>refresh_token</code>, <code>refresh_token.rotation_type</code>, <code>refresh_token.expiration_type</code>,\n    <code>refresh_token.leeway</code>, <code>refresh_token.token_lifetime</code>, <code>organization_usage</code>, and\n    <code>organization_require_behavior</code> properties can only be retrieved with the <code>read:clients</code> or\n    <code>read:client_keys</code> scope.\n  </li>\n  <li>\n    <code>encryption_key</code>, <code>encryption_key.pub</code>, <code>encryption_key.cert</code>,\n    <code>client_secret</code>, and <code>signing_key</code> properties can only be retrieved with the\n    <code>read:client_keys</code> scope.\n  </li>\n</ul>\n",
          "type": "array",
          "nickname": "get_clients",
          "parameters": [
            {
              "paramType": "query",
              "name": "fields",
              "description": "Comma-separated list of fields to include or exclude (based on value provided for include_fields) in the result. Leave empty to retrieve all fields.",
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "include_fields",
              "description": "Whether specified fields are to be included (true) or excluded (false).",
              "type": "boolean"
            },
            {
              "paramType": "query",
              "name": "page",
              "description": "Page index of the results to return. First page is 0.",
              "type": "integer",
              "minimum": 0
            },
            {
              "paramType": "query",
              "name": "per_page",
              "description": "Number of results per page. Default value is 50, maximum value is 100",
              "type": "integer",
              "minimum": 0,
              "maximum": 100
            },
            {
              "paramType": "query",
              "name": "include_totals",
              "description": "Return results inside an object that contains the total result count (true) or as a direct array of results (false, default).",
              "type": "boolean"
            },
            {
              "paramType": "query",
              "name": "is_global",
              "description": "Optional filter on the global client parameter.",
              "type": "boolean"
            },
            {
              "paramType": "query",
              "name": "is_first_party",
              "description": "Optional filter on whether or not a client is a first-party client.",
              "type": "boolean"
            },
            {
              "paramType": "query",
              "name": "app_type",
              "description": "Optional filter by a comma-separated list of application types.",
              "type": "string"
            }
          ],
          "items": { "$ref": "get_clients_response" },
          "responseMessages": [
            { "code": 200, "message": "Clients successfully retrieved." },
            {
              "code": 400,
              "message": "Invalid request query string. The message will vary depending on the cause.",
              "errorCode": "invalid_query_string"
            },
            { "code": 401, "message": "Invalid token." },
            { "code": 401, "message": "Client is not global." },
            {
              "code": 401,
              "message": "Invalid signature received for JSON Web Token validation."
            },
            {
              "code": 403,
              "message": "Insufficient scope; expected any of: read:clients, read:client_keys, read:client_summary",
              "errorCode": "insufficient_scope"
            },
            {
              "code": 403,
              "message": "Some fields cannot be read with the permissions granted by the bearer token scopes. The message will vary depending on the fields and the scopes.",
              "errorCode": "insufficient_scope"
            },
            {
              "code": 429,
              "message": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."
            }
          ],
          "authorizations": {
            "jwt": {
              "scopes": [
                "read:clients",
                "read:client_keys",
                "read:client_credentials",
                "read:client_summary"
              ]
            }
          }
        },
        {
          "method": "post",
          "summary": "Create a client",
          "notes": "Create a new client (application or SSO integration).\n\nNote: We recommend leaving the `client_secret` parameter unspecified to allow the generation of a safe secret.\n\n<div class=\"alert alert-warning\">SSO Integrations created via this endpoint will accept login requests and share user profile information.</div>\n",
          "type": "post_clients_response",
          "nickname": "post_clients",
          "parameters": [
            {
              "paramType": "body",
              "name": "body",
              "type": "post_clients_body",
              "required": true
            }
          ],
          "responseMessages": [
            { "code": 201, "message": "Client successfully created." },
            {
              "code": 400,
              "message": "Invalid request body. The message will vary depending on the cause.",
              "errorCode": "invalid_body"
            },
            { "code": 401, "message": "Invalid token." },
            { "code": 401, "message": "Client is not global." },
            {
              "code": 401,
              "message": "Invalid signature received for JSON Web Token validation."
            },
            {
              "code": 403,
              "message": "Insufficient scope; expected any of: create:clients.",
              "errorCode": "insufficient_scope"
            },
            {
              "code": 403,
              "message": "The account is not allowed to perform this operation.",
              "errorCode": "operation_not_supported"
            },
            {
              "code": 403,
              "message": "You reached the limit of entities of this type for this tenant.",
              "errorCode": "too_many_entities"
            },
            {
              "code": 403,
              "message": "Organizations are only available to first party clients.",
              "errorCode": "invalid_body"
            },
            {
              "code": 409,
              "message": "Another client exists with the same alias.",
              "errorCode": "client_conflict"
            },
            {
              "code": 429,
              "message": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."
            }
          ],
          "consumes": ["application/json", "application/x-www-form-urlencoded"],
          "authorizations": { "jwt": { "scopes": ["create:clients"] } }
        }
      ]
    },
    {
      "path": "/api/v2/clients/{id}",
      "operations": [
        {
          "method": "get",
          "summary": "Get a client",
          "notes": "Retrieve client details. A list of fields to include or exclude may also be specified. Note:\n<ul>\n  <li>\n    <code>client_id</code>, <code>app_type</code>, <code>name</code>, and <code>description</code> can be retrieved with\n    the any of the scopes.\n  </li>\n  <li>\n    <code>callbacks</code>, <code>oidc_backchannel_logout</code>, <code>allowed_origins</code>,\n    <code>web_origins</code>, <code>tenant</code>, <code>global</code>, <code>config_route</code>,\n    <code>callback_url_template</code>, <code>jwt_configuration</code>,\n    <code>jwt_configuration.lifetime_in_seconds</code>, <code>jwt_configuration.secret_encoded</code>,\n    <code>jwt_configuration.scopes</code>, <code>jwt_configuration.alg</code>, <code>api_type</code>,\n    <code>logo_uri</code>, <code>allowed_clients</code>, <code>owners</code>, <code>custom_login_page</code>,\n    <code>custom_login_page_off</code>, <code>sso</code>, <code>addons</code>, <code>form_template</code>,\n    <code>custom_login_page_codeview</code>, <code>resource_servers</code>, <code>client_metadata</code>,\n    <code>mobile</code>, <code>mobile.android</code>, <code>mobile.ios</code>, <code>allowed_logout_urls</code>,\n    <code>token_endpoint_auth_method</code>, <code>is_first_party</code>, <code>oidc_conformant</code>,\n    <code>is_token_endpoint_ip_header_trusted</code>, <code>initiate_login_uri</code>, <code>grant_types</code>,\n    <code>refresh_token</code>, <code>refresh_token.rotation_type</code>, <code>refresh_token.expiration_type</code>,\n    <code>refresh_token.leeway</code>, <code>refresh_token.token_lifetime</code>, <code>organization_usage</code>, and\n    <code>organization_require_behavior</code> properties can only be retrieved with the <code>read:clients</code> or\n    <code>read:client_keys</code> scope.\n  </li>\n  <li>\n    <code>encryption_key</code>, <code>encryption_key.pub</code>, <code>encryption_key.cert</code>,\n    <code>client_secret</code>, and <code>signing_key</code> properties can only be retrieved with the\n    <code>read:client_keys</code> scope.\n  </li>\n</ul>\n",
          "type": "get_clients_by_id_response",
          "nickname": "get_clients_by_id",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "ID of the client to retrieve.",
              "type": "string",
              "required": true
            },
            {
              "paramType": "query",
              "name": "fields",
              "description": "Comma-separated list of fields to include or exclude (based on value provided for include_fields) in the result. Leave empty to retrieve all fields.",
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "include_fields",
              "description": "Whether specified fields are to be included (true) or excluded (false).",
              "type": "boolean"
            }
          ],
          "responseMessages": [
            { "code": 200, "message": "Client successfully retrieved." },
            {
              "code": 400,
              "message": "Invalid request URI. The message will vary depending on the cause.",
              "errorCode": "invalid_uri"
            },
            {
              "code": 400,
              "message": "Invalid request query string. The message will vary depending on the cause.",
              "errorCode": "invalid_query_string"
            },
            { "code": 401, "message": "Invalid token." },
            { "code": 401, "message": "Client is not global." },
            {
              "code": 401,
              "message": "Invalid signature received for JSON Web Token validation."
            },
            {
              "code": 403,
              "message": "Insufficient scope; expected any of: read:clients, read:client_keys, read:client_credentials, read:client_summary.",
              "errorCode": "insufficient_scope"
            },
            {
              "code": 403,
              "message": "Some fields cannot be read with the permissions granted by the bearer token scopes. The message will vary depending on the fields and the scopes.",
              "errorCode": "insufficient_scope"
            },
            {
              "code": 404,
              "message": "Client not found.",
              "errorCode": "inexistent_client"
            },
            {
              "code": 429,
              "message": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."
            }
          ],
          "authorizations": {
            "jwt": {
              "scopes": [
                "read:clients",
                "read:client_keys",
                "read:client_credentials",
                "read:client_summary"
              ]
            }
          }
        },
        {
          "method": "delete",
          "summary": "Delete a client",
          "notes": "Delete a client and related configuration (rules, connections, etc).",
          "type": "void",
          "nickname": "delete_clients_by_id",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "ID of the client to delete.",
              "type": "string",
              "required": true
            }
          ],
          "responseMessages": [
            { "code": 204, "message": "Client successfully deleted." },
            {
              "code": 400,
              "message": "Invalid request URI. The message will vary depending on the cause.",
              "errorCode": "invalid_uri"
            },
            {
              "code": 400,
              "errorCode": "unowned_resource",
              "message": "Global client cannot be deleted."
            },
            { "code": 401, "message": "Invalid token." },
            { "code": 401, "message": "Client is not global." },
            {
              "code": 401,
              "message": "Invalid signature received for JSON Web Token validation."
            },
            {
              "code": 403,
              "message": "Insufficient scope; expected any of: delete:clients.",
              "errorCode": "insufficient_scope"
            },
            {
              "code": 429,
              "message": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."
            }
          ],
          "authorizations": { "jwt": { "scopes": ["delete:clients"] } }
        },
        {
          "method": "patch",
          "summary": "Update a client",
          "notes": "Note: The `client_secret` and `signing_key` attributes can only be updated with the `update:client_keys` scope.",
          "type": "patch_clients_by_id_response",
          "nickname": "patch_clients_by_id",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "ID of the client to update.",
              "type": "string",
              "required": true
            },
            {
              "paramType": "body",
              "name": "body",
              "type": "patch_clients_by_id_body",
              "required": true
            }
          ],
          "responseMessages": [
            { "code": 200, "message": "Client successfully updated." },
            {
              "code": 400,
              "message": "Invalid request URI. The message will vary depending on the cause.",
              "errorCode": "invalid_uri"
            },
            {
              "code": 400,
              "message": "Invalid request body. The message will vary depending on the cause.",
              "errorCode": "invalid_body"
            },
            { "code": 401, "message": "Invalid token." },
            { "code": 401, "message": "Client is not global." },
            {
              "code": 401,
              "message": "Invalid signature received for JSON Web Token validation."
            },
            {
              "code": 403,
              "message": "Insufficient scope; expected any of: update:clients, update:client_keys.",
              "errorCode": "insufficient_scope"
            },
            {
              "code": 403,
              "message": "Some fields cannot be updated with the permissions granted by the bearer token scopes. The message will vary depending on the fields and the scopes.",
              "errorCode": "insufficient_scope"
            },
            {
              "code": 403,
              "message": "The account is not allowed to perform this operation.",
              "errorCode": "operation_not_supported"
            },
            {
              "code": 403,
              "message": "Organizations are only available to first party clients.",
              "errorCode": "invalid_body"
            },
            {
              "code": 404,
              "message": "Client not found.",
              "errorCode": "inexistent_client"
            },
            {
              "code": 429,
              "message": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."
            }
          ],
          "consumes": ["application/json", "application/x-www-form-urlencoded"],
          "authorizations": {
            "jwt": {
              "scopes": [
                "update:clients",
                "update:client_keys",
                "update:client_credentials"
              ]
            }
          }
        }
      ]
    },
    {
      "path": "/api/v2/clients/{id}/rotate-secret",
      "operations": [
        {
          "method": "post",
          "summary": "Rotate a client secret",
          "notes": "Rotate a client secret.\n\nNote: The generated secret is NOT base64 encoded.\n",
          "type": "post_rotate-secret_response",
          "nickname": "post_rotate-secret",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "ID of the client that will rotate secrets.",
              "type": "string",
              "required": true
            }
          ],
          "responseMessages": [
            { "code": 200, "message": "Secret successfully rotated." },
            {
              "code": 400,
              "message": "Invalid request URI. The message will vary depending on the cause.",
              "errorCode": "invalid_uri"
            },
            {
              "code": 400,
              "message": "Invalid request body. The message will vary depending on the cause.",
              "errorCode": "invalid_body"
            },
            { "code": 401, "message": "Invalid token." },
            { "code": 401, "message": "Client is not global." },
            {
              "code": 401,
              "message": "Invalid signature received for JSON Web Token validation."
            },
            {
              "code": 403,
              "message": "Insufficient scope; expected any of: update:client_keys.",
              "errorCode": "insufficient_scope"
            },
            {
              "code": 403,
              "message": "Some fields cannot be updated with the permissions granted by the bearer token scopes. The message will vary depending on the fields and the scopes.",
              "errorCode": "insufficient_scope"
            },
            {
              "code": 404,
              "message": "Client not found.",
              "errorCode": "inexistent_client"
            },
            {
              "code": 429,
              "message": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."
            }
          ],
          "authorizations": { "jwt": { "scopes": ["update:client_keys"] } }
        }
      ]
    }
  ],
  "consumes": ["application/json", "application/x-www-form-urlencoded"],
  "models": {
    "get_clients_response": {
      "type": "object",
      "properties": {
        "client_id": {
          "type": "string",
          "description": "ID of this client.",
          "defaultValue": "AaiyAPdpYdesoKnqjj8HJqRn4T5titww"
        },
        "tenant": {
          "type": "string",
          "description": "Name of the tenant this client belongs to.",
          "defaultValue": ""
        },
        "name": {
          "type": "string",
          "description": "Name of this client (min length: 1 character, does not allow `<` or `>`).",
          "defaultValue": "My application"
        },
        "description": {
          "type": "string",
          "description": "Free text description of this client (max length: 140 characters).",
          "defaultValue": ""
        },
        "global": {
          "type": "boolean",
          "description": "Whether this is your global 'All Applications' client representing legacy tenant settings (true) or a regular client (false).",
          "defaultValue": false
        },
        "client_secret": {
          "type": "string",
          "description": "Client secret (which you must not make public).",
          "defaultValue": "MG_TNT2ver-SylNat-_VeMmd-4m0Waba0jr1troztBniSChEw0glxEmgEi2Kw40H",
          "secret": true
        },
        "app_type": {
          "type": "string",
          "description": "Type of client used to determine which settings are applicable. Can be `spa`, `native`, `non_interactive`, or `regular_web`.",
          "defaultValue": ""
        },
        "logo_uri": {
          "type": "string",
          "description": "URL of the logo to display for this client. Recommended size is 150x150 pixels."
        },
        "is_first_party": {
          "type": "boolean",
          "description": "Whether this client a first party client (true) or not (false).",
          "defaultValue": false
        },
        "oidc_conformant": {
          "type": "boolean",
          "description": "Whether this client conforms to <a href='https://auth0.com/docs/api-auth/tutorials/adoption'>strict OIDC specifications</a> (true) or uses legacy features (false).",
          "defaultValue": false
        },
        "callbacks": {
          "type": "array",
          "items": { "type": "string" },
          "description": "Comma-separated list of URLs whitelisted for Auth0 to use as a callback to the client after authentication.",
          "defaultValue": "http://localhost/callback"
        },
        "allowed_origins": {
          "type": "array",
          "items": { "type": "string" },
          "description": "Comma-separated list of URLs allowed to make requests from JavaScript to Auth0 API (typically used with CORS). By default, all your callback URLs will be allowed. This field allows you to enter other origins if necessary. You can also use wildcards at the subdomain level (e.g., https://*.contoso.com). Query strings and hash information are not taken into account when validating these URLs."
        },
        "web_origins": {
          "type": "array",
          "items": { "type": "string" },
          "description": "Comma-separated list of allowed origins for use with <a href='https://auth0.com/docs/cross-origin-authentication'>Cross-Origin Authentication</a>, <a href='https://auth0.com/docs/flows/concepts/device-auth'>Device Flow</a>, and <a href='https://auth0.com/docs/protocols/oauth2#how-response-mode-works'>web message response mode</a>."
        },
        "client_aliases": {
          "type": "array",
          "items": { "type": "string" },
          "description": "List of audiences/realms for SAML protocol. Used by the wsfed addon."
        },
        "allowed_clients": {
          "type": "array",
          "items": { "type": "string" },
          "description": "List of allow clients and API ids that are allowed to make delegation requests. Empty means all all your clients are allowed."
        },
        "allowed_logout_urls": {
          "type": "array",
          "description": "Comma-separated list of URLs that are valid to redirect to after logout from Auth0. Wildcards are allowed for subdomains.",
          "items": { "type": "string" },
          "defaultValue": "http://localhost/logoutCallback"
        },
        "oidc_backchannel_logout": {
          "$ref": "get_clients_response_oidc_backchannel_logout",
          "description": "Configuration for OIDC backchannel logout"
        },
        "grant_types": {
          "type": "array",
          "items": { "type": "string" },
          "description": "List of grant types supported for this application. Can include `authorization_code`, `implicit`, `refresh_token`, `client_credentials`, `password`, `http://auth0.com/oauth/grant-type/password-realm`, `http://auth0.com/oauth/grant-type/mfa-oob`, `http://auth0.com/oauth/grant-type/mfa-otp`, `http://auth0.com/oauth/grant-type/mfa-recovery-code`, and `urn:ietf:params:oauth:grant-type:device_code`."
        },
        "jwt_configuration": {
          "$ref": "get_clients_response_jwt_configuration",
          "description": "Configuration related to JWTs for the client."
        },
        "signing_keys": {
          "type": "array",
          "description": "Signing certificates associated with this client.",
          "items": {
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "pkcs7": {
                "type": "string",
                "description": "Signing certificate public key and chain in PKCS#7 (.P7B) format.",
                "defaultValue": ""
              },
              "cert": {
                "type": "string",
                "description": "Signing certificate public key in X.590 (.CER) format.",
                "defaultValue": ""
              },
              "subject": {
                "type": "string",
                "description": "Subject name for this certificate in the format `/CN={domain}`.",
                "defaultValue": ""
              }
            }
          }
        },
        "encryption_key": {
          "$ref": "get_clients_response_encryption_key",
          "description": "Encryption used for WsFed responses with this client."
        },
        "sso": {
          "type": "boolean",
          "description": "Applies only to SSO clients and determines whether Auth0 will handle Single Sign On (true) or whether the Identity Provider will (false).",
          "defaultValue": false
        },
        "sso_disabled": {
          "type": "boolean",
          "description": "Whether Single Sign On is disabled (true) or enabled (true). Defaults to true.",
          "defaultValue": false
        },
        "cross_origin_authentication": {
          "type": "boolean",
          "description": "Whether this client can be used to make cross-origin authentication requests (true) or it is not allowed to make such requests (false)."
        },
        "cross_origin_loc": {
          "type": "string",
          "format": "url",
          "description": "URL of the location in your site where the cross origin verification takes place for the cross-origin auth flow when performing Auth in your own domain instead of Auth0 hosted login page."
        },
        "custom_login_page_on": {
          "type": "boolean",
          "description": "Whether a custom login page is to be used (true) or the default provided login page (false).",
          "defaultValue": true
        },
        "custom_login_page": {
          "type": "string",
          "description": "The content (HTML, CSS, JS) of the custom login page.",
          "defaultValue": ""
        },
        "custom_login_page_preview": {
          "type": "string",
          "description": "The content (HTML, CSS, JS) of the custom login page. (Used on Previews)",
          "defaultValue": ""
        },
        "form_template": {
          "type": "string",
          "description": "HTML form template to be used for WS-Federation.",
          "defaultValue": ""
        },
        "addons": {
          "$ref": "get_clients_response_addons",
          "description": "Addons enabled for this client and their associated configurations."
        },
        "token_endpoint_auth_method": {
          "type": "string",
          "defaultValue": "none",
          "enum": ["none", "client_secret_post", "client_secret_basic"],
          "description": "Defines the requested authentication method for the token endpoint. Can be `none` (public client without a client secret), `client_secret_post` (client uses HTTP POST parameters), or `client_secret_basic` (client uses HTTP Basic)."
        },
        "client_metadata": {
          "$ref": "get_clients_response_client_metadata",
          "description": "Metadata associated with the client, in the form of an object with string values (max 255 chars).  Maximum of 10 metadata properties allowed.  Field names (max 255 chars) are alphanumeric and may only include the following special characters:  :,-+=_*?\"/\\()<>@\t[Tab] [Space]"
        },
        "mobile": {
          "$ref": "get_clients_response_mobile",
          "description": "Additional configuration for native mobile apps."
        },
        "initiate_login_uri": {
          "type": "string",
          "format": "absolute-https-uri-or-empty",
          "description": "Initiate login uri, must be https"
        },
        "native_social_login": {
          "$ref": "get_clients_response_native_social_login",
          "description": "Configure native social settings"
        },
        "refresh_token": {
          "$ref": "get_clients_response_refresh_token",
          "description": "Refresh token configuration"
        },
        "organization_usage": {
          "type": "string",
          "enum": ["deny", "allow", "require"],
          "description": "Defines how to proceed during an authentication transaction with regards an organization. Can be `deny` (default), `allow` or `require`.",
          "defaultValue": "deny"
        },
        "organization_require_behavior": {
          "type": "string",
          "enum": ["no_prompt", "pre_login_prompt", "post_login_prompt"],
          "description": "Defines how to proceed during an authentication transaction when `client.organization_usage: 'require'`. Can be `no_prompt` (default) or `pre_login_prompt`.",
          "defaultValue": "no_prompt"
        }
      }
    },
    "get_clients_response_oidc_backchannel_logout": {
      "type": "object",
      "description": "Configuration for OIDC backchannel logout",
      "properties": {
        "backchannel_logout_urls": {
          "type": "array",
          "description": "Comma-separated list of URLs that are valid to call back from Auth0 for OIDC backchannel logout. Currently only one URL is allowed.",
          "items": { "type": "string", "format": "callback-url" }
        }
      }
    },
    "get_clients_response_jwt_configuration": {
      "description": "Configuration related to JWTs for the client.",
      "type": "object",
      "properties": {
        "lifetime_in_seconds": {
          "description": "Number of seconds the JWT will be valid for (affects `exp` claim).",
          "type": "integer",
          "defaultValue": 36000
        },
        "secret_encoded": {
          "description": "Whether the client secret is base64 encoded (true) or unencoded (false).",
          "type": "boolean",
          "defaultValue": true
        },
        "scopes": {
          "$ref": "get_clients_response_scopes",
          "description": "Configuration related to id token claims for the client."
        },
        "alg": {
          "type": "string",
          "defaultValue": "HS256",
          "enum": ["HS256", "RS256"],
          "description": "Algorithm used to sign JWTs. Can be `HS256` or `RS256`."
        }
      }
    },
    "get_clients_response_scopes": {
      "type": "object",
      "defaultValue": {},
      "description": "Configuration related to id token claims for the client."
    },
    "get_clients_response_encryption_key": {
      "type": "object",
      "description": "Encryption used for WsFed responses with this client.",
      "properties": {
        "pub": {
          "type": "string",
          "description": "Encryption Public RSA Key."
        },
        "cert": {
          "type": "string",
          "description": "Encryption certificate for public key in X.590 (.CER) format."
        },
        "subject": {
          "type": "string",
          "description": "Encryption certificate name for this certificate in the format `/CN={domain}`."
        }
      },
      "secret": true
    },
    "get_clients_response_addons": {
      "type": "object",
      "additionalProperties": false,
      "description": "Addons enabled for this client and their associated configurations.",
      "properties": {
        "aws": {
          "$ref": "get_clients_response_aws",
          "description": "AWS addon configuration."
        },
        "azure_blob": {
          "$ref": "get_clients_response_azure_blob",
          "description": "Azure Blob Storage addon configuration."
        },
        "azure_sb": {
          "$ref": "get_clients_response_azure_sb",
          "description": "Azure Storage Bus addon configuration."
        },
        "rms": {
          "$ref": "get_clients_response_rms",
          "description": "Active Directory Rights Management Service SSO configuration."
        },
        "mscrm": {
          "$ref": "get_clients_response_mscrm",
          "description": "Microsoft Dynamics CRM SSO configuration."
        },
        "slack": {
          "$ref": "get_clients_response_slack",
          "description": "Slack team or workspace name usually first segment in your Slack URL. e.g. `https://acme-org.slack.com` would be `acme-org`."
        },
        "sentry": {
          "$ref": "get_clients_response_sentry",
          "description": "Sentry SSO configuration."
        },
        "box": {
          "$ref": "get_clients_response_box",
          "description": "Box SSO indicator (no configuration settings needed for Box SSO)."
        },
        "cloudbees": {
          "$ref": "get_clients_response_cloudbees",
          "description": "CloudBees SSO indicator (no configuration settings needed for CloudBees SSO)."
        },
        "concur": {
          "$ref": "get_clients_response_concur",
          "description": "Concur SSO indicator (no configuration settings needed for Concur SSO)."
        },
        "dropbox": {
          "$ref": "get_clients_response_dropbox",
          "description": "Dropbox SSO indicator (no configuration settings needed for Dropbox SSO)."
        },
        "echosign": {
          "$ref": "get_clients_response_echosign",
          "description": "Adobe EchoSign SSO configuration."
        },
        "egnyte": {
          "$ref": "get_clients_response_egnyte",
          "description": "Egnyte SSO configuration."
        },
        "firebase": {
          "$ref": "get_clients_response_firebase",
          "description": "Google Firebase addon configuration."
        },
        "newrelic": {
          "$ref": "get_clients_response_newrelic",
          "description": "New Relic SSO configuration."
        },
        "office365": {
          "$ref": "get_clients_response_office365",
          "description": "Microsoft Office 365 SSO configuration."
        },
        "salesforce": {
          "$ref": "get_clients_response_salesforce",
          "description": "Salesforce SSO configuration."
        },
        "salesforce_api": {
          "$ref": "get_clients_response_salesforce_api",
          "description": "Salesforce API addon configuration."
        },
        "salesforce_sandbox_api": {
          "$ref": "get_clients_response_salesforce_sandbox_api",
          "description": "Salesforce Sandbox addon configuration."
        },
        "samlp": {
          "$ref": "get_clients_response_samlp",
          "description": "SAML2 addon indicator (no configuration settings needed for SAML2 addon)."
        },
        "layer": {
          "$ref": "get_clients_response_layer",
          "description": "Layer addon configuration."
        },
        "sap_api": {
          "$ref": "get_clients_response_sap_api",
          "description": "SAP API addon configuration."
        },
        "sharepoint": {
          "$ref": "get_clients_response_sharepoint",
          "description": "SharePoint SSO configuration."
        },
        "springcm": {
          "$ref": "get_clients_response_springcm",
          "description": "SpringCM SSO configuration."
        },
        "wams": {
          "$ref": "get_clients_response_wams",
          "description": "Windows Azure Mobile Services addon configuration."
        },
        "wsfed": {
          "$ref": "get_clients_response_wsfed",
          "description": "WS-Fed (WIF) addon indicator. Actual configuration is stored in `callback` and `client_aliases` properties on the client."
        },
        "zendesk": {
          "$ref": "get_clients_response_zendesk",
          "description": "Zendesk SSO configuration."
        },
        "zoom": {
          "$ref": "get_clients_response_zoom",
          "description": "Zoom SSO configuration."
        },
        "sso_integration": { "$ref": "get_clients_response_sso_integration" }
      }
    },
    "get_clients_response_aws": {
      "type": "object",
      "properties": {
        "principal": {
          "type": "string",
          "description": "AWS principal ARN, e.g. `arn:aws:iam::010616021751:saml-provider/idpname`"
        },
        "role": {
          "type": "string",
          "description": "AWS role ARN, e.g. `arn:aws:iam::010616021751:role/foo`"
        },
        "lifetime_in_seconds": {
          "type": "integer",
          "minimum": 900,
          "maximum": 43200,
          "description": "AWS token lifetime in seconds"
        }
      },
      "description": "AWS addon configuration.",
      "defaultValue": {}
    },
    "get_clients_response_azure_blob": {
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string",
          "pattern": "^([a-z0-9]){3,24}$",
          "description": "Your Azure storage account name. Usually first segment in your Azure storage URL. e.g. `https://acme-org.blob.core.windows.net` would be the account name `acme-org`."
        },
        "storageAccessKey": {
          "type": "string",
          "pattern": "^([A-Za-z0-9+/]){86}==$",
          "description": "Access key associated with this storage account.",
          "secret": true
        },
        "containerName": {
          "type": "string",
          "pattern": "^([a-z0-9]){1}([a-z0-9-]){2,62}$",
          "description": "Container to request a token for. e.g. `my-container`."
        },
        "blobName": {
          "type": "string",
          "pattern": "^(.){1,1024}$",
          "description": "Entity to request a token for. e.g. `my-blob`. If blank the computed SAS will apply to the entire storage container."
        },
        "expiration": {
          "type": "integer",
          "minimum": 0,
          "exclusiveMinimum": true,
          "description": "Expiration in minutes for the generated token (default of 5 minutes)."
        },
        "signedIdentifier": {
          "type": "string",
          "description": "Shared access policy identifier defined in your storage account resource."
        },
        "blob_read": {
          "type": "boolean",
          "description": "Indicates if the issued token has permission to read the content, properties, metadata and block list. Use the blob as the source of a copy operation."
        },
        "blob_write": {
          "type": "boolean",
          "description": "Indicates if the issued token has permission to create or write content, properties, metadata, or block list. Snapshot or lease the blob. Resize the blob (page blob only). Use the blob as the destination of a copy operation within the same account."
        },
        "blob_delete": {
          "type": "boolean",
          "description": "Indicates if the issued token has permission to delete the blob."
        },
        "container_read": {
          "type": "boolean",
          "description": "Indicates if the issued token has permission to read the content, properties, metadata or block list of any blob in the container. Use any blob in the container as the source of a copy operation"
        },
        "container_write": {
          "type": "boolean",
          "description": "Indicates that for any blob in the container if the issued token has permission to create or write content, properties, metadata, or block list. Snapshot or lease the blob. Resize the blob (page blob only). Use the blob as the destination of a copy operation within the same account."
        },
        "container_delete": {
          "type": "boolean",
          "description": "Indicates if issued token has permission to delete any blob in the container."
        },
        "container_list": {
          "type": "boolean",
          "description": "Indicates if the issued token has permission to list blobs in the container."
        }
      },
      "description": "Azure Blob Storage addon configuration.",
      "defaultValue": {}
    },
    "get_clients_response_azure_sb": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "description": "Your Azure Service Bus namespace. Usually the first segment of your Service Bus URL (e.g. `https://acme-org.servicebus.windows.net` would be `acme-org`)."
        },
        "sasKeyName": {
          "type": "string",
          "description": "Your shared access policy name defined in your Service Bus entity."
        },
        "sasKey": {
          "type": "string",
          "description": "Primary Key associated with your shared access policy.",
          "secret": true
        },
        "entityPath": {
          "type": "string",
          "description": "Entity you want to request a token for. e.g. `my-queue`.'"
        },
        "expiration": {
          "type": "integer",
          "description": "Optional expiration in minutes for the generated token. Defaults to 5 minutes."
        }
      },
      "description": "Azure Storage Bus addon configuration.",
      "defaultValue": {}
    },
    "get_clients_response_rms": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "format": "url",
          "description": "URL of your Rights Management Server. It can be internal or external, but users will have to be able to reach it."
        }
      },
      "required": ["url"],
      "defaultValue": {},
      "description": "Active Directory Rights Management Service SSO configuration."
    },
    "get_clients_response_mscrm": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "format": "url",
          "description": "Microsoft Dynamics CRM application URL."
        }
      },
      "required": ["url"],
      "defaultValue": {},
      "description": "Microsoft Dynamics CRM SSO configuration."
    },
    "get_clients_response_slack": {
      "type": "object",
      "properties": {
        "team": { "type": "string", "description": "Slack team name." }
      },
      "required": ["team"],
      "defaultValue": {},
      "description": "Slack team or workspace name usually first segment in your Slack URL. e.g. `https://acme-org.slack.com` would be `acme-org`."
    },
    "get_clients_response_sentry": {
      "type": "object",
      "properties": {
        "org_slug": {
          "type": "string",
          "description": "Generated slug for your Sentry organization. Found in your Sentry URL. e.g. `https://sentry.acme.com/acme-org/` would be `acme-org`."
        },
        "base_url": {
          "type": "string",
          "description": "URL prefix only if running Sentry Community Edition, otherwise leave should be blank."
        }
      },
      "defaultValue": {},
      "description": "Sentry SSO configuration."
    },
    "get_clients_response_box": {
      "type": "object",
      "defaultValue": {},
      "description": "Box SSO indicator (no configuration settings needed for Box SSO)."
    },
    "get_clients_response_cloudbees": {
      "type": "object",
      "defaultValue": {},
      "description": "CloudBees SSO indicator (no configuration settings needed for CloudBees SSO)."
    },
    "get_clients_response_concur": {
      "type": "object",
      "defaultValue": {},
      "description": "Concur SSO indicator (no configuration settings needed for Concur SSO)."
    },
    "get_clients_response_dropbox": {
      "type": "object",
      "defaultValue": {},
      "description": "Dropbox SSO indicator (no configuration settings needed for Dropbox SSO)."
    },
    "get_clients_response_echosign": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "string",
          "description": "Your custom domain found in your EchoSign URL. e.g. `https://acme-org.echosign.com` would be `acme-org`."
        }
      },
      "defaultValue": {},
      "description": "Adobe EchoSign SSO configuration."
    },
    "get_clients_response_egnyte": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "string",
          "description": "Your custom domain found in your Egnyte URL. e.g. `https://acme-org.egnyte.com` would be `acme-org`."
        }
      },
      "defaultValue": {},
      "description": "Egnyte SSO configuration."
    },
    "get_clients_response_firebase": {
      "type": "object",
      "properties": {
        "secret": {
          "type": "string",
          "description": "Google Firebase Secret. (SDK 2 only)."
        },
        "private_key_id": {
          "type": "string",
          "description": "Optional ID of the private key to obtain kid header in the issued token (SDK v3+ tokens only).",
          "secret": true
        },
        "private_key": {
          "type": "string",
          "description": "Private Key for signing the token (SDK v3+ tokens only).",
          "secret": true
        },
        "client_email": {
          "type": "string",
          "description": "ID of the Service Account you have created (shown as `client_email` in the generated JSON file, SDK v3+ tokens only)."
        },
        "lifetime_in_seconds": {
          "type": "integer",
          "description": "Optional expiration in seconds for the generated token. Defaults to 3600 seconds (SDK v3+ tokens only)."
        }
      },
      "defaultValue": {},
      "description": "Google Firebase addon configuration."
    },
    "get_clients_response_newrelic": {
      "type": "object",
      "properties": {
        "account": {
          "type": "string",
          "description": "Your New Relic Account ID found in your New Relic URL after the `/accounts/` path. e.g. `https://rpm.newrelic.com/accounts/123456/query` would be `123456`."
        }
      },
      "defaultValue": {},
      "description": "New Relic SSO configuration."
    },
    "get_clients_response_office365": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "string",
          "description": "Your Office 365 domain name. e.g. `acme-org.com`."
        },
        "connection": {
          "type": "string",
          "description": "Optional Auth0 database connection for testing an already-configured Office 365 tenant."
        }
      },
      "defaultValue": {},
      "description": "Microsoft Office 365 SSO configuration."
    },
    "get_clients_response_salesforce": {
      "type": "object",
      "properties": {
        "entity_id": {
          "type": "string",
          "format": "url",
          "description": "Arbitrary logical URL that identifies the Saleforce resource. e.g. `https://acme-org.com`."
        }
      },
      "defaultValue": {},
      "description": "Salesforce SSO configuration."
    },
    "get_clients_response_salesforce_api": {
      "type": "object",
      "properties": {
        "clientid": {
          "type": "string",
          "description": "Consumer Key assigned by Salesforce to the Connected App.",
          "secret": true
        },
        "principal": {
          "type": "string",
          "description": "Name of the property in the user object that maps to a Salesforce username. e.g. `email`.",
          "secret": true
        },
        "communityName": { "type": "string", "description": "Community name." },
        "community_url_section": {
          "type": "string",
          "description": "Community url section."
        }
      },
      "defaultValue": {},
      "description": "Salesforce API addon configuration."
    },
    "get_clients_response_salesforce_sandbox_api": {
      "type": "object",
      "properties": {
        "clientid": {
          "type": "string",
          "description": "Consumer Key assigned by Salesforce to the Connected App."
        },
        "principal": {
          "type": "string",
          "description": "Name of the property in the user object that maps to a Salesforce username. e.g. `email`."
        },
        "communityName": { "type": "string", "description": "Community name." },
        "community_url_section": {
          "type": "string",
          "description": "Community url section."
        }
      },
      "defaultValue": {},
      "description": "Salesforce Sandbox addon configuration."
    },
    "get_clients_response_samlp": {
      "type": "object",
      "properties": {
        "mappings": { "$ref": "get_clients_response_mappings" },
        "audience": { "type": "string" },
        "recipient": { "type": "string" },
        "createUpnClaim": { "type": "boolean" },
        "mapUnknownClaimsAsIs": { "type": "boolean" },
        "passthroughClaimsWithNoMapping": { "type": "boolean" },
        "mapIdentities": { "type": "boolean" },
        "signatureAlgorithm": { "type": "string" },
        "digestAlgorithm": { "type": "string" },
        "issuer": { "type": "string" },
        "destination": { "type": "string" },
        "lifetimeInSeconds": { "type": "integer" },
        "signResponse": { "type": "boolean" },
        "nameIdentifierFormat": { "type": "string" },
        "nameIdentifierProbes": {
          "type": "array",
          "items": { "type": "string", "minLength": 1 },
          "uniqueItems": true
        },
        "authnContextClassRef": { "type": "string" }
      },
      "defaultValue": {},
      "description": "SAML2 addon indicator (no configuration settings needed for SAML2 addon)."
    },
    "get_clients_response_mappings": { "type": "object" },
    "get_clients_response_layer": {
      "type": "object",
      "properties": {
        "providerId": {
          "type": "string",
          "description": "Provider ID of your Layer account"
        },
        "keyId": {
          "type": "string",
          "description": "Authentication Key identifier used to sign the Layer token.",
          "secret": true
        },
        "privateKey": {
          "type": "string",
          "description": "Private key for signing the Layer token.",
          "secret": true
        },
        "principal": {
          "type": "string",
          "description": "Name of the property used as the unique user id in Layer. If not specified `user_id` is used."
        },
        "expiration": {
          "type": "integer",
          "minimum": 0,
          "exclusiveMinimum": true,
          "description": "Optional expiration in minutes for the generated token. Defaults to 5 minutes."
        }
      },
      "required": ["providerId", "keyId", "privateKey"],
      "defaultValue": {},
      "description": "Layer addon configuration."
    },
    "get_clients_response_sap_api": {
      "type": "object",
      "properties": {
        "clientid": {
          "type": "string",
          "description": "If activated in the OAuth 2.0 client configuration (transaction SOAUTH2) the SAML attribute client_id must be set and equal the client_id form parameter of the access token request."
        },
        "usernameAttribute": {
          "type": "string",
          "description": "Name of the property in the user object that maps to a SAP username. e.g. `email`."
        },
        "tokenEndpointUrl": {
          "type": "string",
          "format": "url",
          "description": "Your SAP OData server OAuth2 token endpoint URL."
        },
        "scope": {
          "type": "string",
          "description": "Requested scope for SAP APIs."
        },
        "servicePassword": {
          "type": "string",
          "description": "Service account password to use to authenticate API calls to the token endpoint.",
          "secret": true
        },
        "nameIdentifierFormat": {
          "type": "string",
          "description": "NameID element of the Subject which can be used to express the user's identity. Defaults to `urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified`."
        }
      },
      "defaultValue": {},
      "description": "SAP API addon configuration."
    },
    "get_clients_response_sharepoint": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "Internal SharePoint application URL."
        },
        "external_url": {
          "type": "array",
          "items": { "type": "string" },
          "description": "External SharePoint application URLs if exposed to the Internet."
        }
      },
      "defaultValue": {},
      "description": "SharePoint SSO configuration."
    },
    "get_clients_response_springcm": {
      "type": "object",
      "properties": {
        "acsurl": {
          "type": "string",
          "description": "SpringCM ACS URL, e.g. `https://na11.springcm.com/atlas/sso/SSOEndpoint.ashx`."
        }
      },
      "defaultValue": {},
      "description": "SpringCM SSO configuration."
    },
    "get_clients_response_wams": {
      "type": "object",
      "properties": {
        "masterkey": {
          "type": "string",
          "description": "Your master key for Windows Azure Mobile Services.",
          "secret": true
        }
      },
      "defaultValue": {},
      "description": "Windows Azure Mobile Services addon configuration."
    },
    "get_clients_response_wsfed": {
      "type": "object",
      "defaultValue": {},
      "description": "WS-Fed (WIF) addon indicator. Actual configuration is stored in `callback` and `client_aliases` properties on the client."
    },
    "get_clients_response_zendesk": {
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string",
          "description": "Zendesk account name usually first segment in your Zendesk URL. e.g. `https://acme-org.zendesk.com` would be `acme-org`."
        }
      },
      "defaultValue": {},
      "description": "Zendesk SSO configuration."
    },
    "get_clients_response_zoom": {
      "type": "object",
      "properties": {
        "account": {
          "type": "string",
          "description": "Zoom account name usually first segment of your Zoom URL, e.g. `https://acme-org.zoom.us` would be `acme-org`."
        }
      },
      "defaultValue": {},
      "description": "Zoom SSO configuration."
    },
    "get_clients_response_sso_integration": {
      "type": "object",
      "properties": {
        "name": { "type": "string", "description": "SSO integration name" },
        "version": {
          "type": "string",
          "description": "SSO integration version installed"
        }
      }
    },
    "get_clients_response_client_metadata": {
      "type": "object",
      "description": "Metadata associated with the client, in the form of an object with string values (max 255 chars).  Maximum of 10 metadata properties allowed.  Field names (max 255 chars) are alphanumeric and may only include the following special characters:  :,-+=_*?\"/\\()<>@\t[Tab] [Space]",
      "maxProperties": 10,
      "patternProperties": {
        "^[A-Za-z0-9:,\\-+=_*\\?\"/\\\\()<>@\t ]{1,255}$": {
          "anyOf": [{ "type": "string", "maxLength": 255 }, { "type": "null" }]
        }
      },
      "additionalProperties": false
    },
    "get_clients_response_mobile": {
      "description": "Additional configuration for native mobile apps.",
      "type": "object",
      "properties": {
        "android": {
          "$ref": "get_clients_response_android",
          "description": "Android native app configuration."
        },
        "ios": {
          "$ref": "get_clients_response_ios",
          "description": "iOS native app configuration."
        }
      }
    },
    "get_clients_response_android": {
      "description": "Android native app configuration.",
      "type": "object",
      "defaultValue": {
        "app_package_name": "com.example",
        "sha256_cert_fingerprints": ["D8:A0:83:..."]
      },
      "properties": {
        "app_package_name": {
          "description": "App package name found in AndroidManifest.xml.",
          "type": "string",
          "defaultValue": ""
        },
        "sha256_cert_fingerprints": {
          "description": "SHA256 fingerprints of the app's signing certificate. Multiple fingerprints can be used to support different versions of your app, such as debug and production builds.",
          "type": "array",
          "items": { "type": "string", "minLength": 1 },
          "minItems": 1,
          "defaultValue": []
        }
      }
    },
    "get_clients_response_ios": {
      "description": "iOS native app configuration.",
      "type": "object",
      "defaultValue": {
        "team_id": "9JA89QQLNQ",
        "app_bundle_identifier": "com.my.bundle.id"
      },
      "properties": {
        "team_id": {
          "description": "Identifier assigned to the Apple account that signs and uploads the app to the store.",
          "type": "string",
          "defaultValue": ""
        },
        "app_bundle_identifier": {
          "description": "Assigned by developer to the app as its unique identifier inside the store. Usually this is a reverse domain plus the app name, e.g. `com.you.MyApp`.",
          "type": "string",
          "defaultValue": ""
        }
      }
    },
    "get_clients_response_native_social_login": {
      "description": "Configure native social settings",
      "type": "object",
      "properties": {
        "apple": {
          "$ref": "get_clients_response_apple",
          "description": "Native Social Login support for the Apple connection"
        },
        "facebook": {
          "$ref": "get_clients_response_facebook",
          "description": "Native Social Login support for the Facebook connection"
        }
      },
      "minProperties": 1,
      "additionalProperties": false
    },
    "get_clients_response_apple": {
      "description": "Native Social Login support for the Apple connection",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Determine whether or not to allow signing in natively using an Apple authorization code",
          "type": "boolean",
          "defaultValue": false
        }
      },
      "minProperties": 1,
      "additionalProperties": false
    },
    "get_clients_response_facebook": {
      "swagger": false,
      "description": "Native Social Login support for the Facebook connection",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Determine whether or not to allow signing in natively using Facebook",
          "type": "boolean",
          "defaultValue": false
        }
      },
      "minProperties": 1,
      "additionalProperties": false
    },
    "get_clients_response_refresh_token": {
      "type": "object",
      "description": "Refresh token configuration",
      "properties": {
        "rotation_type": {
          "type": "string",
          "description": "Refresh token rotation types, one of: rotating, non-rotating",
          "enum": ["rotating", "non-rotating"],
          "defaultValue": "non-rotating"
        },
        "expiration_type": {
          "type": "string",
          "description": "Refresh token expiration types, one of: expiring, non-expiring",
          "enum": ["expiring", "non-expiring"],
          "defaultValue": "non-expiring"
        },
        "leeway": {
          "type": "integer",
          "description": "Period in seconds where the previous refresh token can be exchanged without triggering breach detection",
          "defaultValue": 0,
          "minimum": 0
        },
        "token_lifetime": {
          "type": "integer",
          "description": "Period (in seconds) for which refresh tokens will remain valid",
          "minimum": 1,
          "maximum": 157788000
        },
        "infinite_token_lifetime": {
          "type": "boolean",
          "description": "Prevents tokens from having a set lifetime when `true` (takes precedence over `token_lifetime` values)"
        },
        "idle_token_lifetime": {
          "type": "integer",
          "description": "Period (in seconds) for which refresh tokens will remain valid without use",
          "minimum": 1
        },
        "infinite_idle_token_lifetime": {
          "type": "boolean",
          "description": "Prevents tokens from expiring without use when `true` (takes precedence over `idle_token_lifetime` values)",
          "defaultValue": false
        }
      },
      "required": ["rotation_type", "expiration_type"],
      "additionalProperties": false
    },
    "get_clients_response_private_key_jwt": {
      "description": "Defines `private_key_jwt` client authentication method .",
      "type": "object",
      "properties": {
        "credentials": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": { "type": "string", "description": "Credential ID" }
            },
            "required": ["id"],
            "additionalProperties": false
          },
          "uniqueItems": false,
          "minItems": 0,
          "maxItems": 2
        }
      },
      "required": ["credentials"],
      "additionalProperties": false
    },
    "get_clients_response_claims_mapping": {
      "type": "object",
      "description": "Custom configuration for claims in ID tokens",
      "properties": { "sub": { "$ref": "get_clients_response_sub" } },
      "additionalProperties": false
    },
    "get_clients_response_sub": {
      "properties": { "source": { "enum": ["default"] } },
      "required": ["source"]
    },
    "post_clients_response": {
      "type": "object",
      "properties": {
        "client_id": {
          "type": "string",
          "description": "ID of this client.",
          "defaultValue": "AaiyAPdpYdesoKnqjj8HJqRn4T5titww"
        },
        "tenant": {
          "type": "string",
          "description": "Name of the tenant this client belongs to.",
          "defaultValue": ""
        },
        "name": {
          "type": "string",
          "description": "Name of this client (min length: 1 character, does not allow `<` or `>`).",
          "defaultValue": "My application"
        },
        "description": {
          "type": "string",
          "description": "Free text description of this client (max length: 140 characters).",
          "defaultValue": ""
        },
        "global": {
          "type": "boolean",
          "description": "Whether this is your global 'All Applications' client representing legacy tenant settings (true) or a regular client (false).",
          "defaultValue": false
        },
        "client_secret": {
          "type": "string",
          "description": "Client secret (which you must not make public).",
          "defaultValue": "MG_TNT2ver-SylNat-_VeMmd-4m0Waba0jr1troztBniSChEw0glxEmgEi2Kw40H",
          "secret": true
        },
        "app_type": {
          "type": "string",
          "description": "Type of client used to determine which settings are applicable. Can be `spa`, `native`, `non_interactive`, or `regular_web`.",
          "defaultValue": ""
        },
        "logo_uri": {
          "type": "string",
          "description": "URL of the logo to display for this client. Recommended size is 150x150 pixels."
        },
        "is_first_party": {
          "type": "boolean",
          "description": "Whether this client a first party client (true) or not (false).",
          "defaultValue": false
        },
        "oidc_conformant": {
          "type": "boolean",
          "description": "Whether this client conforms to <a href='https://auth0.com/docs/api-auth/tutorials/adoption'>strict OIDC specifications</a> (true) or uses legacy features (false).",
          "defaultValue": false
        },
        "callbacks": {
          "type": "array",
          "items": { "type": "string" },
          "description": "Comma-separated list of URLs whitelisted for Auth0 to use as a callback to the client after authentication.",
          "defaultValue": "http://localhost/callback"
        },
        "allowed_origins": {
          "type": "array",
          "items": { "type": "string" },
          "description": "Comma-separated list of URLs allowed to make requests from JavaScript to Auth0 API (typically used with CORS). By default, all your callback URLs will be allowed. This field allows you to enter other origins if necessary. You can also use wildcards at the subdomain level (e.g., https://*.contoso.com). Query strings and hash information are not taken into account when validating these URLs."
        },
        "web_origins": {
          "type": "array",
          "items": { "type": "string" },
          "description": "Comma-separated list of allowed origins for use with <a href='https://auth0.com/docs/cross-origin-authentication'>Cross-Origin Authentication</a>, <a href='https://auth0.com/docs/flows/concepts/device-auth'>Device Flow</a>, and <a href='https://auth0.com/docs/protocols/oauth2#how-response-mode-works'>web message response mode</a>."
        },
        "client_aliases": {
          "type": "array",
          "items": { "type": "string" },
          "description": "List of audiences/realms for SAML protocol. Used by the wsfed addon."
        },
        "allowed_clients": {
          "type": "array",
          "items": { "type": "string" },
          "description": "List of allow clients and API ids that are allowed to make delegation requests. Empty means all all your clients are allowed."
        },
        "allowed_logout_urls": {
          "type": "array",
          "description": "Comma-separated list of URLs that are valid to redirect to after logout from Auth0. Wildcards are allowed for subdomains.",
          "items": { "type": "string" },
          "defaultValue": "http://localhost/logoutCallback"
        },
        "oidc_backchannel_logout": {
          "$ref": "post_clients_response_oidc_backchannel_logout",
          "description": "Configuration for OIDC backchannel logout"
        },
        "grant_types": {
          "type": "array",
          "items": { "type": "string" },
          "description": "List of grant types supported for this application. Can include `authorization_code`, `implicit`, `refresh_token`, `client_credentials`, `password`, `http://auth0.com/oauth/grant-type/password-realm`, `http://auth0.com/oauth/grant-type/mfa-oob`, `http://auth0.com/oauth/grant-type/mfa-otp`, `http://auth0.com/oauth/grant-type/mfa-recovery-code`, and `urn:ietf:params:oauth:grant-type:device_code`."
        },
        "jwt_configuration": {
          "$ref": "post_clients_response_jwt_configuration",
          "description": "Configuration related to JWTs for the client."
        },
        "signing_keys": {
          "type": "array",
          "description": "Signing certificates associated with this client.",
          "items": {
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "pkcs7": {
                "type": "string",
                "description": "Signing certificate public key and chain in PKCS#7 (.P7B) format.",
                "defaultValue": ""
              },
              "cert": {
                "type": "string",
                "description": "Signing certificate public key in X.590 (.CER) format.",
                "defaultValue": ""
              },
              "subject": {
                "type": "string",
                "description": "Subject name for this certificate in the format `/CN={domain}`.",
                "defaultValue": ""
              }
            }
          }
        },
        "encryption_key": {
          "$ref": "post_clients_response_encryption_key",
          "description": "Encryption used for WsFed responses with this client."
        },
        "sso": {
          "type": "boolean",
          "description": "Applies only to SSO clients and determines whether Auth0 will handle Single Sign On (true) or whether the Identity Provider will (false).",
          "defaultValue": false
        },
        "sso_disabled": {
          "type": "boolean",
          "description": "Whether Single Sign On is disabled (true) or enabled (true). Defaults to true.",
          "defaultValue": false
        },
        "cross_origin_authentication": {
          "type": "boolean",
          "description": "Whether this client can be used to make cross-origin authentication requests (true) or it is not allowed to make such requests (false)."
        },
        "cross_origin_loc": {
          "type": "string",
          "format": "url",
          "description": "URL of the location in your site where the cross origin verification takes place for the cross-origin auth flow when performing Auth in your own domain instead of Auth0 hosted login page."
        },
        "custom_login_page_on": {
          "type": "boolean",
          "description": "Whether a custom login page is to be used (true) or the default provided login page (false).",
          "defaultValue": true
        },
        "custom_login_page": {
          "type": "string",
          "description": "The content (HTML, CSS, JS) of the custom login page.",
          "defaultValue": ""
        },
        "custom_login_page_preview": {
          "type": "string",
          "description": "The content (HTML, CSS, JS) of the custom login page. (Used on Previews)",
          "defaultValue": ""
        },
        "form_template": {
          "type": "string",
          "description": "HTML form template to be used for WS-Federation.",
          "defaultValue": ""
        },
        "addons": {
          "$ref": "post_clients_response_addons",
          "description": "Addons enabled for this client and their associated configurations."
        },
        "token_endpoint_auth_method": {
          "type": "string",
          "defaultValue": "none",
          "enum": ["none", "client_secret_post", "client_secret_basic"],
          "description": "Defines the requested authentication method for the token endpoint. Can be `none` (public client without a client secret), `client_secret_post` (client uses HTTP POST parameters), or `client_secret_basic` (client uses HTTP Basic)."
        },
        "client_metadata": {
          "$ref": "post_clients_response_client_metadata",
          "description": "Metadata associated with the client, in the form of an object with string values (max 255 chars).  Maximum of 10 metadata properties allowed.  Field names (max 255 chars) are alphanumeric and may only include the following special characters:  :,-+=_*?\"/\\()<>@\t[Tab] [Space]"
        },
        "mobile": {
          "$ref": "post_clients_response_mobile",
          "description": "Additional configuration for native mobile apps."
        },
        "initiate_login_uri": {
          "type": "string",
          "format": "absolute-https-uri-or-empty",
          "description": "Initiate login uri, must be https"
        },
        "native_social_login": {
          "$ref": "post_clients_response_native_social_login",
          "description": "Configure native social settings"
        },
        "refresh_token": {
          "$ref": "post_clients_response_refresh_token",
          "description": "Refresh token configuration"
        },
        "organization_usage": {
          "type": "string",
          "enum": ["deny", "allow", "require"],
          "description": "Defines how to proceed during an authentication transaction with regards an organization. Can be `deny` (default), `allow` or `require`.",
          "defaultValue": "deny"
        },
        "organization_require_behavior": {
          "type": "string",
          "enum": ["no_prompt", "pre_login_prompt", "post_login_prompt"],
          "description": "Defines how to proceed during an authentication transaction when `client.organization_usage: 'require'`. Can be `no_prompt` (default) or `pre_login_prompt`.",
          "defaultValue": "no_prompt"
        }
      }
    },
    "post_clients_response_oidc_backchannel_logout": {
      "type": "object",
      "description": "Configuration for OIDC backchannel logout",
      "properties": {
        "backchannel_logout_urls": {
          "type": "array",
          "description": "Comma-separated list of URLs that are valid to call back from Auth0 for OIDC backchannel logout. Currently only one URL is allowed.",
          "items": { "type": "string", "format": "callback-url" }
        }
      }
    },
    "post_clients_response_jwt_configuration": {
      "description": "Configuration related to JWTs for the client.",
      "type": "object",
      "properties": {
        "lifetime_in_seconds": {
          "description": "Number of seconds the JWT will be valid for (affects `exp` claim).",
          "type": "integer",
          "defaultValue": 36000
        },
        "secret_encoded": {
          "description": "Whether the client secret is base64 encoded (true) or unencoded (false).",
          "type": "boolean",
          "defaultValue": true
        },
        "scopes": {
          "$ref": "post_clients_response_scopes",
          "description": "Configuration related to id token claims for the client."
        },
        "alg": {
          "type": "string",
          "defaultValue": "HS256",
          "enum": ["HS256", "RS256"],
          "description": "Algorithm used to sign JWTs. Can be `HS256` or `RS256`."
        }
      }
    },
    "post_clients_response_scopes": {
      "type": "object",
      "defaultValue": {},
      "description": "Configuration related to id token claims for the client."
    },
    "post_clients_response_encryption_key": {
      "type": "object",
      "description": "Encryption used for WsFed responses with this client.",
      "properties": {
        "pub": {
          "type": "string",
          "description": "Encryption Public RSA Key."
        },
        "cert": {
          "type": "string",
          "description": "Encryption certificate for public key in X.590 (.CER) format."
        },
        "subject": {
          "type": "string",
          "description": "Encryption certificate name for this certificate in the format `/CN={domain}`."
        }
      },
      "secret": true
    },
    "post_clients_response_addons": {
      "type": "object",
      "additionalProperties": false,
      "description": "Addons enabled for this client and their associated configurations.",
      "properties": {
        "aws": {
          "$ref": "post_clients_response_aws",
          "description": "AWS addon configuration."
        },
        "azure_blob": {
          "$ref": "post_clients_response_azure_blob",
          "description": "Azure Blob Storage addon configuration."
        },
        "azure_sb": {
          "$ref": "post_clients_response_azure_sb",
          "description": "Azure Storage Bus addon configuration."
        },
        "rms": {
          "$ref": "post_clients_response_rms",
          "description": "Active Directory Rights Management Service SSO configuration."
        },
        "mscrm": {
          "$ref": "post_clients_response_mscrm",
          "description": "Microsoft Dynamics CRM SSO configuration."
        },
        "slack": {
          "$ref": "post_clients_response_slack",
          "description": "Slack team or workspace name usually first segment in your Slack URL. e.g. `https://acme-org.slack.com` would be `acme-org`."
        },
        "sentry": {
          "$ref": "post_clients_response_sentry",
          "description": "Sentry SSO configuration."
        },
        "box": {
          "$ref": "post_clients_response_box",
          "description": "Box SSO indicator (no configuration settings needed for Box SSO)."
        },
        "cloudbees": {
          "$ref": "post_clients_response_cloudbees",
          "description": "CloudBees SSO indicator (no configuration settings needed for CloudBees SSO)."
        },
        "concur": {
          "$ref": "post_clients_response_concur",
          "description": "Concur SSO indicator (no configuration settings needed for Concur SSO)."
        },
        "dropbox": {
          "$ref": "post_clients_response_dropbox",
          "description": "Dropbox SSO indicator (no configuration settings needed for Dropbox SSO)."
        },
        "echosign": {
          "$ref": "post_clients_response_echosign",
          "description": "Adobe EchoSign SSO configuration."
        },
        "egnyte": {
          "$ref": "post_clients_response_egnyte",
          "description": "Egnyte SSO configuration."
        },
        "firebase": {
          "$ref": "post_clients_response_firebase",
          "description": "Google Firebase addon configuration."
        },
        "newrelic": {
          "$ref": "post_clients_response_newrelic",
          "description": "New Relic SSO configuration."
        },
        "office365": {
          "$ref": "post_clients_response_office365",
          "description": "Microsoft Office 365 SSO configuration."
        },
        "salesforce": {
          "$ref": "post_clients_response_salesforce",
          "description": "Salesforce SSO configuration."
        },
        "salesforce_api": {
          "$ref": "post_clients_response_salesforce_api",
          "description": "Salesforce API addon configuration."
        },
        "salesforce_sandbox_api": {
          "$ref": "post_clients_response_salesforce_sandbox_api",
          "description": "Salesforce Sandbox addon configuration."
        },
        "samlp": {
          "$ref": "post_clients_response_samlp",
          "description": "SAML2 addon indicator (no configuration settings needed for SAML2 addon)."
        },
        "layer": {
          "$ref": "post_clients_response_layer",
          "description": "Layer addon configuration."
        },
        "sap_api": {
          "$ref": "post_clients_response_sap_api",
          "description": "SAP API addon configuration."
        },
        "sharepoint": {
          "$ref": "post_clients_response_sharepoint",
          "description": "SharePoint SSO configuration."
        },
        "springcm": {
          "$ref": "post_clients_response_springcm",
          "description": "SpringCM SSO configuration."
        },
        "wams": {
          "$ref": "post_clients_response_wams",
          "description": "Windows Azure Mobile Services addon configuration."
        },
        "wsfed": {
          "$ref": "post_clients_response_wsfed",
          "description": "WS-Fed (WIF) addon indicator. Actual configuration is stored in `callback` and `client_aliases` properties on the client."
        },
        "zendesk": {
          "$ref": "post_clients_response_zendesk",
          "description": "Zendesk SSO configuration."
        },
        "zoom": {
          "$ref": "post_clients_response_zoom",
          "description": "Zoom SSO configuration."
        },
        "sso_integration": { "$ref": "post_clients_response_sso_integration" }
      }
    },
    "post_clients_response_aws": {
      "type": "object",
      "properties": {
        "principal": {
          "type": "string",
          "description": "AWS principal ARN, e.g. `arn:aws:iam::010616021751:saml-provider/idpname`"
        },
        "role": {
          "type": "string",
          "description": "AWS role ARN, e.g. `arn:aws:iam::010616021751:role/foo`"
        },
        "lifetime_in_seconds": {
          "type": "integer",
          "minimum": 900,
          "maximum": 43200,
          "description": "AWS token lifetime in seconds"
        }
      },
      "description": "AWS addon configuration.",
      "defaultValue": {}
    },
    "post_clients_response_azure_blob": {
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string",
          "pattern": "^([a-z0-9]){3,24}$",
          "description": "Your Azure storage account name. Usually first segment in your Azure storage URL. e.g. `https://acme-org.blob.core.windows.net` would be the account name `acme-org`."
        },
        "storageAccessKey": {
          "type": "string",
          "pattern": "^([A-Za-z0-9+/]){86}==$",
          "description": "Access key associated with this storage account.",
          "secret": true
        },
        "containerName": {
          "type": "string",
          "pattern": "^([a-z0-9]){1}([a-z0-9-]){2,62}$",
          "description": "Container to request a token for. e.g. `my-container`."
        },
        "blobName": {
          "type": "string",
          "pattern": "^(.){1,1024}$",
          "description": "Entity to request a token for. e.g. `my-blob`. If blank the computed SAS will apply to the entire storage container."
        },
        "expiration": {
          "type": "integer",
          "minimum": 0,
          "exclusiveMinimum": true,
          "description": "Expiration in minutes for the generated token (default of 5 minutes)."
        },
        "signedIdentifier": {
          "type": "string",
          "description": "Shared access policy identifier defined in your storage account resource."
        },
        "blob_read": {
          "type": "boolean",
          "description": "Indicates if the issued token has permission to read the content, properties, metadata and block list. Use the blob as the source of a copy operation."
        },
        "blob_write": {
          "type": "boolean",
          "description": "Indicates if the issued token has permission to create or write content, properties, metadata, or block list. Snapshot or lease the blob. Resize the blob (page blob only). Use the blob as the destination of a copy operation within the same account."
        },
        "blob_delete": {
          "type": "boolean",
          "description": "Indicates if the issued token has permission to delete the blob."
        },
        "container_read": {
          "type": "boolean",
          "description": "Indicates if the issued token has permission to read the content, properties, metadata or block list of any blob in the container. Use any blob in the container as the source of a copy operation"
        },
        "container_write": {
          "type": "boolean",
          "description": "Indicates that for any blob in the container if the issued token has permission to create or write content, properties, metadata, or block list. Snapshot or lease the blob. Resize the blob (page blob only). Use the blob as the destination of a copy operation within the same account."
        },
        "container_delete": {
          "type": "boolean",
          "description": "Indicates if issued token has permission to delete any blob in the container."
        },
        "container_list": {
          "type": "boolean",
          "description": "Indicates if the issued token has permission to list blobs in the container."
        }
      },
      "description": "Azure Blob Storage addon configuration.",
      "defaultValue": {}
    },
    "post_clients_response_azure_sb": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "description": "Your Azure Service Bus namespace. Usually the first segment of your Service Bus URL (e.g. `https://acme-org.servicebus.windows.net` would be `acme-org`)."
        },
        "sasKeyName": {
          "type": "string",
          "description": "Your shared access policy name defined in your Service Bus entity."
        },
        "sasKey": {
          "type": "string",
          "description": "Primary Key associated with your shared access policy.",
          "secret": true
        },
        "entityPath": {
          "type": "string",
          "description": "Entity you want to request a token for. e.g. `my-queue`.'"
        },
        "expiration": {
          "type": "integer",
          "description": "Optional expiration in minutes for the generated token. Defaults to 5 minutes."
        }
      },
      "description": "Azure Storage Bus addon configuration.",
      "defaultValue": {}
    },
    "post_clients_response_rms": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "format": "url",
          "description": "URL of your Rights Management Server. It can be internal or external, but users will have to be able to reach it."
        }
      },
      "required": ["url"],
      "defaultValue": {},
      "description": "Active Directory Rights Management Service SSO configuration."
    },
    "post_clients_response_mscrm": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "format": "url",
          "description": "Microsoft Dynamics CRM application URL."
        }
      },
      "required": ["url"],
      "defaultValue": {},
      "description": "Microsoft Dynamics CRM SSO configuration."
    },
    "post_clients_response_slack": {
      "type": "object",
      "properties": {
        "team": { "type": "string", "description": "Slack team name." }
      },
      "required": ["team"],
      "defaultValue": {},
      "description": "Slack team or workspace name usually first segment in your Slack URL. e.g. `https://acme-org.slack.com` would be `acme-org`."
    },
    "post_clients_response_sentry": {
      "type": "object",
      "properties": {
        "org_slug": {
          "type": "string",
          "description": "Generated slug for your Sentry organization. Found in your Sentry URL. e.g. `https://sentry.acme.com/acme-org/` would be `acme-org`."
        },
        "base_url": {
          "type": "string",
          "description": "URL prefix only if running Sentry Community Edition, otherwise leave should be blank."
        }
      },
      "defaultValue": {},
      "description": "Sentry SSO configuration."
    },
    "post_clients_response_box": {
      "type": "object",
      "defaultValue": {},
      "description": "Box SSO indicator (no configuration settings needed for Box SSO)."
    },
    "post_clients_response_cloudbees": {
      "type": "object",
      "defaultValue": {},
      "description": "CloudBees SSO indicator (no configuration settings needed for CloudBees SSO)."
    },
    "post_clients_response_concur": {
      "type": "object",
      "defaultValue": {},
      "description": "Concur SSO indicator (no configuration settings needed for Concur SSO)."
    },
    "post_clients_response_dropbox": {
      "type": "object",
      "defaultValue": {},
      "description": "Dropbox SSO indicator (no configuration settings needed for Dropbox SSO)."
    },
    "post_clients_response_echosign": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "string",
          "description": "Your custom domain found in your EchoSign URL. e.g. `https://acme-org.echosign.com` would be `acme-org`."
        }
      },
      "defaultValue": {},
      "description": "Adobe EchoSign SSO configuration."
    },
    "post_clients_response_egnyte": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "string",
          "description": "Your custom domain found in your Egnyte URL. e.g. `https://acme-org.egnyte.com` would be `acme-org`."
        }
      },
      "defaultValue": {},
      "description": "Egnyte SSO configuration."
    },
    "post_clients_response_firebase": {
      "type": "object",
      "properties": {
        "secret": {
          "type": "string",
          "description": "Google Firebase Secret. (SDK 2 only)."
        },
        "private_key_id": {
          "type": "string",
          "description": "Optional ID of the private key to obtain kid header in the issued token (SDK v3+ tokens only).",
          "secret": true
        },
        "private_key": {
          "type": "string",
          "description": "Private Key for signing the token (SDK v3+ tokens only).",
          "secret": true
        },
        "client_email": {
          "type": "string",
          "description": "ID of the Service Account you have created (shown as `client_email` in the generated JSON file, SDK v3+ tokens only)."
        },
        "lifetime_in_seconds": {
          "type": "integer",
          "description": "Optional expiration in seconds for the generated token. Defaults to 3600 seconds (SDK v3+ tokens only)."
        }
      },
      "defaultValue": {},
      "description": "Google Firebase addon configuration."
    },
    "post_clients_response_newrelic": {
      "type": "object",
      "properties": {
        "account": {
          "type": "string",
          "description": "Your New Relic Account ID found in your New Relic URL after the `/accounts/` path. e.g. `https://rpm.newrelic.com/accounts/123456/query` would be `123456`."
        }
      },
      "defaultValue": {},
      "description": "New Relic SSO configuration."
    },
    "post_clients_response_office365": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "string",
          "description": "Your Office 365 domain name. e.g. `acme-org.com`."
        },
        "connection": {
          "type": "string",
          "description": "Optional Auth0 database connection for testing an already-configured Office 365 tenant."
        }
      },
      "defaultValue": {},
      "description": "Microsoft Office 365 SSO configuration."
    },
    "post_clients_response_salesforce": {
      "type": "object",
      "properties": {
        "entity_id": {
          "type": "string",
          "format": "url",
          "description": "Arbitrary logical URL that identifies the Saleforce resource. e.g. `https://acme-org.com`."
        }
      },
      "defaultValue": {},
      "description": "Salesforce SSO configuration."
    },
    "post_clients_response_salesforce_api": {
      "type": "object",
      "properties": {
        "clientid": {
          "type": "string",
          "description": "Consumer Key assigned by Salesforce to the Connected App.",
          "secret": true
        },
        "principal": {
          "type": "string",
          "description": "Name of the property in the user object that maps to a Salesforce username. e.g. `email`.",
          "secret": true
        },
        "communityName": { "type": "string", "description": "Community name." },
        "community_url_section": {
          "type": "string",
          "description": "Community url section."
        }
      },
      "defaultValue": {},
      "description": "Salesforce API addon configuration."
    },
    "post_clients_response_salesforce_sandbox_api": {
      "type": "object",
      "properties": {
        "clientid": {
          "type": "string",
          "description": "Consumer Key assigned by Salesforce to the Connected App."
        },
        "principal": {
          "type": "string",
          "description": "Name of the property in the user object that maps to a Salesforce username. e.g. `email`."
        },
        "communityName": { "type": "string", "description": "Community name." },
        "community_url_section": {
          "type": "string",
          "description": "Community url section."
        }
      },
      "defaultValue": {},
      "description": "Salesforce Sandbox addon configuration."
    },
    "post_clients_response_samlp": {
      "type": "object",
      "properties": {
        "mappings": { "$ref": "post_clients_response_mappings" },
        "audience": { "type": "string" },
        "recipient": { "type": "string" },
        "createUpnClaim": { "type": "boolean" },
        "mapUnknownClaimsAsIs": { "type": "boolean" },
        "passthroughClaimsWithNoMapping": { "type": "boolean" },
        "mapIdentities": { "type": "boolean" },
        "signatureAlgorithm": { "type": "string" },
        "digestAlgorithm": { "type": "string" },
        "issuer": { "type": "string" },
        "destination": { "type": "string" },
        "lifetimeInSeconds": { "type": "integer" },
        "signResponse": { "type": "boolean" },
        "nameIdentifierFormat": { "type": "string" },
        "nameIdentifierProbes": {
          "type": "array",
          "items": { "type": "string", "minLength": 1 },
          "uniqueItems": true
        },
        "authnContextClassRef": { "type": "string" }
      },
      "defaultValue": {},
      "description": "SAML2 addon indicator (no configuration settings needed for SAML2 addon)."
    },
    "post_clients_response_mappings": { "type": "object" },
    "post_clients_response_layer": {
      "type": "object",
      "properties": {
        "providerId": {
          "type": "string",
          "description": "Provider ID of your Layer account"
        },
        "keyId": {
          "type": "string",
          "description": "Authentication Key identifier used to sign the Layer token.",
          "secret": true
        },
        "privateKey": {
          "type": "string",
          "description": "Private key for signing the Layer token.",
          "secret": true
        },
        "principal": {
          "type": "string",
          "description": "Name of the property used as the unique user id in Layer. If not specified `user_id` is used."
        },
        "expiration": {
          "type": "integer",
          "minimum": 0,
          "exclusiveMinimum": true,
          "description": "Optional expiration in minutes for the generated token. Defaults to 5 minutes."
        }
      },
      "required": ["providerId", "keyId", "privateKey"],
      "defaultValue": {},
      "description": "Layer addon configuration."
    },
    "post_clients_response_sap_api": {
      "type": "object",
      "properties": {
        "clientid": {
          "type": "string",
          "description": "If activated in the OAuth 2.0 client configuration (transaction SOAUTH2) the SAML attribute client_id must be set and equal the client_id form parameter of the access token request."
        },
        "usernameAttribute": {
          "type": "string",
          "description": "Name of the property in the user object that maps to a SAP username. e.g. `email`."
        },
        "tokenEndpointUrl": {
          "type": "string",
          "format": "url",
          "description": "Your SAP OData server OAuth2 token endpoint URL."
        },
        "scope": {
          "type": "string",
          "description": "Requested scope for SAP APIs."
        },
        "servicePassword": {
          "type": "string",
          "description": "Service account password to use to authenticate API calls to the token endpoint.",
          "secret": true
        },
        "nameIdentifierFormat": {
          "type": "string",
          "description": "NameID element of the Subject which can be used to express the user's identity. Defaults to `urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified`."
        }
      },
      "defaultValue": {},
      "description": "SAP API addon configuration."
    },
    "post_clients_response_sharepoint": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "Internal SharePoint application URL."
        },
        "external_url": {
          "type": "array",
          "items": { "type": "string" },
          "description": "External SharePoint application URLs if exposed to the Internet."
        }
      },
      "defaultValue": {},
      "description": "SharePoint SSO configuration."
    },
    "post_clients_response_springcm": {
      "type": "object",
      "properties": {
        "acsurl": {
          "type": "string",
          "description": "SpringCM ACS URL, e.g. `https://na11.springcm.com/atlas/sso/SSOEndpoint.ashx`."
        }
      },
      "defaultValue": {},
      "description": "SpringCM SSO configuration."
    },
    "post_clients_response_wams": {
      "type": "object",
      "properties": {
        "masterkey": {
          "type": "string",
          "description": "Your master key for Windows Azure Mobile Services.",
          "secret": true
        }
      },
      "defaultValue": {},
      "description": "Windows Azure Mobile Services addon configuration."
    },
    "post_clients_response_wsfed": {
      "type": "object",
      "defaultValue": {},
      "description": "WS-Fed (WIF) addon indicator. Actual configuration is stored in `callback` and `client_aliases` properties on the client."
    },
    "post_clients_response_zendesk": {
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string",
          "description": "Zendesk account name usually first segment in your Zendesk URL. e.g. `https://acme-org.zendesk.com` would be `acme-org`."
        }
      },
      "defaultValue": {},
      "description": "Zendesk SSO configuration."
    },
    "post_clients_response_zoom": {
      "type": "object",
      "properties": {
        "account": {
          "type": "string",
          "description": "Zoom account name usually first segment of your Zoom URL, e.g. `https://acme-org.zoom.us` would be `acme-org`."
        }
      },
      "defaultValue": {},
      "description": "Zoom SSO configuration."
    },
    "post_clients_response_sso_integration": {
      "type": "object",
      "properties": {
        "name": { "type": "string", "description": "SSO integration name" },
        "version": {
          "type": "string",
          "description": "SSO integration version installed"
        }
      }
    },
    "post_clients_response_client_metadata": {
      "type": "object",
      "description": "Metadata associated with the client, in the form of an object with string values (max 255 chars).  Maximum of 10 metadata properties allowed.  Field names (max 255 chars) are alphanumeric and may only include the following special characters:  :,-+=_*?\"/\\()<>@\t[Tab] [Space]",
      "maxProperties": 10,
      "patternProperties": {
        "^[A-Za-z0-9:,\\-+=_*\\?\"/\\\\()<>@\t ]{1,255}$": {
          "anyOf": [{ "type": "string", "maxLength": 255 }, { "type": "null" }]
        }
      },
      "additionalProperties": false
    },
    "post_clients_response_mobile": {
      "description": "Additional configuration for native mobile apps.",
      "type": "object",
      "properties": {
        "android": {
          "$ref": "post_clients_response_android",
          "description": "Android native app configuration."
        },
        "ios": {
          "$ref": "post_clients_response_ios",
          "description": "iOS native app configuration."
        }
      }
    },
    "post_clients_response_android": {
      "description": "Android native app configuration.",
      "type": "object",
      "defaultValue": {
        "app_package_name": "com.example",
        "sha256_cert_fingerprints": ["D8:A0:83:..."]
      },
      "properties": {
        "app_package_name": {
          "description": "App package name found in AndroidManifest.xml.",
          "type": "string",
          "defaultValue": ""
        },
        "sha256_cert_fingerprints": {
          "description": "SHA256 fingerprints of the app's signing certificate. Multiple fingerprints can be used to support different versions of your app, such as debug and production builds.",
          "type": "array",
          "items": { "type": "string", "minLength": 1 },
          "minItems": 1,
          "defaultValue": []
        }
      }
    },
    "post_clients_response_ios": {
      "description": "iOS native app configuration.",
      "type": "object",
      "defaultValue": {
        "team_id": "9JA89QQLNQ",
        "app_bundle_identifier": "com.my.bundle.id"
      },
      "properties": {
        "team_id": {
          "description": "Identifier assigned to the Apple account that signs and uploads the app to the store.",
          "type": "string",
          "defaultValue": ""
        },
        "app_bundle_identifier": {
          "description": "Assigned by developer to the app as its unique identifier inside the store. Usually this is a reverse domain plus the app name, e.g. `com.you.MyApp`.",
          "type": "string",
          "defaultValue": ""
        }
      }
    },
    "post_clients_response_native_social_login": {
      "description": "Configure native social settings",
      "type": "object",
      "properties": {
        "apple": {
          "$ref": "post_clients_response_apple",
          "description": "Native Social Login support for the Apple connection"
        },
        "facebook": {
          "$ref": "post_clients_response_facebook",
          "description": "Native Social Login support for the Facebook connection"
        }
      },
      "minProperties": 1,
      "additionalProperties": false
    },
    "post_clients_response_apple": {
      "description": "Native Social Login support for the Apple connection",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Determine whether or not to allow signing in natively using an Apple authorization code",
          "type": "boolean",
          "defaultValue": false
        }
      },
      "minProperties": 1,
      "additionalProperties": false
    },
    "post_clients_response_facebook": {
      "swagger": false,
      "description": "Native Social Login support for the Facebook connection",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Determine whether or not to allow signing in natively using Facebook",
          "type": "boolean",
          "defaultValue": false
        }
      },
      "minProperties": 1,
      "additionalProperties": false
    },
    "post_clients_response_refresh_token": {
      "type": "object",
      "description": "Refresh token configuration",
      "properties": {
        "rotation_type": {
          "type": "string",
          "description": "Refresh token rotation types, one of: rotating, non-rotating",
          "enum": ["rotating", "non-rotating"],
          "defaultValue": "non-rotating"
        },
        "expiration_type": {
          "type": "string",
          "description": "Refresh token expiration types, one of: expiring, non-expiring",
          "enum": ["expiring", "non-expiring"],
          "defaultValue": "non-expiring"
        },
        "leeway": {
          "type": "integer",
          "description": "Period in seconds where the previous refresh token can be exchanged without triggering breach detection",
          "defaultValue": 0,
          "minimum": 0
        },
        "token_lifetime": {
          "type": "integer",
          "description": "Period (in seconds) for which refresh tokens will remain valid",
          "minimum": 1,
          "maximum": 157788000
        },
        "infinite_token_lifetime": {
          "type": "boolean",
          "description": "Prevents tokens from having a set lifetime when `true` (takes precedence over `token_lifetime` values)"
        },
        "idle_token_lifetime": {
          "type": "integer",
          "description": "Period (in seconds) for which refresh tokens will remain valid without use",
          "minimum": 1
        },
        "infinite_idle_token_lifetime": {
          "type": "boolean",
          "description": "Prevents tokens from expiring without use when `true` (takes precedence over `idle_token_lifetime` values)",
          "defaultValue": false
        }
      },
      "required": ["rotation_type", "expiration_type"],
      "additionalProperties": false
    },
    "post_clients_response_private_key_jwt": {
      "description": "Defines `private_key_jwt` client authentication method .",
      "type": "object",
      "properties": {
        "credentials": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": { "type": "string", "description": "Credential ID" }
            },
            "required": ["id"],
            "additionalProperties": false
          },
          "uniqueItems": false,
          "minItems": 0,
          "maxItems": 2
        }
      },
      "required": ["credentials"],
      "additionalProperties": false
    },
    "post_clients_response_claims_mapping": {
      "type": "object",
      "description": "Custom configuration for claims in ID tokens",
      "properties": { "sub": { "$ref": "post_clients_response_sub" } },
      "additionalProperties": false
    },
    "post_clients_response_sub": {
      "properties": { "source": { "enum": ["default"] } },
      "required": ["source"]
    },
    "post_clients_body": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "pattern": "^[^<>]+$",
          "description": "Name of this client (min length: 1 character, does not allow `<` or `>`)."
        },
        "description": {
          "type": "string",
          "maxLength": 140,
          "description": "Free text description of this client (max length: 140 characters)."
        },
        "logo_uri": {
          "type": "string",
          "format": "absolute-uri-or-empty",
          "description": "URL of the logo to display for this client. Recommended size is 150x150 pixels."
        },
        "callbacks": {
          "type": "array",
          "items": { "type": "string", "format": "callback-url" },
          "uniqueItems": true,
          "description": "Comma-separated list of URLs whitelisted for Auth0 to use as a callback to the client after authentication."
        },
        "oidc_backchannel_logout": {
          "$ref": "post_clients_body_oidc_backchannel_logout",
          "description": "Configuration for OIDC backchannel logout"
        },
        "allowed_origins": {
          "type": "array",
          "items": { "type": "string", "format": "url-with-placeholders" },
          "uniqueItems": true,
          "description": "Comma-separated list of URLs allowed to make requests from JavaScript to Auth0 API (typically used with CORS). By default, all your callback URLs will be allowed. This field allows you to enter other origins if necessary. You can also use wildcards at the subdomain level (e.g., https://*.contoso.com). Query strings and hash information are not taken into account when validating these URLs."
        },
        "web_origins": {
          "type": "array",
          "items": { "type": "string", "format": "url-with-placeholders" },
          "uniqueItems": true,
          "description": "Comma-separated list of allowed origins for use with <a href='https://auth0.com/docs/cross-origin-authentication'>Cross-Origin Authentication</a>, <a href='https://auth0.com/docs/flows/concepts/device-auth'>Device Flow</a>, and <a href='https://auth0.com/docs/protocols/oauth2#how-response-mode-works'>web message response mode</a>."
        },
        "client_aliases": {
          "type": "array",
          "items": { "type": "string", "minLength": 1 },
          "uniqueItems": true,
          "description": "List of audiences/realms for SAML protocol. Used by the wsfed addon."
        },
        "allowed_clients": {
          "type": "array",
          "items": { "type": "string", "minLength": 1 },
          "uniqueItems": true,
          "description": "List of allow clients and API ids that are allowed to make delegation requests. Empty means all all your clients are allowed."
        },
        "allowed_logout_urls": {
          "type": "array",
          "items": { "type": "string", "format": "url-with-placeholders" },
          "uniqueItems": true,
          "description": "Comma-separated list of URLs that are valid to redirect to after logout from Auth0. Wildcards are allowed for subdomains."
        },
        "grant_types": {
          "type": "array",
          "items": { "type": "string", "minLength": 1 },
          "uniqueItems": true,
          "description": "List of grant types supported for this application. Can include `authorization_code`, `implicit`, `refresh_token`, `client_credentials`, `password`, `http://auth0.com/oauth/grant-type/password-realm`, `http://auth0.com/oauth/grant-type/mfa-oob`, `http://auth0.com/oauth/grant-type/mfa-otp`, `http://auth0.com/oauth/grant-type/mfa-recovery-code`, and `urn:ietf:params:oauth:grant-type:device_code`."
        },
        "token_endpoint_auth_method": {
          "type": "string",
          "enum": ["none", "client_secret_post", "client_secret_basic"],
          "description": "Defines the requested authentication method for the token endpoint. Can be `none` (public client without a client secret), `client_secret_post` (client uses HTTP POST parameters), or `client_secret_basic` (client uses HTTP Basic)."
        },
        "app_type": {
          "type": "string",
          "enum": [
            "native",
            "spa",
            "regular_web",
            "non_interactive",
            "rms",
            "box",
            "cloudbees",
            "concur",
            "dropbox",
            "mscrm",
            "echosign",
            "egnyte",
            "newrelic",
            "office365",
            "salesforce",
            "sentry",
            "sharepoint",
            "slack",
            "springcm",
            "zendesk",
            "zoom",
            "sso_integration"
          ],
          "description": "Type of client used to determine which settings are applicable. Can be `spa`, `native`, `non_interactive`, or `regular_web`."
        },
        "is_first_party": {
          "type": "boolean",
          "description": "Whether this client a first party client or not",
          "defaultValue": true
        },
        "oidc_conformant": {
          "type": "boolean",
          "description": "Whether this client conforms to <a href='https://auth0.com/docs/api-auth/tutorials/adoption'>strict OIDC specifications</a> (true) or uses legacy features (false).",
          "defaultValue": false
        },
        "jwt_configuration": {
          "$ref": "post_clients_body_jwt_configuration",
          "description": "Configuration related to JWTs for the client."
        },
        "encryption_key": {
          "$ref": "post_clients_body_encryption_key",
          "description": "Encryption used for WsFed responses with this client."
        },
        "sso": {
          "type": "boolean",
          "description": "Applies only to SSO clients and determines whether Auth0 will handle Single Sign On (true) or whether the Identity Provider will (false)."
        },
        "cross_origin_authentication": {
          "type": "boolean",
          "description": "Whether this client can be used to make cross-origin authentication requests (true) or it is not allowed to make such requests (false)."
        },
        "cross_origin_loc": {
          "type": "string",
          "format": "url",
          "description": "URL of the location in your site where the cross origin verification takes place for the cross-origin auth flow when performing Auth in your own domain instead of Auth0 hosted login page."
        },
        "sso_disabled": {
          "type": "boolean",
          "description": "<code>true</code> to disable Single Sign On, <code>false</code> otherwise (default: <code>false</code>)"
        },
        "custom_login_page_on": {
          "type": "boolean",
          "description": "<code>true</code> if the custom login page is to be used, <code>false</code> otherwise. Defaults to <code>true</code>"
        },
        "custom_login_page": {
          "type": "string",
          "minLength": 1,
          "description": "The content (HTML, CSS, JS) of the custom login page."
        },
        "custom_login_page_preview": {
          "type": "string",
          "minLength": 1,
          "description": "The content (HTML, CSS, JS) of the custom login page. (Used on Previews)"
        },
        "form_template": {
          "type": "string",
          "minLength": 1,
          "description": "HTML form template to be used for WS-Federation."
        },
        "addons": {
          "$ref": "post_clients_body_addons",
          "description": "Addons enabled for this client and their associated configurations."
        },
        "client_metadata": {
          "$ref": "post_clients_body_client_metadata",
          "description": "Metadata associated with the client, in the form of an object with string values (max 255 chars).  Maximum of 10 metadata properties allowed.  Field names (max 255 chars) are alphanumeric and may only include the following special characters:  :,-+=_*?\"/\\()<>@\t[Tab] [Space]"
        },
        "mobile": {
          "$ref": "post_clients_body_mobile",
          "description": "Additional configuration for native mobile apps."
        },
        "initiate_login_uri": {
          "type": "string",
          "format": "absolute-https-uri-or-empty",
          "description": "Initiate login uri, must be https"
        },
        "native_social_login": {
          "$ref": "post_clients_body_native_social_login",
          "description": "Configure native social settings"
        },
        "refresh_token": {
          "$ref": "post_clients_body_refresh_token",
          "description": "Refresh token configuration"
        },
        "organization_usage": {
          "type": "string",
          "enum": ["deny", "allow", "require"],
          "description": "Defines how to proceed during an authentication transaction with regards an organization. Can be `deny` (default), `allow` or `require`.",
          "defaultValue": "deny"
        },
        "organization_require_behavior": {
          "type": "string",
          "enum": ["no_prompt", "pre_login_prompt", "post_login_prompt"],
          "description": "Defines how to proceed during an authentication transaction when `client.organization_usage: 'require'`. Can be `no_prompt` (default) or `pre_login_prompt`.",
          "defaultValue": "no_prompt"
        }
      },
      "required": ["name"],
      "additionalProperties": false
    },
    "post_clients_body_oidc_backchannel_logout": {
      "type": "object",
      "description": "Configuration for OIDC backchannel logout",
      "properties": {
        "backchannel_logout_urls": {
          "type": "array",
          "items": { "type": "string", "format": "callback-url" },
          "uniqueItems": true,
          "description": "Comma-separated list of URLs that are valid to call back from Auth0 for OIDC backchannel logout. Currently only one URL is allowed."
        }
      },
      "required": ["backchannel_logout_urls"],
      "additionalProperties": false
    },
    "post_clients_body_jwt_configuration": {
      "type": "object",
      "description": "Configuration related to JWTs for the client.",
      "properties": {
        "lifetime_in_seconds": {
          "type": "integer",
          "minimum": 0,
          "exclusiveMinimum": true,
          "description": "Number of seconds the JWT will be valid for (affects `exp` claim)."
        },
        "scopes": {
          "$ref": "post_clients_body_scopes",
          "description": "Configuration related to id token claims for the client."
        },
        "alg": {
          "type": "string",
          "enum": ["HS256", "RS256"],
          "description": "Algorithm used to sign JWTs. Can be `HS256` or `RS256`."
        }
      },
      "minProperties": 1,
      "additionalProperties": false
    },
    "post_clients_body_scopes": {
      "type": "object",
      "description": "Configuration related to id token claims for the client.",
      "defaultValue": {}
    },
    "post_clients_body_encryption_key": {
      "type": "object",
      "description": "Encryption used for WsFed responses with this client.",
      "properties": {
        "pub": {
          "type": "string",
          "minLength": 1,
          "description": "Encryption Public RSA Key."
        },
        "cert": {
          "type": "string",
          "minLength": 1,
          "description": "Encryption certificate for public key in X.590 (.CER) format."
        },
        "subject": {
          "type": "string",
          "minLength": 1,
          "description": "Encryption certificate name for this certificate in the format `/CN={domain}`."
        }
      },
      "minProperties": 1,
      "additionalProperties": false
    },
    "post_clients_body_addons": {
      "type": "object",
      "additionalProperties": false,
      "description": "Addons enabled for this client and their associated configurations.",
      "properties": {
        "aws": {
          "$ref": "post_clients_body_aws",
          "description": "AWS addon configuration."
        },
        "azure_blob": {
          "$ref": "post_clients_body_azure_blob",
          "description": "Azure Blob Storage addon configuration."
        },
        "azure_sb": {
          "$ref": "post_clients_body_azure_sb",
          "description": "Azure Storage Bus addon configuration."
        },
        "rms": {
          "$ref": "post_clients_body_rms",
          "description": "Active Directory Rights Management Service SSO configuration."
        },
        "mscrm": {
          "$ref": "post_clients_body_mscrm",
          "description": "Microsoft Dynamics CRM SSO configuration."
        },
        "slack": {
          "$ref": "post_clients_body_slack",
          "description": "Slack team or workspace name usually first segment in your Slack URL. e.g. `https://acme-org.slack.com` would be `acme-org`."
        },
        "sentry": {
          "$ref": "post_clients_body_sentry",
          "description": "Sentry SSO configuration."
        },
        "box": {
          "$ref": "post_clients_body_box",
          "description": "Box SSO indicator (no configuration settings needed for Box SSO)."
        },
        "cloudbees": {
          "$ref": "post_clients_body_cloudbees",
          "description": "CloudBees SSO indicator (no configuration settings needed for CloudBees SSO)."
        },
        "concur": {
          "$ref": "post_clients_body_concur",
          "description": "Concur SSO indicator (no configuration settings needed for Concur SSO)."
        },
        "dropbox": {
          "$ref": "post_clients_body_dropbox",
          "description": "Dropbox SSO indicator (no configuration settings needed for Dropbox SSO)."
        },
        "echosign": {
          "$ref": "post_clients_body_echosign",
          "description": "Adobe EchoSign SSO configuration."
        },
        "egnyte": {
          "$ref": "post_clients_body_egnyte",
          "description": "Egnyte SSO configuration."
        },
        "firebase": {
          "$ref": "post_clients_body_firebase",
          "description": "Google Firebase addon configuration."
        },
        "newrelic": {
          "$ref": "post_clients_body_newrelic",
          "description": "New Relic SSO configuration."
        },
        "office365": {
          "$ref": "post_clients_body_office365",
          "description": "Microsoft Office 365 SSO configuration."
        },
        "salesforce": {
          "$ref": "post_clients_body_salesforce",
          "description": "Salesforce SSO configuration."
        },
        "salesforce_api": {
          "$ref": "post_clients_body_salesforce_api",
          "description": "Salesforce API addon configuration."
        },
        "salesforce_sandbox_api": {
          "$ref": "post_clients_body_salesforce_sandbox_api",
          "description": "Salesforce Sandbox addon configuration."
        },
        "samlp": {
          "$ref": "post_clients_body_samlp",
          "description": "SAML2 addon indicator (no configuration settings needed for SAML2 addon)."
        },
        "layer": {
          "$ref": "post_clients_body_layer",
          "description": "Layer addon configuration."
        },
        "sap_api": {
          "$ref": "post_clients_body_sap_api",
          "description": "SAP API addon configuration."
        },
        "sharepoint": {
          "$ref": "post_clients_body_sharepoint",
          "description": "SharePoint SSO configuration."
        },
        "springcm": {
          "$ref": "post_clients_body_springcm",
          "description": "SpringCM SSO configuration."
        },
        "wams": {
          "$ref": "post_clients_body_wams",
          "description": "Windows Azure Mobile Services addon configuration."
        },
        "wsfed": {
          "$ref": "post_clients_body_wsfed",
          "description": "WS-Fed (WIF) addon indicator. Actual configuration is stored in `callback` and `client_aliases` properties on the client."
        },
        "zendesk": {
          "$ref": "post_clients_body_zendesk",
          "description": "Zendesk SSO configuration."
        },
        "zoom": {
          "$ref": "post_clients_body_zoom",
          "description": "Zoom SSO configuration."
        },
        "sso_integration": { "$ref": "post_clients_body_sso_integration" }
      }
    },
    "post_clients_body_aws": {
      "type": "object",
      "properties": {
        "principal": {
          "type": "string",
          "description": "AWS principal ARN, e.g. `arn:aws:iam::010616021751:saml-provider/idpname`"
        },
        "role": {
          "type": "string",
          "description": "AWS role ARN, e.g. `arn:aws:iam::010616021751:role/foo`"
        },
        "lifetime_in_seconds": {
          "type": "integer",
          "minimum": 900,
          "maximum": 43200,
          "description": "AWS token lifetime in seconds"
        }
      },
      "description": "AWS addon configuration.",
      "defaultValue": {}
    },
    "post_clients_body_azure_blob": {
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string",
          "pattern": "^([a-z0-9]){3,24}$",
          "description": "Your Azure storage account name. Usually first segment in your Azure storage URL. e.g. `https://acme-org.blob.core.windows.net` would be the account name `acme-org`."
        },
        "storageAccessKey": {
          "type": "string",
          "pattern": "^([A-Za-z0-9+/]){86}==$",
          "description": "Access key associated with this storage account.",
          "secret": true
        },
        "containerName": {
          "type": "string",
          "pattern": "^([a-z0-9]){1}([a-z0-9-]){2,62}$",
          "description": "Container to request a token for. e.g. `my-container`."
        },
        "blobName": {
          "type": "string",
          "pattern": "^(.){1,1024}$",
          "description": "Entity to request a token for. e.g. `my-blob`. If blank the computed SAS will apply to the entire storage container."
        },
        "expiration": {
          "type": "integer",
          "minimum": 0,
          "exclusiveMinimum": true,
          "description": "Expiration in minutes for the generated token (default of 5 minutes)."
        },
        "signedIdentifier": {
          "type": "string",
          "description": "Shared access policy identifier defined in your storage account resource."
        },
        "blob_read": {
          "type": "boolean",
          "description": "Indicates if the issued token has permission to read the content, properties, metadata and block list. Use the blob as the source of a copy operation."
        },
        "blob_write": {
          "type": "boolean",
          "description": "Indicates if the issued token has permission to create or write content, properties, metadata, or block list. Snapshot or lease the blob. Resize the blob (page blob only). Use the blob as the destination of a copy operation within the same account."
        },
        "blob_delete": {
          "type": "boolean",
          "description": "Indicates if the issued token has permission to delete the blob."
        },
        "container_read": {
          "type": "boolean",
          "description": "Indicates if the issued token has permission to read the content, properties, metadata or block list of any blob in the container. Use any blob in the container as the source of a copy operation"
        },
        "container_write": {
          "type": "boolean",
          "description": "Indicates that for any blob in the container if the issued token has permission to create or write content, properties, metadata, or block list. Snapshot or lease the blob. Resize the blob (page blob only). Use the blob as the destination of a copy operation within the same account."
        },
        "container_delete": {
          "type": "boolean",
          "description": "Indicates if issued token has permission to delete any blob in the container."
        },
        "container_list": {
          "type": "boolean",
          "description": "Indicates if the issued token has permission to list blobs in the container."
        }
      },
      "description": "Azure Blob Storage addon configuration.",
      "defaultValue": {}
    },
    "post_clients_body_azure_sb": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "description": "Your Azure Service Bus namespace. Usually the first segment of your Service Bus URL (e.g. `https://acme-org.servicebus.windows.net` would be `acme-org`)."
        },
        "sasKeyName": {
          "type": "string",
          "description": "Your shared access policy name defined in your Service Bus entity."
        },
        "sasKey": {
          "type": "string",
          "description": "Primary Key associated with your shared access policy.",
          "secret": true
        },
        "entityPath": {
          "type": "string",
          "description": "Entity you want to request a token for. e.g. `my-queue`.'"
        },
        "expiration": {
          "type": "integer",
          "description": "Optional expiration in minutes for the generated token. Defaults to 5 minutes."
        }
      },
      "description": "Azure Storage Bus addon configuration.",
      "defaultValue": {}
    },
    "post_clients_body_rms": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "format": "url",
          "description": "URL of your Rights Management Server. It can be internal or external, but users will have to be able to reach it."
        }
      },
      "required": ["url"],
      "defaultValue": {},
      "description": "Active Directory Rights Management Service SSO configuration."
    },
    "post_clients_body_mscrm": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "format": "url",
          "description": "Microsoft Dynamics CRM application URL."
        }
      },
      "required": ["url"],
      "defaultValue": {},
      "description": "Microsoft Dynamics CRM SSO configuration."
    },
    "post_clients_body_slack": {
      "type": "object",
      "properties": {
        "team": { "type": "string", "description": "Slack team name." }
      },
      "required": ["team"],
      "defaultValue": {},
      "description": "Slack team or workspace name usually first segment in your Slack URL. e.g. `https://acme-org.slack.com` would be `acme-org`."
    },
    "post_clients_body_sentry": {
      "type": "object",
      "properties": {
        "org_slug": {
          "type": "string",
          "description": "Generated slug for your Sentry organization. Found in your Sentry URL. e.g. `https://sentry.acme.com/acme-org/` would be `acme-org`."
        },
        "base_url": {
          "type": "string",
          "description": "URL prefix only if running Sentry Community Edition, otherwise leave should be blank."
        }
      },
      "defaultValue": {},
      "description": "Sentry SSO configuration."
    },
    "post_clients_body_box": {
      "type": "object",
      "defaultValue": {},
      "description": "Box SSO indicator (no configuration settings needed for Box SSO)."
    },
    "post_clients_body_cloudbees": {
      "type": "object",
      "defaultValue": {},
      "description": "CloudBees SSO indicator (no configuration settings needed for CloudBees SSO)."
    },
    "post_clients_body_concur": {
      "type": "object",
      "defaultValue": {},
      "description": "Concur SSO indicator (no configuration settings needed for Concur SSO)."
    },
    "post_clients_body_dropbox": {
      "type": "object",
      "defaultValue": {},
      "description": "Dropbox SSO indicator (no configuration settings needed for Dropbox SSO)."
    },
    "post_clients_body_echosign": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "string",
          "description": "Your custom domain found in your EchoSign URL. e.g. `https://acme-org.echosign.com` would be `acme-org`."
        }
      },
      "defaultValue": {},
      "description": "Adobe EchoSign SSO configuration."
    },
    "post_clients_body_egnyte": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "string",
          "description": "Your custom domain found in your Egnyte URL. e.g. `https://acme-org.egnyte.com` would be `acme-org`."
        }
      },
      "defaultValue": {},
      "description": "Egnyte SSO configuration."
    },
    "post_clients_body_firebase": {
      "type": "object",
      "properties": {
        "secret": {
          "type": "string",
          "description": "Google Firebase Secret. (SDK 2 only)."
        },
        "private_key_id": {
          "type": "string",
          "description": "Optional ID of the private key to obtain kid header in the issued token (SDK v3+ tokens only).",
          "secret": true
        },
        "private_key": {
          "type": "string",
          "description": "Private Key for signing the token (SDK v3+ tokens only).",
          "secret": true
        },
        "client_email": {
          "type": "string",
          "description": "ID of the Service Account you have created (shown as `client_email` in the generated JSON file, SDK v3+ tokens only)."
        },
        "lifetime_in_seconds": {
          "type": "integer",
          "description": "Optional expiration in seconds for the generated token. Defaults to 3600 seconds (SDK v3+ tokens only)."
        }
      },
      "defaultValue": {},
      "description": "Google Firebase addon configuration."
    },
    "post_clients_body_newrelic": {
      "type": "object",
      "properties": {
        "account": {
          "type": "string",
          "description": "Your New Relic Account ID found in your New Relic URL after the `/accounts/` path. e.g. `https://rpm.newrelic.com/accounts/123456/query` would be `123456`."
        }
      },
      "defaultValue": {},
      "description": "New Relic SSO configuration."
    },
    "post_clients_body_office365": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "string",
          "description": "Your Office 365 domain name. e.g. `acme-org.com`."
        },
        "connection": {
          "type": "string",
          "description": "Optional Auth0 database connection for testing an already-configured Office 365 tenant."
        }
      },
      "defaultValue": {},
      "description": "Microsoft Office 365 SSO configuration."
    },
    "post_clients_body_salesforce": {
      "type": "object",
      "properties": {
        "entity_id": {
          "type": "string",
          "format": "url",
          "description": "Arbitrary logical URL that identifies the Saleforce resource. e.g. `https://acme-org.com`."
        }
      },
      "defaultValue": {},
      "description": "Salesforce SSO configuration."
    },
    "post_clients_body_salesforce_api": {
      "type": "object",
      "properties": {
        "clientid": {
          "type": "string",
          "description": "Consumer Key assigned by Salesforce to the Connected App.",
          "secret": true
        },
        "principal": {
          "type": "string",
          "description": "Name of the property in the user object that maps to a Salesforce username. e.g. `email`.",
          "secret": true
        },
        "communityName": { "type": "string", "description": "Community name." },
        "community_url_section": {
          "type": "string",
          "description": "Community url section."
        }
      },
      "defaultValue": {},
      "description": "Salesforce API addon configuration."
    },
    "post_clients_body_salesforce_sandbox_api": {
      "type": "object",
      "properties": {
        "clientid": {
          "type": "string",
          "description": "Consumer Key assigned by Salesforce to the Connected App."
        },
        "principal": {
          "type": "string",
          "description": "Name of the property in the user object that maps to a Salesforce username. e.g. `email`."
        },
        "communityName": { "type": "string", "description": "Community name." },
        "community_url_section": {
          "type": "string",
          "description": "Community url section."
        }
      },
      "defaultValue": {},
      "description": "Salesforce Sandbox addon configuration."
    },
    "post_clients_body_samlp": {
      "type": "object",
      "properties": {
        "mappings": { "$ref": "post_clients_body_mappings" },
        "audience": { "type": "string" },
        "recipient": { "type": "string" },
        "createUpnClaim": { "type": "boolean" },
        "mapUnknownClaimsAsIs": { "type": "boolean" },
        "passthroughClaimsWithNoMapping": { "type": "boolean" },
        "mapIdentities": { "type": "boolean" },
        "signatureAlgorithm": { "type": "string" },
        "digestAlgorithm": { "type": "string" },
        "issuer": { "type": "string" },
        "destination": { "type": "string" },
        "lifetimeInSeconds": { "type": "integer" },
        "signResponse": { "type": "boolean" },
        "nameIdentifierFormat": { "type": "string" },
        "nameIdentifierProbes": {
          "type": "array",
          "items": { "type": "string", "minLength": 1 },
          "uniqueItems": true
        },
        "authnContextClassRef": { "type": "string" }
      },
      "defaultValue": {},
      "description": "SAML2 addon indicator (no configuration settings needed for SAML2 addon)."
    },
    "post_clients_body_mappings": { "type": "object" },
    "post_clients_body_layer": {
      "type": "object",
      "properties": {
        "providerId": {
          "type": "string",
          "description": "Provider ID of your Layer account"
        },
        "keyId": {
          "type": "string",
          "description": "Authentication Key identifier used to sign the Layer token.",
          "secret": true
        },
        "privateKey": {
          "type": "string",
          "description": "Private key for signing the Layer token.",
          "secret": true
        },
        "principal": {
          "type": "string",
          "description": "Name of the property used as the unique user id in Layer. If not specified `user_id` is used."
        },
        "expiration": {
          "type": "integer",
          "minimum": 0,
          "exclusiveMinimum": true,
          "description": "Optional expiration in minutes for the generated token. Defaults to 5 minutes."
        }
      },
      "required": ["providerId", "keyId", "privateKey"],
      "defaultValue": {},
      "description": "Layer addon configuration."
    },
    "post_clients_body_sap_api": {
      "type": "object",
      "properties": {
        "clientid": {
          "type": "string",
          "description": "If activated in the OAuth 2.0 client configuration (transaction SOAUTH2) the SAML attribute client_id must be set and equal the client_id form parameter of the access token request."
        },
        "usernameAttribute": {
          "type": "string",
          "description": "Name of the property in the user object that maps to a SAP username. e.g. `email`."
        },
        "tokenEndpointUrl": {
          "type": "string",
          "format": "url",
          "description": "Your SAP OData server OAuth2 token endpoint URL."
        },
        "scope": {
          "type": "string",
          "description": "Requested scope for SAP APIs."
        },
        "servicePassword": {
          "type": "string",
          "description": "Service account password to use to authenticate API calls to the token endpoint.",
          "secret": true
        },
        "nameIdentifierFormat": {
          "type": "string",
          "description": "NameID element of the Subject which can be used to express the user's identity. Defaults to `urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified`."
        }
      },
      "defaultValue": {},
      "description": "SAP API addon configuration."
    },
    "post_clients_body_sharepoint": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "Internal SharePoint application URL."
        },
        "external_url": {
          "type": "array",
          "items": { "type": "string" },
          "description": "External SharePoint application URLs if exposed to the Internet."
        }
      },
      "defaultValue": {},
      "description": "SharePoint SSO configuration."
    },
    "post_clients_body_springcm": {
      "type": "object",
      "properties": {
        "acsurl": {
          "type": "string",
          "description": "SpringCM ACS URL, e.g. `https://na11.springcm.com/atlas/sso/SSOEndpoint.ashx`."
        }
      },
      "defaultValue": {},
      "description": "SpringCM SSO configuration."
    },
    "post_clients_body_wams": {
      "type": "object",
      "properties": {
        "masterkey": {
          "type": "string",
          "description": "Your master key for Windows Azure Mobile Services.",
          "secret": true
        }
      },
      "defaultValue": {},
      "description": "Windows Azure Mobile Services addon configuration."
    },
    "post_clients_body_wsfed": {
      "type": "object",
      "defaultValue": {},
      "description": "WS-Fed (WIF) addon indicator. Actual configuration is stored in `callback` and `client_aliases` properties on the client."
    },
    "post_clients_body_zendesk": {
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string",
          "description": "Zendesk account name usually first segment in your Zendesk URL. e.g. `https://acme-org.zendesk.com` would be `acme-org`."
        }
      },
      "defaultValue": {},
      "description": "Zendesk SSO configuration."
    },
    "post_clients_body_zoom": {
      "type": "object",
      "properties": {
        "account": {
          "type": "string",
          "description": "Zoom account name usually first segment of your Zoom URL, e.g. `https://acme-org.zoom.us` would be `acme-org`."
        }
      },
      "defaultValue": {},
      "description": "Zoom SSO configuration."
    },
    "post_clients_body_sso_integration": {
      "type": "object",
      "properties": {
        "name": { "type": "string", "description": "SSO integration name" },
        "version": {
          "type": "string",
          "description": "SSO integration version installed"
        }
      }
    },
    "post_clients_body_client_metadata": {
      "type": "object",
      "description": "Metadata associated with the client, in the form of an object with string values (max 255 chars).  Maximum of 10 metadata properties allowed.  Field names (max 255 chars) are alphanumeric and may only include the following special characters:  :,-+=_*?\"/\\()<>@\t[Tab] [Space]",
      "maxProperties": 10,
      "patternProperties": {
        "^[A-Za-z0-9:,\\-+=_*\\?\"/\\\\()<>@\t ]{1,255}$": {
          "anyOf": [{ "type": "string", "maxLength": 255 }, { "type": "null" }]
        }
      },
      "additionalProperties": false
    },
    "post_clients_body_mobile": {
      "type": "object",
      "description": "Additional configuration for native mobile apps.",
      "properties": {
        "android": {
          "$ref": "post_clients_body_android",
          "description": "Android native app configuration."
        },
        "ios": {
          "$ref": "post_clients_body_ios",
          "description": "Configuration related to iOS native apps"
        }
      },
      "minProperties": 1,
      "additionalProperties": false
    },
    "post_clients_body_android": {
      "description": "Android native app configuration.",
      "type": "object",
      "defaultValue": {
        "app_package_name": "com.example",
        "sha256_cert_fingerprints": ["D8:A0:83:..."]
      },
      "properties": {
        "app_package_name": {
          "description": "App package name found in AndroidManifest.xml.",
          "type": "string",
          "minLength": 1,
          "defaultValue": ""
        },
        "sha256_cert_fingerprints": {
          "description": "SHA256 fingerprints of the app's signing certificate. Multiple fingerprints can be used to support different versions of your app, such as debug and production builds.",
          "type": "array",
          "items": { "type": "string", "minLength": 1 },
          "minItems": 1,
          "defaultValue": []
        }
      },
      "minProperties": 1,
      "additionalProperties": false
    },
    "post_clients_body_ios": {
      "description": "Configuration related to iOS native apps",
      "type": "object",
      "defaultValue": {
        "team_id": "9JA89QQLNQ",
        "app_bundle_identifier": "com.my.bundle.id"
      },
      "properties": {
        "team_id": {
          "description": "Identifier assigned to the account that signs and upload the app to the store",
          "type": "string",
          "minLength": 1,
          "defaultValue": ""
        },
        "app_bundle_identifier": {
          "description": "Assigned by the developer to the app as its unique identifier inside the store, usually is a reverse domain plus the app name: <code>com.you.MyApp</code>",
          "type": "string",
          "minLength": 1,
          "defaultValue": ""
        }
      },
      "minProperties": 1,
      "additionalProperties": false
    },
    "post_clients_body_native_social_login": {
      "description": "Configure native social settings",
      "type": "object",
      "properties": {
        "apple": {
          "$ref": "post_clients_body_apple",
          "description": "Native Social Login support for the Apple connection"
        },
        "facebook": {
          "$ref": "post_clients_body_facebook",
          "description": "Native Social Login support for the Facebook connection"
        }
      },
      "minProperties": 1,
      "additionalProperties": false
    },
    "post_clients_body_apple": {
      "description": "Native Social Login support for the Apple connection",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Determine whether or not to allow signing in natively using an Apple authorization code",
          "type": "boolean",
          "defaultValue": false
        }
      },
      "minProperties": 1,
      "additionalProperties": false
    },
    "post_clients_body_facebook": {
      "swagger": false,
      "description": "Native Social Login support for the Facebook connection",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Determine whether or not to allow signing in natively using Facebook",
          "type": "boolean",
          "defaultValue": false
        }
      },
      "minProperties": 1,
      "additionalProperties": false
    },
    "post_clients_body_refresh_token": {
      "type": "object",
      "description": "Refresh token configuration",
      "properties": {
        "rotation_type": {
          "type": "string",
          "description": "Refresh token rotation types, one of: rotating, non-rotating",
          "enum": ["rotating", "non-rotating"],
          "defaultValue": "non-rotating"
        },
        "expiration_type": {
          "type": "string",
          "description": "Refresh token expiration types, one of: expiring, non-expiring",
          "enum": ["expiring", "non-expiring"],
          "defaultValue": "non-expiring"
        },
        "leeway": {
          "type": "integer",
          "description": "Period in seconds where the previous refresh token can be exchanged without triggering breach detection",
          "defaultValue": 0,
          "minimum": 0
        },
        "token_lifetime": {
          "type": "integer",
          "description": "Period (in seconds) for which refresh tokens will remain valid",
          "minimum": 1,
          "maximum": 157788000
        },
        "infinite_token_lifetime": {
          "type": "boolean",
          "description": "Prevents tokens from having a set lifetime when `true` (takes precedence over `token_lifetime` values)"
        },
        "idle_token_lifetime": {
          "type": "integer",
          "description": "Period (in seconds) for which refresh tokens will remain valid without use",
          "minimum": 1
        },
        "infinite_idle_token_lifetime": {
          "type": "boolean",
          "description": "Prevents tokens from expiring without use when `true` (takes precedence over `idle_token_lifetime` values)",
          "defaultValue": false
        }
      },
      "required": ["rotation_type", "expiration_type"],
      "additionalProperties": false
    },
    "post_clients_body_private_key_jwt": {
      "description": "Defines `private_key_jwt` client authentication method .",
      "type": "object",
      "properties": {
        "credentials": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "credential_type": {
                "type": "string",
                "enum": ["public_key"],
                "description": "Credential type (`public_key`)"
              },
              "name": {
                "type": "string",
                "description": "Friendly name for a credential.",
                "maxLength": 128
              },
              "pem": {
                "type": "string",
                "description": "PEM-formatted public key (SPKI and PKCS1) or X509 certificate."
              },
              "alg": {
                "type": "string",
                "enum": ["RS256", "RS384", "PS256"],
                "description": "Algorithm which will be used with the credential. Can be one of RS256, RS384, PS256"
              }
            },
            "required": ["credential_type", "pem"],
            "additionalProperties": false
          },
          "uniqueItems": false,
          "minItems": 0,
          "maxItems": 2
        }
      },
      "required": ["credentials"],
      "additionalProperties": false
    },
    "post_clients_body_claims_mapping": {
      "type": "object",
      "description": "Custom configuration for claims in ID tokens",
      "properties": { "sub": { "$ref": "post_clients_body_sub" } },
      "additionalProperties": false
    },
    "post_clients_body_sub": {
      "properties": { "source": { "enum": ["default"] } },
      "required": ["source"]
    },
    "get_clients_by_id_response": {
      "type": "object",
      "properties": {
        "client_id": {
          "type": "string",
          "description": "ID of this client.",
          "defaultValue": "AaiyAPdpYdesoKnqjj8HJqRn4T5titww"
        },
        "tenant": {
          "type": "string",
          "description": "Name of the tenant this client belongs to.",
          "defaultValue": ""
        },
        "name": {
          "type": "string",
          "description": "Name of this client (min length: 1 character, does not allow `<` or `>`).",
          "defaultValue": "My application"
        },
        "description": {
          "type": "string",
          "description": "Free text description of this client (max length: 140 characters).",
          "defaultValue": ""
        },
        "global": {
          "type": "boolean",
          "description": "Whether this is your global 'All Applications' client representing legacy tenant settings (true) or a regular client (false).",
          "defaultValue": false
        },
        "client_secret": {
          "type": "string",
          "description": "Client secret (which you must not make public).",
          "defaultValue": "MG_TNT2ver-SylNat-_VeMmd-4m0Waba0jr1troztBniSChEw0glxEmgEi2Kw40H",
          "secret": true
        },
        "app_type": {
          "type": "string",
          "description": "Type of client used to determine which settings are applicable. Can be `spa`, `native`, `non_interactive`, or `regular_web`.",
          "defaultValue": ""
        },
        "logo_uri": {
          "type": "string",
          "description": "URL of the logo to display for this client. Recommended size is 150x150 pixels."
        },
        "is_first_party": {
          "type": "boolean",
          "description": "Whether this client a first party client (true) or not (false).",
          "defaultValue": false
        },
        "oidc_conformant": {
          "type": "boolean",
          "description": "Whether this client conforms to <a href='https://auth0.com/docs/api-auth/tutorials/adoption'>strict OIDC specifications</a> (true) or uses legacy features (false).",
          "defaultValue": false
        },
        "callbacks": {
          "type": "array",
          "items": { "type": "string" },
          "description": "Comma-separated list of URLs whitelisted for Auth0 to use as a callback to the client after authentication.",
          "defaultValue": "http://localhost/callback"
        },
        "allowed_origins": {
          "type": "array",
          "items": { "type": "string" },
          "description": "Comma-separated list of URLs allowed to make requests from JavaScript to Auth0 API (typically used with CORS). By default, all your callback URLs will be allowed. This field allows you to enter other origins if necessary. You can also use wildcards at the subdomain level (e.g., https://*.contoso.com). Query strings and hash information are not taken into account when validating these URLs."
        },
        "web_origins": {
          "type": "array",
          "items": { "type": "string" },
          "description": "Comma-separated list of allowed origins for use with <a href='https://auth0.com/docs/cross-origin-authentication'>Cross-Origin Authentication</a>, <a href='https://auth0.com/docs/flows/concepts/device-auth'>Device Flow</a>, and <a href='https://auth0.com/docs/protocols/oauth2#how-response-mode-works'>web message response mode</a>."
        },
        "client_aliases": {
          "type": "array",
          "items": { "type": "string" },
          "description": "List of audiences/realms for SAML protocol. Used by the wsfed addon."
        },
        "allowed_clients": {
          "type": "array",
          "items": { "type": "string" },
          "description": "List of allow clients and API ids that are allowed to make delegation requests. Empty means all all your clients are allowed."
        },
        "allowed_logout_urls": {
          "type": "array",
          "description": "Comma-separated list of URLs that are valid to redirect to after logout from Auth0. Wildcards are allowed for subdomains.",
          "items": { "type": "string" },
          "defaultValue": "http://localhost/logoutCallback"
        },
        "oidc_backchannel_logout": {
          "$ref": "get_clients_by_id_response_oidc_backchannel_logout",
          "description": "Configuration for OIDC backchannel logout"
        },
        "grant_types": {
          "type": "array",
          "items": { "type": "string" },
          "description": "List of grant types supported for this application. Can include `authorization_code`, `implicit`, `refresh_token`, `client_credentials`, `password`, `http://auth0.com/oauth/grant-type/password-realm`, `http://auth0.com/oauth/grant-type/mfa-oob`, `http://auth0.com/oauth/grant-type/mfa-otp`, `http://auth0.com/oauth/grant-type/mfa-recovery-code`, and `urn:ietf:params:oauth:grant-type:device_code`."
        },
        "jwt_configuration": {
          "$ref": "get_clients_by_id_response_jwt_configuration",
          "description": "Configuration related to JWTs for the client."
        },
        "signing_keys": {
          "type": "array",
          "description": "Signing certificates associated with this client.",
          "items": {
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "pkcs7": {
                "type": "string",
                "description": "Signing certificate public key and chain in PKCS#7 (.P7B) format.",
                "defaultValue": ""
              },
              "cert": {
                "type": "string",
                "description": "Signing certificate public key in X.590 (.CER) format.",
                "defaultValue": ""
              },
              "subject": {
                "type": "string",
                "description": "Subject name for this certificate in the format `/CN={domain}`.",
                "defaultValue": ""
              }
            }
          }
        },
        "encryption_key": {
          "$ref": "get_clients_by_id_response_encryption_key",
          "description": "Encryption used for WsFed responses with this client."
        },
        "sso": {
          "type": "boolean",
          "description": "Applies only to SSO clients and determines whether Auth0 will handle Single Sign On (true) or whether the Identity Provider will (false).",
          "defaultValue": false
        },
        "sso_disabled": {
          "type": "boolean",
          "description": "Whether Single Sign On is disabled (true) or enabled (true). Defaults to true.",
          "defaultValue": false
        },
        "cross_origin_authentication": {
          "type": "boolean",
          "description": "Whether this client can be used to make cross-origin authentication requests (true) or it is not allowed to make such requests (false)."
        },
        "cross_origin_loc": {
          "type": "string",
          "format": "url",
          "description": "URL of the location in your site where the cross origin verification takes place for the cross-origin auth flow when performing Auth in your own domain instead of Auth0 hosted login page."
        },
        "custom_login_page_on": {
          "type": "boolean",
          "description": "Whether a custom login page is to be used (true) or the default provided login page (false).",
          "defaultValue": true
        },
        "custom_login_page": {
          "type": "string",
          "description": "The content (HTML, CSS, JS) of the custom login page.",
          "defaultValue": ""
        },
        "custom_login_page_preview": {
          "type": "string",
          "description": "The content (HTML, CSS, JS) of the custom login page. (Used on Previews)",
          "defaultValue": ""
        },
        "form_template": {
          "type": "string",
          "description": "HTML form template to be used for WS-Federation.",
          "defaultValue": ""
        },
        "addons": {
          "$ref": "get_clients_by_id_response_addons",
          "description": "Addons enabled for this client and their associated configurations."
        },
        "token_endpoint_auth_method": {
          "type": "string",
          "defaultValue": "none",
          "enum": ["none", "client_secret_post", "client_secret_basic"],
          "description": "Defines the requested authentication method for the token endpoint. Can be `none` (public client without a client secret), `client_secret_post` (client uses HTTP POST parameters), or `client_secret_basic` (client uses HTTP Basic)."
        },
        "client_metadata": {
          "$ref": "get_clients_by_id_response_client_metadata",
          "description": "Metadata associated with the client, in the form of an object with string values (max 255 chars).  Maximum of 10 metadata properties allowed.  Field names (max 255 chars) are alphanumeric and may only include the following special characters:  :,-+=_*?\"/\\()<>@\t[Tab] [Space]"
        },
        "mobile": {
          "$ref": "get_clients_by_id_response_mobile",
          "description": "Additional configuration for native mobile apps."
        },
        "initiate_login_uri": {
          "type": "string",
          "format": "absolute-https-uri-or-empty",
          "description": "Initiate login uri, must be https"
        },
        "native_social_login": {
          "$ref": "get_clients_by_id_response_native_social_login",
          "description": "Configure native social settings"
        },
        "refresh_token": {
          "$ref": "get_clients_by_id_response_refresh_token",
          "description": "Refresh token configuration"
        },
        "organization_usage": {
          "type": "string",
          "enum": ["deny", "allow", "require"],
          "description": "Defines how to proceed during an authentication transaction with regards an organization. Can be `deny` (default), `allow` or `require`.",
          "defaultValue": "deny"
        },
        "organization_require_behavior": {
          "type": "string",
          "enum": ["no_prompt", "pre_login_prompt", "post_login_prompt"],
          "description": "Defines how to proceed during an authentication transaction when `client.organization_usage: 'require'`. Can be `no_prompt` (default) or `pre_login_prompt`.",
          "defaultValue": "no_prompt"
        }
      }
    },
    "get_clients_by_id_response_oidc_backchannel_logout": {
      "type": "object",
      "description": "Configuration for OIDC backchannel logout",
      "properties": {
        "backchannel_logout_urls": {
          "type": "array",
          "description": "Comma-separated list of URLs that are valid to call back from Auth0 for OIDC backchannel logout. Currently only one URL is allowed.",
          "items": { "type": "string", "format": "callback-url" }
        }
      }
    },
    "get_clients_by_id_response_jwt_configuration": {
      "description": "Configuration related to JWTs for the client.",
      "type": "object",
      "properties": {
        "lifetime_in_seconds": {
          "description": "Number of seconds the JWT will be valid for (affects `exp` claim).",
          "type": "integer",
          "defaultValue": 36000
        },
        "secret_encoded": {
          "description": "Whether the client secret is base64 encoded (true) or unencoded (false).",
          "type": "boolean",
          "defaultValue": true
        },
        "scopes": {
          "$ref": "get_clients_by_id_response_scopes",
          "description": "Configuration related to id token claims for the client."
        },
        "alg": {
          "type": "string",
          "defaultValue": "HS256",
          "enum": ["HS256", "RS256"],
          "description": "Algorithm used to sign JWTs. Can be `HS256` or `RS256`."
        }
      }
    },
    "get_clients_by_id_response_scopes": {
      "type": "object",
      "defaultValue": {},
      "description": "Configuration related to id token claims for the client."
    },
    "get_clients_by_id_response_encryption_key": {
      "type": "object",
      "description": "Encryption used for WsFed responses with this client.",
      "properties": {
        "pub": {
          "type": "string",
          "description": "Encryption Public RSA Key."
        },
        "cert": {
          "type": "string",
          "description": "Encryption certificate for public key in X.590 (.CER) format."
        },
        "subject": {
          "type": "string",
          "description": "Encryption certificate name for this certificate in the format `/CN={domain}`."
        }
      },
      "secret": true
    },
    "get_clients_by_id_response_addons": {
      "type": "object",
      "additionalProperties": false,
      "description": "Addons enabled for this client and their associated configurations.",
      "properties": {
        "aws": {
          "$ref": "get_clients_by_id_response_aws",
          "description": "AWS addon configuration."
        },
        "azure_blob": {
          "$ref": "get_clients_by_id_response_azure_blob",
          "description": "Azure Blob Storage addon configuration."
        },
        "azure_sb": {
          "$ref": "get_clients_by_id_response_azure_sb",
          "description": "Azure Storage Bus addon configuration."
        },
        "rms": {
          "$ref": "get_clients_by_id_response_rms",
          "description": "Active Directory Rights Management Service SSO configuration."
        },
        "mscrm": {
          "$ref": "get_clients_by_id_response_mscrm",
          "description": "Microsoft Dynamics CRM SSO configuration."
        },
        "slack": {
          "$ref": "get_clients_by_id_response_slack",
          "description": "Slack team or workspace name usually first segment in your Slack URL. e.g. `https://acme-org.slack.com` would be `acme-org`."
        },
        "sentry": {
          "$ref": "get_clients_by_id_response_sentry",
          "description": "Sentry SSO configuration."
        },
        "box": {
          "$ref": "get_clients_by_id_response_box",
          "description": "Box SSO indicator (no configuration settings needed for Box SSO)."
        },
        "cloudbees": {
          "$ref": "get_clients_by_id_response_cloudbees",
          "description": "CloudBees SSO indicator (no configuration settings needed for CloudBees SSO)."
        },
        "concur": {
          "$ref": "get_clients_by_id_response_concur",
          "description": "Concur SSO indicator (no configuration settings needed for Concur SSO)."
        },
        "dropbox": {
          "$ref": "get_clients_by_id_response_dropbox",
          "description": "Dropbox SSO indicator (no configuration settings needed for Dropbox SSO)."
        },
        "echosign": {
          "$ref": "get_clients_by_id_response_echosign",
          "description": "Adobe EchoSign SSO configuration."
        },
        "egnyte": {
          "$ref": "get_clients_by_id_response_egnyte",
          "description": "Egnyte SSO configuration."
        },
        "firebase": {
          "$ref": "get_clients_by_id_response_firebase",
          "description": "Google Firebase addon configuration."
        },
        "newrelic": {
          "$ref": "get_clients_by_id_response_newrelic",
          "description": "New Relic SSO configuration."
        },
        "office365": {
          "$ref": "get_clients_by_id_response_office365",
          "description": "Microsoft Office 365 SSO configuration."
        },
        "salesforce": {
          "$ref": "get_clients_by_id_response_salesforce",
          "description": "Salesforce SSO configuration."
        },
        "salesforce_api": {
          "$ref": "get_clients_by_id_response_salesforce_api",
          "description": "Salesforce API addon configuration."
        },
        "salesforce_sandbox_api": {
          "$ref": "get_clients_by_id_response_salesforce_sandbox_api",
          "description": "Salesforce Sandbox addon configuration."
        },
        "samlp": {
          "$ref": "get_clients_by_id_response_samlp",
          "description": "SAML2 addon indicator (no configuration settings needed for SAML2 addon)."
        },
        "layer": {
          "$ref": "get_clients_by_id_response_layer",
          "description": "Layer addon configuration."
        },
        "sap_api": {
          "$ref": "get_clients_by_id_response_sap_api",
          "description": "SAP API addon configuration."
        },
        "sharepoint": {
          "$ref": "get_clients_by_id_response_sharepoint",
          "description": "SharePoint SSO configuration."
        },
        "springcm": {
          "$ref": "get_clients_by_id_response_springcm",
          "description": "SpringCM SSO configuration."
        },
        "wams": {
          "$ref": "get_clients_by_id_response_wams",
          "description": "Windows Azure Mobile Services addon configuration."
        },
        "wsfed": {
          "$ref": "get_clients_by_id_response_wsfed",
          "description": "WS-Fed (WIF) addon indicator. Actual configuration is stored in `callback` and `client_aliases` properties on the client."
        },
        "zendesk": {
          "$ref": "get_clients_by_id_response_zendesk",
          "description": "Zendesk SSO configuration."
        },
        "zoom": {
          "$ref": "get_clients_by_id_response_zoom",
          "description": "Zoom SSO configuration."
        },
        "sso_integration": {
          "$ref": "get_clients_by_id_response_sso_integration"
        }
      }
    },
    "get_clients_by_id_response_aws": {
      "type": "object",
      "properties": {
        "principal": {
          "type": "string",
          "description": "AWS principal ARN, e.g. `arn:aws:iam::010616021751:saml-provider/idpname`"
        },
        "role": {
          "type": "string",
          "description": "AWS role ARN, e.g. `arn:aws:iam::010616021751:role/foo`"
        },
        "lifetime_in_seconds": {
          "type": "integer",
          "minimum": 900,
          "maximum": 43200,
          "description": "AWS token lifetime in seconds"
        }
      },
      "description": "AWS addon configuration.",
      "defaultValue": {}
    },
    "get_clients_by_id_response_azure_blob": {
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string",
          "pattern": "^([a-z0-9]){3,24}$",
          "description": "Your Azure storage account name. Usually first segment in your Azure storage URL. e.g. `https://acme-org.blob.core.windows.net` would be the account name `acme-org`."
        },
        "storageAccessKey": {
          "type": "string",
          "pattern": "^([A-Za-z0-9+/]){86}==$",
          "description": "Access key associated with this storage account.",
          "secret": true
        },
        "containerName": {
          "type": "string",
          "pattern": "^([a-z0-9]){1}([a-z0-9-]){2,62}$",
          "description": "Container to request a token for. e.g. `my-container`."
        },
        "blobName": {
          "type": "string",
          "pattern": "^(.){1,1024}$",
          "description": "Entity to request a token for. e.g. `my-blob`. If blank the computed SAS will apply to the entire storage container."
        },
        "expiration": {
          "type": "integer",
          "minimum": 0,
          "exclusiveMinimum": true,
          "description": "Expiration in minutes for the generated token (default of 5 minutes)."
        },
        "signedIdentifier": {
          "type": "string",
          "description": "Shared access policy identifier defined in your storage account resource."
        },
        "blob_read": {
          "type": "boolean",
          "description": "Indicates if the issued token has permission to read the content, properties, metadata and block list. Use the blob as the source of a copy operation."
        },
        "blob_write": {
          "type": "boolean",
          "description": "Indicates if the issued token has permission to create or write content, properties, metadata, or block list. Snapshot or lease the blob. Resize the blob (page blob only). Use the blob as the destination of a copy operation within the same account."
        },
        "blob_delete": {
          "type": "boolean",
          "description": "Indicates if the issued token has permission to delete the blob."
        },
        "container_read": {
          "type": "boolean",
          "description": "Indicates if the issued token has permission to read the content, properties, metadata or block list of any blob in the container. Use any blob in the container as the source of a copy operation"
        },
        "container_write": {
          "type": "boolean",
          "description": "Indicates that for any blob in the container if the issued token has permission to create or write content, properties, metadata, or block list. Snapshot or lease the blob. Resize the blob (page blob only). Use the blob as the destination of a copy operation within the same account."
        },
        "container_delete": {
          "type": "boolean",
          "description": "Indicates if issued token has permission to delete any blob in the container."
        },
        "container_list": {
          "type": "boolean",
          "description": "Indicates if the issued token has permission to list blobs in the container."
        }
      },
      "description": "Azure Blob Storage addon configuration.",
      "defaultValue": {}
    },
    "get_clients_by_id_response_azure_sb": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "description": "Your Azure Service Bus namespace. Usually the first segment of your Service Bus URL (e.g. `https://acme-org.servicebus.windows.net` would be `acme-org`)."
        },
        "sasKeyName": {
          "type": "string",
          "description": "Your shared access policy name defined in your Service Bus entity."
        },
        "sasKey": {
          "type": "string",
          "description": "Primary Key associated with your shared access policy.",
          "secret": true
        },
        "entityPath": {
          "type": "string",
          "description": "Entity you want to request a token for. e.g. `my-queue`.'"
        },
        "expiration": {
          "type": "integer",
          "description": "Optional expiration in minutes for the generated token. Defaults to 5 minutes."
        }
      },
      "description": "Azure Storage Bus addon configuration.",
      "defaultValue": {}
    },
    "get_clients_by_id_response_rms": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "format": "url",
          "description": "URL of your Rights Management Server. It can be internal or external, but users will have to be able to reach it."
        }
      },
      "required": ["url"],
      "defaultValue": {},
      "description": "Active Directory Rights Management Service SSO configuration."
    },
    "get_clients_by_id_response_mscrm": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "format": "url",
          "description": "Microsoft Dynamics CRM application URL."
        }
      },
      "required": ["url"],
      "defaultValue": {},
      "description": "Microsoft Dynamics CRM SSO configuration."
    },
    "get_clients_by_id_response_slack": {
      "type": "object",
      "properties": {
        "team": { "type": "string", "description": "Slack team name." }
      },
      "required": ["team"],
      "defaultValue": {},
      "description": "Slack team or workspace name usually first segment in your Slack URL. e.g. `https://acme-org.slack.com` would be `acme-org`."
    },
    "get_clients_by_id_response_sentry": {
      "type": "object",
      "properties": {
        "org_slug": {
          "type": "string",
          "description": "Generated slug for your Sentry organization. Found in your Sentry URL. e.g. `https://sentry.acme.com/acme-org/` would be `acme-org`."
        },
        "base_url": {
          "type": "string",
          "description": "URL prefix only if running Sentry Community Edition, otherwise leave should be blank."
        }
      },
      "defaultValue": {},
      "description": "Sentry SSO configuration."
    },
    "get_clients_by_id_response_box": {
      "type": "object",
      "defaultValue": {},
      "description": "Box SSO indicator (no configuration settings needed for Box SSO)."
    },
    "get_clients_by_id_response_cloudbees": {
      "type": "object",
      "defaultValue": {},
      "description": "CloudBees SSO indicator (no configuration settings needed for CloudBees SSO)."
    },
    "get_clients_by_id_response_concur": {
      "type": "object",
      "defaultValue": {},
      "description": "Concur SSO indicator (no configuration settings needed for Concur SSO)."
    },
    "get_clients_by_id_response_dropbox": {
      "type": "object",
      "defaultValue": {},
      "description": "Dropbox SSO indicator (no configuration settings needed for Dropbox SSO)."
    },
    "get_clients_by_id_response_echosign": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "string",
          "description": "Your custom domain found in your EchoSign URL. e.g. `https://acme-org.echosign.com` would be `acme-org`."
        }
      },
      "defaultValue": {},
      "description": "Adobe EchoSign SSO configuration."
    },
    "get_clients_by_id_response_egnyte": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "string",
          "description": "Your custom domain found in your Egnyte URL. e.g. `https://acme-org.egnyte.com` would be `acme-org`."
        }
      },
      "defaultValue": {},
      "description": "Egnyte SSO configuration."
    },
    "get_clients_by_id_response_firebase": {
      "type": "object",
      "properties": {
        "secret": {
          "type": "string",
          "description": "Google Firebase Secret. (SDK 2 only)."
        },
        "private_key_id": {
          "type": "string",
          "description": "Optional ID of the private key to obtain kid header in the issued token (SDK v3+ tokens only).",
          "secret": true
        },
        "private_key": {
          "type": "string",
          "description": "Private Key for signing the token (SDK v3+ tokens only).",
          "secret": true
        },
        "client_email": {
          "type": "string",
          "description": "ID of the Service Account you have created (shown as `client_email` in the generated JSON file, SDK v3+ tokens only)."
        },
        "lifetime_in_seconds": {
          "type": "integer",
          "description": "Optional expiration in seconds for the generated token. Defaults to 3600 seconds (SDK v3+ tokens only)."
        }
      },
      "defaultValue": {},
      "description": "Google Firebase addon configuration."
    },
    "get_clients_by_id_response_newrelic": {
      "type": "object",
      "properties": {
        "account": {
          "type": "string",
          "description": "Your New Relic Account ID found in your New Relic URL after the `/accounts/` path. e.g. `https://rpm.newrelic.com/accounts/123456/query` would be `123456`."
        }
      },
      "defaultValue": {},
      "description": "New Relic SSO configuration."
    },
    "get_clients_by_id_response_office365": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "string",
          "description": "Your Office 365 domain name. e.g. `acme-org.com`."
        },
        "connection": {
          "type": "string",
          "description": "Optional Auth0 database connection for testing an already-configured Office 365 tenant."
        }
      },
      "defaultValue": {},
      "description": "Microsoft Office 365 SSO configuration."
    },
    "get_clients_by_id_response_salesforce": {
      "type": "object",
      "properties": {
        "entity_id": {
          "type": "string",
          "format": "url",
          "description": "Arbitrary logical URL that identifies the Saleforce resource. e.g. `https://acme-org.com`."
        }
      },
      "defaultValue": {},
      "description": "Salesforce SSO configuration."
    },
    "get_clients_by_id_response_salesforce_api": {
      "type": "object",
      "properties": {
        "clientid": {
          "type": "string",
          "description": "Consumer Key assigned by Salesforce to the Connected App.",
          "secret": true
        },
        "principal": {
          "type": "string",
          "description": "Name of the property in the user object that maps to a Salesforce username. e.g. `email`.",
          "secret": true
        },
        "communityName": { "type": "string", "description": "Community name." },
        "community_url_section": {
          "type": "string",
          "description": "Community url section."
        }
      },
      "defaultValue": {},
      "description": "Salesforce API addon configuration."
    },
    "get_clients_by_id_response_salesforce_sandbox_api": {
      "type": "object",
      "properties": {
        "clientid": {
          "type": "string",
          "description": "Consumer Key assigned by Salesforce to the Connected App."
        },
        "principal": {
          "type": "string",
          "description": "Name of the property in the user object that maps to a Salesforce username. e.g. `email`."
        },
        "communityName": { "type": "string", "description": "Community name." },
        "community_url_section": {
          "type": "string",
          "description": "Community url section."
        }
      },
      "defaultValue": {},
      "description": "Salesforce Sandbox addon configuration."
    },
    "get_clients_by_id_response_samlp": {
      "type": "object",
      "properties": {
        "mappings": { "$ref": "get_clients_by_id_response_mappings" },
        "audience": { "type": "string" },
        "recipient": { "type": "string" },
        "createUpnClaim": { "type": "boolean" },
        "mapUnknownClaimsAsIs": { "type": "boolean" },
        "passthroughClaimsWithNoMapping": { "type": "boolean" },
        "mapIdentities": { "type": "boolean" },
        "signatureAlgorithm": { "type": "string" },
        "digestAlgorithm": { "type": "string" },
        "issuer": { "type": "string" },
        "destination": { "type": "string" },
        "lifetimeInSeconds": { "type": "integer" },
        "signResponse": { "type": "boolean" },
        "nameIdentifierFormat": { "type": "string" },
        "nameIdentifierProbes": {
          "type": "array",
          "items": { "type": "string", "minLength": 1 },
          "uniqueItems": true
        },
        "authnContextClassRef": { "type": "string" }
      },
      "defaultValue": {},
      "description": "SAML2 addon indicator (no configuration settings needed for SAML2 addon)."
    },
    "get_clients_by_id_response_mappings": { "type": "object" },
    "get_clients_by_id_response_layer": {
      "type": "object",
      "properties": {
        "providerId": {
          "type": "string",
          "description": "Provider ID of your Layer account"
        },
        "keyId": {
          "type": "string",
          "description": "Authentication Key identifier used to sign the Layer token.",
          "secret": true
        },
        "privateKey": {
          "type": "string",
          "description": "Private key for signing the Layer token.",
          "secret": true
        },
        "principal": {
          "type": "string",
          "description": "Name of the property used as the unique user id in Layer. If not specified `user_id` is used."
        },
        "expiration": {
          "type": "integer",
          "minimum": 0,
          "exclusiveMinimum": true,
          "description": "Optional expiration in minutes for the generated token. Defaults to 5 minutes."
        }
      },
      "required": ["providerId", "keyId", "privateKey"],
      "defaultValue": {},
      "description": "Layer addon configuration."
    },
    "get_clients_by_id_response_sap_api": {
      "type": "object",
      "properties": {
        "clientid": {
          "type": "string",
          "description": "If activated in the OAuth 2.0 client configuration (transaction SOAUTH2) the SAML attribute client_id must be set and equal the client_id form parameter of the access token request."
        },
        "usernameAttribute": {
          "type": "string",
          "description": "Name of the property in the user object that maps to a SAP username. e.g. `email`."
        },
        "tokenEndpointUrl": {
          "type": "string",
          "format": "url",
          "description": "Your SAP OData server OAuth2 token endpoint URL."
        },
        "scope": {
          "type": "string",
          "description": "Requested scope for SAP APIs."
        },
        "servicePassword": {
          "type": "string",
          "description": "Service account password to use to authenticate API calls to the token endpoint.",
          "secret": true
        },
        "nameIdentifierFormat": {
          "type": "string",
          "description": "NameID element of the Subject which can be used to express the user's identity. Defaults to `urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified`."
        }
      },
      "defaultValue": {},
      "description": "SAP API addon configuration."
    },
    "get_clients_by_id_response_sharepoint": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "Internal SharePoint application URL."
        },
        "external_url": {
          "type": "array",
          "items": { "type": "string" },
          "description": "External SharePoint application URLs if exposed to the Internet."
        }
      },
      "defaultValue": {},
      "description": "SharePoint SSO configuration."
    },
    "get_clients_by_id_response_springcm": {
      "type": "object",
      "properties": {
        "acsurl": {
          "type": "string",
          "description": "SpringCM ACS URL, e.g. `https://na11.springcm.com/atlas/sso/SSOEndpoint.ashx`."
        }
      },
      "defaultValue": {},
      "description": "SpringCM SSO configuration."
    },
    "get_clients_by_id_response_wams": {
      "type": "object",
      "properties": {
        "masterkey": {
          "type": "string",
          "description": "Your master key for Windows Azure Mobile Services.",
          "secret": true
        }
      },
      "defaultValue": {},
      "description": "Windows Azure Mobile Services addon configuration."
    },
    "get_clients_by_id_response_wsfed": {
      "type": "object",
      "defaultValue": {},
      "description": "WS-Fed (WIF) addon indicator. Actual configuration is stored in `callback` and `client_aliases` properties on the client."
    },
    "get_clients_by_id_response_zendesk": {
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string",
          "description": "Zendesk account name usually first segment in your Zendesk URL. e.g. `https://acme-org.zendesk.com` would be `acme-org`."
        }
      },
      "defaultValue": {},
      "description": "Zendesk SSO configuration."
    },
    "get_clients_by_id_response_zoom": {
      "type": "object",
      "properties": {
        "account": {
          "type": "string",
          "description": "Zoom account name usually first segment of your Zoom URL, e.g. `https://acme-org.zoom.us` would be `acme-org`."
        }
      },
      "defaultValue": {},
      "description": "Zoom SSO configuration."
    },
    "get_clients_by_id_response_sso_integration": {
      "type": "object",
      "properties": {
        "name": { "type": "string", "description": "SSO integration name" },
        "version": {
          "type": "string",
          "description": "SSO integration version installed"
        }
      }
    },
    "get_clients_by_id_response_client_metadata": {
      "type": "object",
      "description": "Metadata associated with the client, in the form of an object with string values (max 255 chars).  Maximum of 10 metadata properties allowed.  Field names (max 255 chars) are alphanumeric and may only include the following special characters:  :,-+=_*?\"/\\()<>@\t[Tab] [Space]",
      "maxProperties": 10,
      "patternProperties": {
        "^[A-Za-z0-9:,\\-+=_*\\?\"/\\\\()<>@\t ]{1,255}$": {
          "anyOf": [{ "type": "string", "maxLength": 255 }, { "type": "null" }]
        }
      },
      "additionalProperties": false
    },
    "get_clients_by_id_response_mobile": {
      "description": "Additional configuration for native mobile apps.",
      "type": "object",
      "properties": {
        "android": {
          "$ref": "get_clients_by_id_response_android",
          "description": "Android native app configuration."
        },
        "ios": {
          "$ref": "get_clients_by_id_response_ios",
          "description": "iOS native app configuration."
        }
      }
    },
    "get_clients_by_id_response_android": {
      "description": "Android native app configuration.",
      "type": "object",
      "defaultValue": {
        "app_package_name": "com.example",
        "sha256_cert_fingerprints": ["D8:A0:83:..."]
      },
      "properties": {
        "app_package_name": {
          "description": "App package name found in AndroidManifest.xml.",
          "type": "string",
          "defaultValue": ""
        },
        "sha256_cert_fingerprints": {
          "description": "SHA256 fingerprints of the app's signing certificate. Multiple fingerprints can be used to support different versions of your app, such as debug and production builds.",
          "type": "array",
          "items": { "type": "string", "minLength": 1 },
          "minItems": 1,
          "defaultValue": []
        }
      }
    },
    "get_clients_by_id_response_ios": {
      "description": "iOS native app configuration.",
      "type": "object",
      "defaultValue": {
        "team_id": "9JA89QQLNQ",
        "app_bundle_identifier": "com.my.bundle.id"
      },
      "properties": {
        "team_id": {
          "description": "Identifier assigned to the Apple account that signs and uploads the app to the store.",
          "type": "string",
          "defaultValue": ""
        },
        "app_bundle_identifier": {
          "description": "Assigned by developer to the app as its unique identifier inside the store. Usually this is a reverse domain plus the app name, e.g. `com.you.MyApp`.",
          "type": "string",
          "defaultValue": ""
        }
      }
    },
    "get_clients_by_id_response_native_social_login": {
      "description": "Configure native social settings",
      "type": "object",
      "properties": {
        "apple": {
          "$ref": "get_clients_by_id_response_apple",
          "description": "Native Social Login support for the Apple connection"
        },
        "facebook": {
          "$ref": "get_clients_by_id_response_facebook",
          "description": "Native Social Login support for the Facebook connection"
        }
      },
      "minProperties": 1,
      "additionalProperties": false
    },
    "get_clients_by_id_response_apple": {
      "description": "Native Social Login support for the Apple connection",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Determine whether or not to allow signing in natively using an Apple authorization code",
          "type": "boolean",
          "defaultValue": false
        }
      },
      "minProperties": 1,
      "additionalProperties": false
    },
    "get_clients_by_id_response_facebook": {
      "swagger": false,
      "description": "Native Social Login support for the Facebook connection",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Determine whether or not to allow signing in natively using Facebook",
          "type": "boolean",
          "defaultValue": false
        }
      },
      "minProperties": 1,
      "additionalProperties": false
    },
    "get_clients_by_id_response_refresh_token": {
      "type": "object",
      "description": "Refresh token configuration",
      "properties": {
        "rotation_type": {
          "type": "string",
          "description": "Refresh token rotation types, one of: rotating, non-rotating",
          "enum": ["rotating", "non-rotating"],
          "defaultValue": "non-rotating"
        },
        "expiration_type": {
          "type": "string",
          "description": "Refresh token expiration types, one of: expiring, non-expiring",
          "enum": ["expiring", "non-expiring"],
          "defaultValue": "non-expiring"
        },
        "leeway": {
          "type": "integer",
          "description": "Period in seconds where the previous refresh token can be exchanged without triggering breach detection",
          "defaultValue": 0,
          "minimum": 0
        },
        "token_lifetime": {
          "type": "integer",
          "description": "Period (in seconds) for which refresh tokens will remain valid",
          "minimum": 1,
          "maximum": 157788000
        },
        "infinite_token_lifetime": {
          "type": "boolean",
          "description": "Prevents tokens from having a set lifetime when `true` (takes precedence over `token_lifetime` values)"
        },
        "idle_token_lifetime": {
          "type": "integer",
          "description": "Period (in seconds) for which refresh tokens will remain valid without use",
          "minimum": 1
        },
        "infinite_idle_token_lifetime": {
          "type": "boolean",
          "description": "Prevents tokens from expiring without use when `true` (takes precedence over `idle_token_lifetime` values)",
          "defaultValue": false
        }
      },
      "required": ["rotation_type", "expiration_type"],
      "additionalProperties": false
    },
    "get_clients_by_id_response_private_key_jwt": {
      "description": "Defines `private_key_jwt` client authentication method .",
      "type": "object",
      "properties": {
        "credentials": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": { "type": "string", "description": "Credential ID" }
            },
            "required": ["id"],
            "additionalProperties": false
          },
          "uniqueItems": false,
          "minItems": 0,
          "maxItems": 2
        }
      },
      "required": ["credentials"],
      "additionalProperties": false
    },
    "get_clients_by_id_response_claims_mapping": {
      "type": "object",
      "description": "Custom configuration for claims in ID tokens",
      "properties": { "sub": { "$ref": "get_clients_by_id_response_sub" } },
      "additionalProperties": false
    },
    "get_clients_by_id_response_sub": {
      "properties": { "source": { "enum": ["default"] } },
      "required": ["source"]
    },
    "patch_clients_by_id_response": {
      "type": "object",
      "properties": {
        "client_id": {
          "type": "string",
          "description": "ID of this client.",
          "defaultValue": "AaiyAPdpYdesoKnqjj8HJqRn4T5titww"
        },
        "tenant": {
          "type": "string",
          "description": "Name of the tenant this client belongs to.",
          "defaultValue": ""
        },
        "name": {
          "type": "string",
          "description": "Name of this client (min length: 1 character, does not allow `<` or `>`).",
          "defaultValue": "My application"
        },
        "description": {
          "type": "string",
          "description": "Free text description of this client (max length: 140 characters).",
          "defaultValue": ""
        },
        "global": {
          "type": "boolean",
          "description": "Whether this is your global 'All Applications' client representing legacy tenant settings (true) or a regular client (false).",
          "defaultValue": false
        },
        "client_secret": {
          "type": "string",
          "description": "Client secret (which you must not make public).",
          "defaultValue": "MG_TNT2ver-SylNat-_VeMmd-4m0Waba0jr1troztBniSChEw0glxEmgEi2Kw40H",
          "secret": true
        },
        "app_type": {
          "type": "string",
          "description": "Type of client used to determine which settings are applicable. Can be `spa`, `native`, `non_interactive`, or `regular_web`.",
          "defaultValue": ""
        },
        "logo_uri": {
          "type": "string",
          "description": "URL of the logo to display for this client. Recommended size is 150x150 pixels."
        },
        "is_first_party": {
          "type": "boolean",
          "description": "Whether this client a first party client (true) or not (false).",
          "defaultValue": false
        },
        "oidc_conformant": {
          "type": "boolean",
          "description": "Whether this client conforms to <a href='https://auth0.com/docs/api-auth/tutorials/adoption'>strict OIDC specifications</a> (true) or uses legacy features (false).",
          "defaultValue": false
        },
        "callbacks": {
          "type": "array",
          "items": { "type": "string" },
          "description": "Comma-separated list of URLs whitelisted for Auth0 to use as a callback to the client after authentication.",
          "defaultValue": "http://localhost/callback"
        },
        "allowed_origins": {
          "type": "array",
          "items": { "type": "string" },
          "description": "Comma-separated list of URLs allowed to make requests from JavaScript to Auth0 API (typically used with CORS). By default, all your callback URLs will be allowed. This field allows you to enter other origins if necessary. You can also use wildcards at the subdomain level (e.g., https://*.contoso.com). Query strings and hash information are not taken into account when validating these URLs."
        },
        "web_origins": {
          "type": "array",
          "items": { "type": "string" },
          "description": "Comma-separated list of allowed origins for use with <a href='https://auth0.com/docs/cross-origin-authentication'>Cross-Origin Authentication</a>, <a href='https://auth0.com/docs/flows/concepts/device-auth'>Device Flow</a>, and <a href='https://auth0.com/docs/protocols/oauth2#how-response-mode-works'>web message response mode</a>."
        },
        "client_aliases": {
          "type": "array",
          "items": { "type": "string" },
          "description": "List of audiences/realms for SAML protocol. Used by the wsfed addon."
        },
        "allowed_clients": {
          "type": "array",
          "items": { "type": "string" },
          "description": "List of allow clients and API ids that are allowed to make delegation requests. Empty means all all your clients are allowed."
        },
        "allowed_logout_urls": {
          "type": "array",
          "description": "Comma-separated list of URLs that are valid to redirect to after logout from Auth0. Wildcards are allowed for subdomains.",
          "items": { "type": "string" },
          "defaultValue": "http://localhost/logoutCallback"
        },
        "oidc_backchannel_logout": {
          "$ref": "patch_clients_by_id_response_oidc_backchannel_logout",
          "description": "Configuration for OIDC backchannel logout"
        },
        "grant_types": {
          "type": "array",
          "items": { "type": "string" },
          "description": "List of grant types supported for this application. Can include `authorization_code`, `implicit`, `refresh_token`, `client_credentials`, `password`, `http://auth0.com/oauth/grant-type/password-realm`, `http://auth0.com/oauth/grant-type/mfa-oob`, `http://auth0.com/oauth/grant-type/mfa-otp`, `http://auth0.com/oauth/grant-type/mfa-recovery-code`, and `urn:ietf:params:oauth:grant-type:device_code`."
        },
        "jwt_configuration": {
          "$ref": "patch_clients_by_id_response_jwt_configuration",
          "description": "Configuration related to JWTs for the client."
        },
        "signing_keys": {
          "type": "array",
          "description": "Signing certificates associated with this client.",
          "items": {
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "pkcs7": {
                "type": "string",
                "description": "Signing certificate public key and chain in PKCS#7 (.P7B) format.",
                "defaultValue": ""
              },
              "cert": {
                "type": "string",
                "description": "Signing certificate public key in X.590 (.CER) format.",
                "defaultValue": ""
              },
              "subject": {
                "type": "string",
                "description": "Subject name for this certificate in the format `/CN={domain}`.",
                "defaultValue": ""
              }
            }
          }
        },
        "encryption_key": {
          "$ref": "patch_clients_by_id_response_encryption_key",
          "description": "Encryption used for WsFed responses with this client."
        },
        "sso": {
          "type": "boolean",
          "description": "Applies only to SSO clients and determines whether Auth0 will handle Single Sign On (true) or whether the Identity Provider will (false).",
          "defaultValue": false
        },
        "sso_disabled": {
          "type": "boolean",
          "description": "Whether Single Sign On is disabled (true) or enabled (true). Defaults to true.",
          "defaultValue": false
        },
        "cross_origin_authentication": {
          "type": "boolean",
          "description": "Whether this client can be used to make cross-origin authentication requests (true) or it is not allowed to make such requests (false)."
        },
        "cross_origin_loc": {
          "type": "string",
          "format": "url",
          "description": "URL of the location in your site where the cross origin verification takes place for the cross-origin auth flow when performing Auth in your own domain instead of Auth0 hosted login page."
        },
        "custom_login_page_on": {
          "type": "boolean",
          "description": "Whether a custom login page is to be used (true) or the default provided login page (false).",
          "defaultValue": true
        },
        "custom_login_page": {
          "type": "string",
          "description": "The content (HTML, CSS, JS) of the custom login page.",
          "defaultValue": ""
        },
        "custom_login_page_preview": {
          "type": "string",
          "description": "The content (HTML, CSS, JS) of the custom login page. (Used on Previews)",
          "defaultValue": ""
        },
        "form_template": {
          "type": "string",
          "description": "HTML form template to be used for WS-Federation.",
          "defaultValue": ""
        },
        "addons": {
          "$ref": "patch_clients_by_id_response_addons",
          "description": "Addons enabled for this client and their associated configurations."
        },
        "token_endpoint_auth_method": {
          "type": "string",
          "defaultValue": "none",
          "enum": ["none", "client_secret_post", "client_secret_basic"],
          "description": "Defines the requested authentication method for the token endpoint. Can be `none` (public client without a client secret), `client_secret_post` (client uses HTTP POST parameters), or `client_secret_basic` (client uses HTTP Basic)."
        },
        "client_metadata": {
          "$ref": "patch_clients_by_id_response_client_metadata",
          "description": "Metadata associated with the client, in the form of an object with string values (max 255 chars).  Maximum of 10 metadata properties allowed.  Field names (max 255 chars) are alphanumeric and may only include the following special characters:  :,-+=_*?\"/\\()<>@\t[Tab] [Space]"
        },
        "mobile": {
          "$ref": "patch_clients_by_id_response_mobile",
          "description": "Additional configuration for native mobile apps."
        },
        "initiate_login_uri": {
          "type": "string",
          "format": "absolute-https-uri-or-empty",
          "description": "Initiate login uri, must be https"
        },
        "native_social_login": {
          "$ref": "patch_clients_by_id_response_native_social_login",
          "description": "Configure native social settings"
        },
        "refresh_token": {
          "$ref": "patch_clients_by_id_response_refresh_token",
          "description": "Refresh token configuration"
        },
        "organization_usage": {
          "type": "string",
          "enum": ["deny", "allow", "require"],
          "description": "Defines how to proceed during an authentication transaction with regards an organization. Can be `deny` (default), `allow` or `require`.",
          "defaultValue": "deny"
        },
        "organization_require_behavior": {
          "type": "string",
          "enum": ["no_prompt", "pre_login_prompt", "post_login_prompt"],
          "description": "Defines how to proceed during an authentication transaction when `client.organization_usage: 'require'`. Can be `no_prompt` (default) or `pre_login_prompt`.",
          "defaultValue": "no_prompt"
        }
      }
    },
    "patch_clients_by_id_response_oidc_backchannel_logout": {
      "type": "object",
      "description": "Configuration for OIDC backchannel logout",
      "properties": {
        "backchannel_logout_urls": {
          "type": "array",
          "description": "Comma-separated list of URLs that are valid to call back from Auth0 for OIDC backchannel logout. Currently only one URL is allowed.",
          "items": { "type": "string", "format": "callback-url" }
        }
      }
    },
    "patch_clients_by_id_response_jwt_configuration": {
      "description": "Configuration related to JWTs for the client.",
      "type": "object",
      "properties": {
        "lifetime_in_seconds": {
          "description": "Number of seconds the JWT will be valid for (affects `exp` claim).",
          "type": "integer",
          "defaultValue": 36000
        },
        "secret_encoded": {
          "description": "Whether the client secret is base64 encoded (true) or unencoded (false).",
          "type": "boolean",
          "defaultValue": true
        },
        "scopes": {
          "$ref": "patch_clients_by_id_response_scopes",
          "description": "Configuration related to id token claims for the client."
        },
        "alg": {
          "type": "string",
          "defaultValue": "HS256",
          "enum": ["HS256", "RS256"],
          "description": "Algorithm used to sign JWTs. Can be `HS256` or `RS256`."
        }
      }
    },
    "patch_clients_by_id_response_scopes": {
      "type": "object",
      "defaultValue": {},
      "description": "Configuration related to id token claims for the client."
    },
    "patch_clients_by_id_response_encryption_key": {
      "type": "object",
      "description": "Encryption used for WsFed responses with this client.",
      "properties": {
        "pub": {
          "type": "string",
          "description": "Encryption Public RSA Key."
        },
        "cert": {
          "type": "string",
          "description": "Encryption certificate for public key in X.590 (.CER) format."
        },
        "subject": {
          "type": "string",
          "description": "Encryption certificate name for this certificate in the format `/CN={domain}`."
        }
      },
      "secret": true
    },
    "patch_clients_by_id_response_addons": {
      "type": "object",
      "additionalProperties": false,
      "description": "Addons enabled for this client and their associated configurations.",
      "properties": {
        "aws": {
          "$ref": "patch_clients_by_id_response_aws",
          "description": "AWS addon configuration."
        },
        "azure_blob": {
          "$ref": "patch_clients_by_id_response_azure_blob",
          "description": "Azure Blob Storage addon configuration."
        },
        "azure_sb": {
          "$ref": "patch_clients_by_id_response_azure_sb",
          "description": "Azure Storage Bus addon configuration."
        },
        "rms": {
          "$ref": "patch_clients_by_id_response_rms",
          "description": "Active Directory Rights Management Service SSO configuration."
        },
        "mscrm": {
          "$ref": "patch_clients_by_id_response_mscrm",
          "description": "Microsoft Dynamics CRM SSO configuration."
        },
        "slack": {
          "$ref": "patch_clients_by_id_response_slack",
          "description": "Slack team or workspace name usually first segment in your Slack URL. e.g. `https://acme-org.slack.com` would be `acme-org`."
        },
        "sentry": {
          "$ref": "patch_clients_by_id_response_sentry",
          "description": "Sentry SSO configuration."
        },
        "box": {
          "$ref": "patch_clients_by_id_response_box",
          "description": "Box SSO indicator (no configuration settings needed for Box SSO)."
        },
        "cloudbees": {
          "$ref": "patch_clients_by_id_response_cloudbees",
          "description": "CloudBees SSO indicator (no configuration settings needed for CloudBees SSO)."
        },
        "concur": {
          "$ref": "patch_clients_by_id_response_concur",
          "description": "Concur SSO indicator (no configuration settings needed for Concur SSO)."
        },
        "dropbox": {
          "$ref": "patch_clients_by_id_response_dropbox",
          "description": "Dropbox SSO indicator (no configuration settings needed for Dropbox SSO)."
        },
        "echosign": {
          "$ref": "patch_clients_by_id_response_echosign",
          "description": "Adobe EchoSign SSO configuration."
        },
        "egnyte": {
          "$ref": "patch_clients_by_id_response_egnyte",
          "description": "Egnyte SSO configuration."
        },
        "firebase": {
          "$ref": "patch_clients_by_id_response_firebase",
          "description": "Google Firebase addon configuration."
        },
        "newrelic": {
          "$ref": "patch_clients_by_id_response_newrelic",
          "description": "New Relic SSO configuration."
        },
        "office365": {
          "$ref": "patch_clients_by_id_response_office365",
          "description": "Microsoft Office 365 SSO configuration."
        },
        "salesforce": {
          "$ref": "patch_clients_by_id_response_salesforce",
          "description": "Salesforce SSO configuration."
        },
        "salesforce_api": {
          "$ref": "patch_clients_by_id_response_salesforce_api",
          "description": "Salesforce API addon configuration."
        },
        "salesforce_sandbox_api": {
          "$ref": "patch_clients_by_id_response_salesforce_sandbox_api",
          "description": "Salesforce Sandbox addon configuration."
        },
        "samlp": {
          "$ref": "patch_clients_by_id_response_samlp",
          "description": "SAML2 addon indicator (no configuration settings needed for SAML2 addon)."
        },
        "layer": {
          "$ref": "patch_clients_by_id_response_layer",
          "description": "Layer addon configuration."
        },
        "sap_api": {
          "$ref": "patch_clients_by_id_response_sap_api",
          "description": "SAP API addon configuration."
        },
        "sharepoint": {
          "$ref": "patch_clients_by_id_response_sharepoint",
          "description": "SharePoint SSO configuration."
        },
        "springcm": {
          "$ref": "patch_clients_by_id_response_springcm",
          "description": "SpringCM SSO configuration."
        },
        "wams": {
          "$ref": "patch_clients_by_id_response_wams",
          "description": "Windows Azure Mobile Services addon configuration."
        },
        "wsfed": {
          "$ref": "patch_clients_by_id_response_wsfed",
          "description": "WS-Fed (WIF) addon indicator. Actual configuration is stored in `callback` and `client_aliases` properties on the client."
        },
        "zendesk": {
          "$ref": "patch_clients_by_id_response_zendesk",
          "description": "Zendesk SSO configuration."
        },
        "zoom": {
          "$ref": "patch_clients_by_id_response_zoom",
          "description": "Zoom SSO configuration."
        },
        "sso_integration": {
          "$ref": "patch_clients_by_id_response_sso_integration"
        }
      }
    },
    "patch_clients_by_id_response_aws": {
      "type": "object",
      "properties": {
        "principal": {
          "type": "string",
          "description": "AWS principal ARN, e.g. `arn:aws:iam::010616021751:saml-provider/idpname`"
        },
        "role": {
          "type": "string",
          "description": "AWS role ARN, e.g. `arn:aws:iam::010616021751:role/foo`"
        },
        "lifetime_in_seconds": {
          "type": "integer",
          "minimum": 900,
          "maximum": 43200,
          "description": "AWS token lifetime in seconds"
        }
      },
      "description": "AWS addon configuration.",
      "defaultValue": {}
    },
    "patch_clients_by_id_response_azure_blob": {
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string",
          "pattern": "^([a-z0-9]){3,24}$",
          "description": "Your Azure storage account name. Usually first segment in your Azure storage URL. e.g. `https://acme-org.blob.core.windows.net` would be the account name `acme-org`."
        },
        "storageAccessKey": {
          "type": "string",
          "pattern": "^([A-Za-z0-9+/]){86}==$",
          "description": "Access key associated with this storage account.",
          "secret": true
        },
        "containerName": {
          "type": "string",
          "pattern": "^([a-z0-9]){1}([a-z0-9-]){2,62}$",
          "description": "Container to request a token for. e.g. `my-container`."
        },
        "blobName": {
          "type": "string",
          "pattern": "^(.){1,1024}$",
          "description": "Entity to request a token for. e.g. `my-blob`. If blank the computed SAS will apply to the entire storage container."
        },
        "expiration": {
          "type": "integer",
          "minimum": 0,
          "exclusiveMinimum": true,
          "description": "Expiration in minutes for the generated token (default of 5 minutes)."
        },
        "signedIdentifier": {
          "type": "string",
          "description": "Shared access policy identifier defined in your storage account resource."
        },
        "blob_read": {
          "type": "boolean",
          "description": "Indicates if the issued token has permission to read the content, properties, metadata and block list. Use the blob as the source of a copy operation."
        },
        "blob_write": {
          "type": "boolean",
          "description": "Indicates if the issued token has permission to create or write content, properties, metadata, or block list. Snapshot or lease the blob. Resize the blob (page blob only). Use the blob as the destination of a copy operation within the same account."
        },
        "blob_delete": {
          "type": "boolean",
          "description": "Indicates if the issued token has permission to delete the blob."
        },
        "container_read": {
          "type": "boolean",
          "description": "Indicates if the issued token has permission to read the content, properties, metadata or block list of any blob in the container. Use any blob in the container as the source of a copy operation"
        },
        "container_write": {
          "type": "boolean",
          "description": "Indicates that for any blob in the container if the issued token has permission to create or write content, properties, metadata, or block list. Snapshot or lease the blob. Resize the blob (page blob only). Use the blob as the destination of a copy operation within the same account."
        },
        "container_delete": {
          "type": "boolean",
          "description": "Indicates if issued token has permission to delete any blob in the container."
        },
        "container_list": {
          "type": "boolean",
          "description": "Indicates if the issued token has permission to list blobs in the container."
        }
      },
      "description": "Azure Blob Storage addon configuration.",
      "defaultValue": {}
    },
    "patch_clients_by_id_response_azure_sb": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "description": "Your Azure Service Bus namespace. Usually the first segment of your Service Bus URL (e.g. `https://acme-org.servicebus.windows.net` would be `acme-org`)."
        },
        "sasKeyName": {
          "type": "string",
          "description": "Your shared access policy name defined in your Service Bus entity."
        },
        "sasKey": {
          "type": "string",
          "description": "Primary Key associated with your shared access policy.",
          "secret": true
        },
        "entityPath": {
          "type": "string",
          "description": "Entity you want to request a token for. e.g. `my-queue`.'"
        },
        "expiration": {
          "type": "integer",
          "description": "Optional expiration in minutes for the generated token. Defaults to 5 minutes."
        }
      },
      "description": "Azure Storage Bus addon configuration.",
      "defaultValue": {}
    },
    "patch_clients_by_id_response_rms": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "format": "url",
          "description": "URL of your Rights Management Server. It can be internal or external, but users will have to be able to reach it."
        }
      },
      "required": ["url"],
      "defaultValue": {},
      "description": "Active Directory Rights Management Service SSO configuration."
    },
    "patch_clients_by_id_response_mscrm": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "format": "url",
          "description": "Microsoft Dynamics CRM application URL."
        }
      },
      "required": ["url"],
      "defaultValue": {},
      "description": "Microsoft Dynamics CRM SSO configuration."
    },
    "patch_clients_by_id_response_slack": {
      "type": "object",
      "properties": {
        "team": { "type": "string", "description": "Slack team name." }
      },
      "required": ["team"],
      "defaultValue": {},
      "description": "Slack team or workspace name usually first segment in your Slack URL. e.g. `https://acme-org.slack.com` would be `acme-org`."
    },
    "patch_clients_by_id_response_sentry": {
      "type": "object",
      "properties": {
        "org_slug": {
          "type": "string",
          "description": "Generated slug for your Sentry organization. Found in your Sentry URL. e.g. `https://sentry.acme.com/acme-org/` would be `acme-org`."
        },
        "base_url": {
          "type": "string",
          "description": "URL prefix only if running Sentry Community Edition, otherwise leave should be blank."
        }
      },
      "defaultValue": {},
      "description": "Sentry SSO configuration."
    },
    "patch_clients_by_id_response_box": {
      "type": "object",
      "defaultValue": {},
      "description": "Box SSO indicator (no configuration settings needed for Box SSO)."
    },
    "patch_clients_by_id_response_cloudbees": {
      "type": "object",
      "defaultValue": {},
      "description": "CloudBees SSO indicator (no configuration settings needed for CloudBees SSO)."
    },
    "patch_clients_by_id_response_concur": {
      "type": "object",
      "defaultValue": {},
      "description": "Concur SSO indicator (no configuration settings needed for Concur SSO)."
    },
    "patch_clients_by_id_response_dropbox": {
      "type": "object",
      "defaultValue": {},
      "description": "Dropbox SSO indicator (no configuration settings needed for Dropbox SSO)."
    },
    "patch_clients_by_id_response_echosign": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "string",
          "description": "Your custom domain found in your EchoSign URL. e.g. `https://acme-org.echosign.com` would be `acme-org`."
        }
      },
      "defaultValue": {},
      "description": "Adobe EchoSign SSO configuration."
    },
    "patch_clients_by_id_response_egnyte": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "string",
          "description": "Your custom domain found in your Egnyte URL. e.g. `https://acme-org.egnyte.com` would be `acme-org`."
        }
      },
      "defaultValue": {},
      "description": "Egnyte SSO configuration."
    },
    "patch_clients_by_id_response_firebase": {
      "type": "object",
      "properties": {
        "secret": {
          "type": "string",
          "description": "Google Firebase Secret. (SDK 2 only)."
        },
        "private_key_id": {
          "type": "string",
          "description": "Optional ID of the private key to obtain kid header in the issued token (SDK v3+ tokens only).",
          "secret": true
        },
        "private_key": {
          "type": "string",
          "description": "Private Key for signing the token (SDK v3+ tokens only).",
          "secret": true
        },
        "client_email": {
          "type": "string",
          "description": "ID of the Service Account you have created (shown as `client_email` in the generated JSON file, SDK v3+ tokens only)."
        },
        "lifetime_in_seconds": {
          "type": "integer",
          "description": "Optional expiration in seconds for the generated token. Defaults to 3600 seconds (SDK v3+ tokens only)."
        }
      },
      "defaultValue": {},
      "description": "Google Firebase addon configuration."
    },
    "patch_clients_by_id_response_newrelic": {
      "type": "object",
      "properties": {
        "account": {
          "type": "string",
          "description": "Your New Relic Account ID found in your New Relic URL after the `/accounts/` path. e.g. `https://rpm.newrelic.com/accounts/123456/query` would be `123456`."
        }
      },
      "defaultValue": {},
      "description": "New Relic SSO configuration."
    },
    "patch_clients_by_id_response_office365": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "string",
          "description": "Your Office 365 domain name. e.g. `acme-org.com`."
        },
        "connection": {
          "type": "string",
          "description": "Optional Auth0 database connection for testing an already-configured Office 365 tenant."
        }
      },
      "defaultValue": {},
      "description": "Microsoft Office 365 SSO configuration."
    },
    "patch_clients_by_id_response_salesforce": {
      "type": "object",
      "properties": {
        "entity_id": {
          "type": "string",
          "format": "url",
          "description": "Arbitrary logical URL that identifies the Saleforce resource. e.g. `https://acme-org.com`."
        }
      },
      "defaultValue": {},
      "description": "Salesforce SSO configuration."
    },
    "patch_clients_by_id_response_salesforce_api": {
      "type": "object",
      "properties": {
        "clientid": {
          "type": "string",
          "description": "Consumer Key assigned by Salesforce to the Connected App.",
          "secret": true
        },
        "principal": {
          "type": "string",
          "description": "Name of the property in the user object that maps to a Salesforce username. e.g. `email`.",
          "secret": true
        },
        "communityName": { "type": "string", "description": "Community name." },
        "community_url_section": {
          "type": "string",
          "description": "Community url section."
        }
      },
      "defaultValue": {},
      "description": "Salesforce API addon configuration."
    },
    "patch_clients_by_id_response_salesforce_sandbox_api": {
      "type": "object",
      "properties": {
        "clientid": {
          "type": "string",
          "description": "Consumer Key assigned by Salesforce to the Connected App."
        },
        "principal": {
          "type": "string",
          "description": "Name of the property in the user object that maps to a Salesforce username. e.g. `email`."
        },
        "communityName": { "type": "string", "description": "Community name." },
        "community_url_section": {
          "type": "string",
          "description": "Community url section."
        }
      },
      "defaultValue": {},
      "description": "Salesforce Sandbox addon configuration."
    },
    "patch_clients_by_id_response_samlp": {
      "type": "object",
      "properties": {
        "mappings": { "$ref": "patch_clients_by_id_response_mappings" },
        "audience": { "type": "string" },
        "recipient": { "type": "string" },
        "createUpnClaim": { "type": "boolean" },
        "mapUnknownClaimsAsIs": { "type": "boolean" },
        "passthroughClaimsWithNoMapping": { "type": "boolean" },
        "mapIdentities": { "type": "boolean" },
        "signatureAlgorithm": { "type": "string" },
        "digestAlgorithm": { "type": "string" },
        "issuer": { "type": "string" },
        "destination": { "type": "string" },
        "lifetimeInSeconds": { "type": "integer" },
        "signResponse": { "type": "boolean" },
        "nameIdentifierFormat": { "type": "string" },
        "nameIdentifierProbes": {
          "type": "array",
          "items": { "type": "string", "minLength": 1 },
          "uniqueItems": true
        },
        "authnContextClassRef": { "type": "string" }
      },
      "defaultValue": {},
      "description": "SAML2 addon indicator (no configuration settings needed for SAML2 addon)."
    },
    "patch_clients_by_id_response_mappings": { "type": "object" },
    "patch_clients_by_id_response_layer": {
      "type": "object",
      "properties": {
        "providerId": {
          "type": "string",
          "description": "Provider ID of your Layer account"
        },
        "keyId": {
          "type": "string",
          "description": "Authentication Key identifier used to sign the Layer token.",
          "secret": true
        },
        "privateKey": {
          "type": "string",
          "description": "Private key for signing the Layer token.",
          "secret": true
        },
        "principal": {
          "type": "string",
          "description": "Name of the property used as the unique user id in Layer. If not specified `user_id` is used."
        },
        "expiration": {
          "type": "integer",
          "minimum": 0,
          "exclusiveMinimum": true,
          "description": "Optional expiration in minutes for the generated token. Defaults to 5 minutes."
        }
      },
      "required": ["providerId", "keyId", "privateKey"],
      "defaultValue": {},
      "description": "Layer addon configuration."
    },
    "patch_clients_by_id_response_sap_api": {
      "type": "object",
      "properties": {
        "clientid": {
          "type": "string",
          "description": "If activated in the OAuth 2.0 client configuration (transaction SOAUTH2) the SAML attribute client_id must be set and equal the client_id form parameter of the access token request."
        },
        "usernameAttribute": {
          "type": "string",
          "description": "Name of the property in the user object that maps to a SAP username. e.g. `email`."
        },
        "tokenEndpointUrl": {
          "type": "string",
          "format": "url",
          "description": "Your SAP OData server OAuth2 token endpoint URL."
        },
        "scope": {
          "type": "string",
          "description": "Requested scope for SAP APIs."
        },
        "servicePassword": {
          "type": "string",
          "description": "Service account password to use to authenticate API calls to the token endpoint.",
          "secret": true
        },
        "nameIdentifierFormat": {
          "type": "string",
          "description": "NameID element of the Subject which can be used to express the user's identity. Defaults to `urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified`."
        }
      },
      "defaultValue": {},
      "description": "SAP API addon configuration."
    },
    "patch_clients_by_id_response_sharepoint": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "Internal SharePoint application URL."
        },
        "external_url": {
          "type": "array",
          "items": { "type": "string" },
          "description": "External SharePoint application URLs if exposed to the Internet."
        }
      },
      "defaultValue": {},
      "description": "SharePoint SSO configuration."
    },
    "patch_clients_by_id_response_springcm": {
      "type": "object",
      "properties": {
        "acsurl": {
          "type": "string",
          "description": "SpringCM ACS URL, e.g. `https://na11.springcm.com/atlas/sso/SSOEndpoint.ashx`."
        }
      },
      "defaultValue": {},
      "description": "SpringCM SSO configuration."
    },
    "patch_clients_by_id_response_wams": {
      "type": "object",
      "properties": {
        "masterkey": {
          "type": "string",
          "description": "Your master key for Windows Azure Mobile Services.",
          "secret": true
        }
      },
      "defaultValue": {},
      "description": "Windows Azure Mobile Services addon configuration."
    },
    "patch_clients_by_id_response_wsfed": {
      "type": "object",
      "defaultValue": {},
      "description": "WS-Fed (WIF) addon indicator. Actual configuration is stored in `callback` and `client_aliases` properties on the client."
    },
    "patch_clients_by_id_response_zendesk": {
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string",
          "description": "Zendesk account name usually first segment in your Zendesk URL. e.g. `https://acme-org.zendesk.com` would be `acme-org`."
        }
      },
      "defaultValue": {},
      "description": "Zendesk SSO configuration."
    },
    "patch_clients_by_id_response_zoom": {
      "type": "object",
      "properties": {
        "account": {
          "type": "string",
          "description": "Zoom account name usually first segment of your Zoom URL, e.g. `https://acme-org.zoom.us` would be `acme-org`."
        }
      },
      "defaultValue": {},
      "description": "Zoom SSO configuration."
    },
    "patch_clients_by_id_response_sso_integration": {
      "type": "object",
      "properties": {
        "name": { "type": "string", "description": "SSO integration name" },
        "version": {
          "type": "string",
          "description": "SSO integration version installed"
        }
      }
    },
    "patch_clients_by_id_response_client_metadata": {
      "type": "object",
      "description": "Metadata associated with the client, in the form of an object with string values (max 255 chars).  Maximum of 10 metadata properties allowed.  Field names (max 255 chars) are alphanumeric and may only include the following special characters:  :,-+=_*?\"/\\()<>@\t[Tab] [Space]",
      "maxProperties": 10,
      "patternProperties": {
        "^[A-Za-z0-9:,\\-+=_*\\?\"/\\\\()<>@\t ]{1,255}$": {
          "anyOf": [{ "type": "string", "maxLength": 255 }, { "type": "null" }]
        }
      },
      "additionalProperties": false
    },
    "patch_clients_by_id_response_mobile": {
      "description": "Additional configuration for native mobile apps.",
      "type": "object",
      "properties": {
        "android": {
          "$ref": "patch_clients_by_id_response_android",
          "description": "Android native app configuration."
        },
        "ios": {
          "$ref": "patch_clients_by_id_response_ios",
          "description": "iOS native app configuration."
        }
      }
    },
    "patch_clients_by_id_response_android": {
      "description": "Android native app configuration.",
      "type": "object",
      "defaultValue": {
        "app_package_name": "com.example",
        "sha256_cert_fingerprints": ["D8:A0:83:..."]
      },
      "properties": {
        "app_package_name": {
          "description": "App package name found in AndroidManifest.xml.",
          "type": "string",
          "defaultValue": ""
        },
        "sha256_cert_fingerprints": {
          "description": "SHA256 fingerprints of the app's signing certificate. Multiple fingerprints can be used to support different versions of your app, such as debug and production builds.",
          "type": "array",
          "items": { "type": "string", "minLength": 1 },
          "minItems": 1,
          "defaultValue": []
        }
      }
    },
    "patch_clients_by_id_response_ios": {
      "description": "iOS native app configuration.",
      "type": "object",
      "defaultValue": {
        "team_id": "9JA89QQLNQ",
        "app_bundle_identifier": "com.my.bundle.id"
      },
      "properties": {
        "team_id": {
          "description": "Identifier assigned to the Apple account that signs and uploads the app to the store.",
          "type": "string",
          "defaultValue": ""
        },
        "app_bundle_identifier": {
          "description": "Assigned by developer to the app as its unique identifier inside the store. Usually this is a reverse domain plus the app name, e.g. `com.you.MyApp`.",
          "type": "string",
          "defaultValue": ""
        }
      }
    },
    "patch_clients_by_id_response_native_social_login": {
      "description": "Configure native social settings",
      "type": "object",
      "properties": {
        "apple": {
          "$ref": "patch_clients_by_id_response_apple",
          "description": "Native Social Login support for the Apple connection"
        },
        "facebook": {
          "$ref": "patch_clients_by_id_response_facebook",
          "description": "Native Social Login support for the Facebook connection"
        }
      },
      "minProperties": 1,
      "additionalProperties": false
    },
    "patch_clients_by_id_response_apple": {
      "description": "Native Social Login support for the Apple connection",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Determine whether or not to allow signing in natively using an Apple authorization code",
          "type": "boolean",
          "defaultValue": false
        }
      },
      "minProperties": 1,
      "additionalProperties": false
    },
    "patch_clients_by_id_response_facebook": {
      "swagger": false,
      "description": "Native Social Login support for the Facebook connection",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Determine whether or not to allow signing in natively using Facebook",
          "type": "boolean",
          "defaultValue": false
        }
      },
      "minProperties": 1,
      "additionalProperties": false
    },
    "patch_clients_by_id_response_refresh_token": {
      "type": "object",
      "description": "Refresh token configuration",
      "properties": {
        "rotation_type": {
          "type": "string",
          "description": "Refresh token rotation types, one of: rotating, non-rotating",
          "enum": ["rotating", "non-rotating"],
          "defaultValue": "non-rotating"
        },
        "expiration_type": {
          "type": "string",
          "description": "Refresh token expiration types, one of: expiring, non-expiring",
          "enum": ["expiring", "non-expiring"],
          "defaultValue": "non-expiring"
        },
        "leeway": {
          "type": "integer",
          "description": "Period in seconds where the previous refresh token can be exchanged without triggering breach detection",
          "defaultValue": 0,
          "minimum": 0
        },
        "token_lifetime": {
          "type": "integer",
          "description": "Period (in seconds) for which refresh tokens will remain valid",
          "minimum": 1,
          "maximum": 157788000
        },
        "infinite_token_lifetime": {
          "type": "boolean",
          "description": "Prevents tokens from having a set lifetime when `true` (takes precedence over `token_lifetime` values)"
        },
        "idle_token_lifetime": {
          "type": "integer",
          "description": "Period (in seconds) for which refresh tokens will remain valid without use",
          "minimum": 1
        },
        "infinite_idle_token_lifetime": {
          "type": "boolean",
          "description": "Prevents tokens from expiring without use when `true` (takes precedence over `idle_token_lifetime` values)",
          "defaultValue": false
        }
      },
      "required": ["rotation_type", "expiration_type"],
      "additionalProperties": false
    },
    "patch_clients_by_id_response_private_key_jwt": {
      "description": "Defines `private_key_jwt` client authentication method .",
      "type": "object",
      "properties": {
        "credentials": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": { "type": "string", "description": "Credential ID" }
            },
            "required": ["id"],
            "additionalProperties": false
          },
          "uniqueItems": false,
          "minItems": 0,
          "maxItems": 2
        }
      },
      "required": ["credentials"],
      "additionalProperties": false
    },
    "patch_clients_by_id_response_claims_mapping": {
      "type": "object",
      "description": "Custom configuration for claims in ID tokens",
      "properties": { "sub": { "$ref": "patch_clients_by_id_response_sub" } },
      "additionalProperties": false
    },
    "patch_clients_by_id_response_sub": {
      "properties": { "source": { "enum": ["default"] } },
      "required": ["source"]
    },
    "patch_clients_by_id_body": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "pattern": "^[^<>]+$",
          "description": "The name of the client. Must contain at least one character. Does not allow '<' or '>'."
        },
        "description": {
          "type": "string",
          "maxLength": 140,
          "description": "Free text description of the purpose of the Client. (Max character length: <code>140</code>)"
        },
        "client_secret": {
          "type": "string",
          "minLength": 1,
          "description": "The secret used to sign tokens for the client"
        },
        "logo_uri": {
          "type": "string",
          "format": "absolute-uri-or-empty",
          "description": "The URL of the client logo (recommended size: 150x150)"
        },
        "callbacks": {
          "type": "array",
          "items": { "type": "string", "format": "callback-url" },
          "uniqueItems": true,
          "description": "A set of URLs that are valid to call back from Auth0 when authenticating users"
        },
        "oidc_backchannel_logout": {
          "$ref": "patch_clients_by_id_body_oidc_backchannel_logout",
          "description": "Configuration for OIDC backchannel logout"
        },
        "allowed_origins": {
          "type": "array",
          "items": { "type": "string", "format": "url-with-placeholders" },
          "uniqueItems": true,
          "description": "A set of URLs that represents valid origins for CORS"
        },
        "web_origins": {
          "type": "array",
          "items": { "type": "string", "format": "url-with-placeholders" },
          "uniqueItems": true,
          "description": "A set of URLs that represents valid web origins for use with web message response mode"
        },
        "grant_types": {
          "type": "array",
          "items": { "type": "string", "minLength": 1 },
          "uniqueItems": true,
          "description": "A set of grant types that the client is authorized to use"
        },
        "client_aliases": {
          "type": "array",
          "items": { "type": "string", "minLength": 1 },
          "uniqueItems": true,
          "description": "List of audiences for SAML protocol"
        },
        "allowed_clients": {
          "type": "array",
          "items": { "type": "string", "minLength": 1 },
          "uniqueItems": true,
          "description": "Ids of clients that will be allowed to perform delegation requests. Clients that will be allowed to make delegation request. By default, all your clients will be allowed. This field allows you to specify specific clients"
        },
        "allowed_logout_urls": {
          "type": "array",
          "items": { "type": "string", "format": "url-with-placeholders" },
          "uniqueItems": true,
          "description": "URLs that are valid to redirect to after logout from Auth0."
        },
        "jwt_configuration": {
          "$ref": "patch_clients_by_id_body_jwt_configuration",
          "description": "An object that holds settings related to how JWTs are created"
        },
        "encryption_key": {
          "$ref": "patch_clients_by_id_body_encryption_key",
          "description": "The client's encryption key"
        },
        "sso": {
          "type": "boolean",
          "description": "<code>true</code> to use Auth0 instead of the IdP to do Single Sign On, <code>false</code> otherwise (default: <code>false</code>)"
        },
        "cross_origin_authentication": {
          "type": "boolean",
          "description": "<code>true</code> if this client can be used to make cross-origin authentication requests, <code>false</code> otherwise if cross origin is disabled"
        },
        "cross_origin_loc": {
          "type": "string",
          "format": "url-or-null",
          "description": "URL for the location in your site where the cross origin verification takes place for the cross-origin auth flow when performing Auth in your own domain instead of Auth0 hosted login page."
        },
        "sso_disabled": {
          "type": "boolean",
          "description": "<code>true</code> to disable Single Sign On, <code>false</code> otherwise (default: <code>false</code>)"
        },
        "custom_login_page_on": {
          "type": "boolean",
          "description": "<code>true</code> if the custom login page is to be used, <code>false</code> otherwise."
        },
        "token_endpoint_auth_method": {
          "type": "string",
          "enum": ["none", "client_secret_post", "client_secret_basic", null],
          "description": "Defines the requested authentication method for the token endpoint. Possible values are 'none' (public client without a client secret), 'client_secret_post' (client uses HTTP POST parameters) or 'client_secret_basic' (client uses HTTP Basic)"
        },
        "app_type": {
          "type": "string",
          "enum": [
            "native",
            "spa",
            "regular_web",
            "non_interactive",
            "rms",
            "box",
            "cloudbees",
            "concur",
            "dropbox",
            "mscrm",
            "echosign",
            "egnyte",
            "newrelic",
            "office365",
            "salesforce",
            "sentry",
            "sharepoint",
            "slack",
            "springcm",
            "zendesk",
            "zoom",
            "sso_integration"
          ],
          "description": "The type of application this client represents"
        },
        "is_first_party": {
          "type": "boolean",
          "description": "Whether this client a first party client or not",
          "defaultValue": true
        },
        "oidc_conformant": {
          "type": "boolean",
          "description": "Whether this client will conform to strict OIDC specifications",
          "defaultValue": false
        },
        "custom_login_page": {
          "type": "string",
          "description": "The content (HTML, CSS, JS) of the custom login page"
        },
        "custom_login_page_preview": { "type": "string" },
        "form_template": {
          "type": "string",
          "description": "Form template for WS-Federation protocol"
        },
        "addons": {
          "$ref": "patch_clients_by_id_body_addons",
          "description": "Addons enabled for this client and their associated configurations."
        },
        "client_metadata": {
          "$ref": "patch_clients_by_id_body_client_metadata",
          "description": "Metadata associated with the client, in the form of an object with string values (max 255 chars).  Maximum of 10 metadata properties allowed.  Field names (max 255 chars) are alphanumeric and may only include the following special characters:  :,-+=_*?\"/\\()<>@\t[Tab] [Space]"
        },
        "mobile": {
          "$ref": "patch_clients_by_id_body_mobile",
          "description": "Configuration related to native mobile apps"
        },
        "initiate_login_uri": {
          "type": "string",
          "format": "absolute-https-uri-or-empty",
          "description": "Initiate login uri, must be https"
        },
        "native_social_login": {
          "$ref": "patch_clients_by_id_body_native_social_login",
          "description": "Configure native social settings"
        },
        "refresh_token": {
          "$ref": "patch_clients_by_id_body_refresh_token",
          "description": "Refresh token configuration"
        },
        "organization_usage": {
          "type": "string",
          "enum": ["deny", "allow", "require"],
          "description": "Defines how to proceed during an authentication transaction with regards an organization. Can be `deny` (default), `allow` or `require`.",
          "defaultValue": "deny"
        },
        "organization_require_behavior": {
          "type": "string",
          "enum": ["no_prompt", "pre_login_prompt", "post_login_prompt"],
          "description": "Defines how to proceed during an authentication transaction when `client.organization_usage: 'require'`. Can be `no_prompt` (default) or `pre_login_prompt`.",
          "defaultValue": "no_prompt"
        }
      },
      "additionalProperties": false,
      "minProperties": 1
    },
    "patch_clients_by_id_body_oidc_backchannel_logout": {
      "type": "object",
      "description": "Configuration for OIDC backchannel logout",
      "properties": {
        "backchannel_logout_urls": {
          "type": "array",
          "items": { "type": "string", "format": "callback-url" },
          "uniqueItems": true,
          "description": "Comma-separated list of URLs that are valid to call back from Auth0 for OIDC backchannel logout. Currently only one URL is allowed."
        }
      },
      "additionalProperties": false
    },
    "patch_clients_by_id_body_jwt_configuration": {
      "type": "object",
      "description": "An object that holds settings related to how JWTs are created",
      "properties": {
        "lifetime_in_seconds": {
          "type": "integer",
          "minimum": 0,
          "exclusiveMinimum": true,
          "description": "The amount of time (in seconds) that the token will be valid after being issued"
        },
        "scopes": { "$ref": "patch_clients_by_id_body_scopes" },
        "alg": {
          "type": "string",
          "description": "The algorithm used to sign the JsonWebToken",
          "enum": ["HS256", "RS256"]
        }
      },
      "additionalProperties": false
    },
    "patch_clients_by_id_body_scopes": { "type": "object", "defaultValue": {} },
    "patch_clients_by_id_body_encryption_key": {
      "description": "The client's encryption key",
      "type": "object",
      "minProperties": 1,
      "properties": {
        "pub": {
          "type": "string",
          "minLength": 1,
          "description": "Encryption public key"
        },
        "cert": {
          "type": "string",
          "minLength": 1,
          "description": "Encryption certificate"
        },
        "subject": {
          "type": "string",
          "minLength": 1,
          "description": "Certificate subject"
        }
      },
      "additionalProperties": false
    },
    "patch_clients_by_id_body_addons": {
      "type": "object",
      "additionalProperties": false,
      "description": "Addons enabled for this client and their associated configurations.",
      "properties": {
        "aws": {
          "$ref": "patch_clients_by_id_body_aws",
          "description": "AWS addon configuration."
        },
        "azure_blob": {
          "$ref": "patch_clients_by_id_body_azure_blob",
          "description": "Azure Blob Storage addon configuration."
        },
        "azure_sb": {
          "$ref": "patch_clients_by_id_body_azure_sb",
          "description": "Azure Storage Bus addon configuration."
        },
        "rms": {
          "$ref": "patch_clients_by_id_body_rms",
          "description": "Active Directory Rights Management Service SSO configuration."
        },
        "mscrm": {
          "$ref": "patch_clients_by_id_body_mscrm",
          "description": "Microsoft Dynamics CRM SSO configuration."
        },
        "slack": {
          "$ref": "patch_clients_by_id_body_slack",
          "description": "Slack team or workspace name usually first segment in your Slack URL. e.g. `https://acme-org.slack.com` would be `acme-org`."
        },
        "sentry": {
          "$ref": "patch_clients_by_id_body_sentry",
          "description": "Sentry SSO configuration."
        },
        "box": {
          "$ref": "patch_clients_by_id_body_box",
          "description": "Box SSO indicator (no configuration settings needed for Box SSO)."
        },
        "cloudbees": {
          "$ref": "patch_clients_by_id_body_cloudbees",
          "description": "CloudBees SSO indicator (no configuration settings needed for CloudBees SSO)."
        },
        "concur": {
          "$ref": "patch_clients_by_id_body_concur",
          "description": "Concur SSO indicator (no configuration settings needed for Concur SSO)."
        },
        "dropbox": {
          "$ref": "patch_clients_by_id_body_dropbox",
          "description": "Dropbox SSO indicator (no configuration settings needed for Dropbox SSO)."
        },
        "echosign": {
          "$ref": "patch_clients_by_id_body_echosign",
          "description": "Adobe EchoSign SSO configuration."
        },
        "egnyte": {
          "$ref": "patch_clients_by_id_body_egnyte",
          "description": "Egnyte SSO configuration."
        },
        "firebase": {
          "$ref": "patch_clients_by_id_body_firebase",
          "description": "Google Firebase addon configuration."
        },
        "newrelic": {
          "$ref": "patch_clients_by_id_body_newrelic",
          "description": "New Relic SSO configuration."
        },
        "office365": {
          "$ref": "patch_clients_by_id_body_office365",
          "description": "Microsoft Office 365 SSO configuration."
        },
        "salesforce": {
          "$ref": "patch_clients_by_id_body_salesforce",
          "description": "Salesforce SSO configuration."
        },
        "salesforce_api": {
          "$ref": "patch_clients_by_id_body_salesforce_api",
          "description": "Salesforce API addon configuration."
        },
        "salesforce_sandbox_api": {
          "$ref": "patch_clients_by_id_body_salesforce_sandbox_api",
          "description": "Salesforce Sandbox addon configuration."
        },
        "samlp": {
          "$ref": "patch_clients_by_id_body_samlp",
          "description": "SAML2 addon indicator (no configuration settings needed for SAML2 addon)."
        },
        "layer": {
          "$ref": "patch_clients_by_id_body_layer",
          "description": "Layer addon configuration."
        },
        "sap_api": {
          "$ref": "patch_clients_by_id_body_sap_api",
          "description": "SAP API addon configuration."
        },
        "sharepoint": {
          "$ref": "patch_clients_by_id_body_sharepoint",
          "description": "SharePoint SSO configuration."
        },
        "springcm": {
          "$ref": "patch_clients_by_id_body_springcm",
          "description": "SpringCM SSO configuration."
        },
        "wams": {
          "$ref": "patch_clients_by_id_body_wams",
          "description": "Windows Azure Mobile Services addon configuration."
        },
        "wsfed": {
          "$ref": "patch_clients_by_id_body_wsfed",
          "description": "WS-Fed (WIF) addon indicator. Actual configuration is stored in `callback` and `client_aliases` properties on the client."
        },
        "zendesk": {
          "$ref": "patch_clients_by_id_body_zendesk",
          "description": "Zendesk SSO configuration."
        },
        "zoom": {
          "$ref": "patch_clients_by_id_body_zoom",
          "description": "Zoom SSO configuration."
        },
        "sso_integration": {
          "$ref": "patch_clients_by_id_body_sso_integration"
        }
      }
    },
    "patch_clients_by_id_body_aws": {
      "type": "object",
      "properties": {
        "principal": {
          "type": "string",
          "description": "AWS principal ARN, e.g. `arn:aws:iam::010616021751:saml-provider/idpname`"
        },
        "role": {
          "type": "string",
          "description": "AWS role ARN, e.g. `arn:aws:iam::010616021751:role/foo`"
        },
        "lifetime_in_seconds": {
          "type": "integer",
          "minimum": 900,
          "maximum": 43200,
          "description": "AWS token lifetime in seconds"
        }
      },
      "description": "AWS addon configuration.",
      "defaultValue": {}
    },
    "patch_clients_by_id_body_azure_blob": {
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string",
          "pattern": "^([a-z0-9]){3,24}$",
          "description": "Your Azure storage account name. Usually first segment in your Azure storage URL. e.g. `https://acme-org.blob.core.windows.net` would be the account name `acme-org`."
        },
        "storageAccessKey": {
          "type": "string",
          "pattern": "^([A-Za-z0-9+/]){86}==$",
          "description": "Access key associated with this storage account.",
          "secret": true
        },
        "containerName": {
          "type": "string",
          "pattern": "^([a-z0-9]){1}([a-z0-9-]){2,62}$",
          "description": "Container to request a token for. e.g. `my-container`."
        },
        "blobName": {
          "type": "string",
          "pattern": "^(.){1,1024}$",
          "description": "Entity to request a token for. e.g. `my-blob`. If blank the computed SAS will apply to the entire storage container."
        },
        "expiration": {
          "type": "integer",
          "minimum": 0,
          "exclusiveMinimum": true,
          "description": "Expiration in minutes for the generated token (default of 5 minutes)."
        },
        "signedIdentifier": {
          "type": "string",
          "description": "Shared access policy identifier defined in your storage account resource."
        },
        "blob_read": {
          "type": "boolean",
          "description": "Indicates if the issued token has permission to read the content, properties, metadata and block list. Use the blob as the source of a copy operation."
        },
        "blob_write": {
          "type": "boolean",
          "description": "Indicates if the issued token has permission to create or write content, properties, metadata, or block list. Snapshot or lease the blob. Resize the blob (page blob only). Use the blob as the destination of a copy operation within the same account."
        },
        "blob_delete": {
          "type": "boolean",
          "description": "Indicates if the issued token has permission to delete the blob."
        },
        "container_read": {
          "type": "boolean",
          "description": "Indicates if the issued token has permission to read the content, properties, metadata or block list of any blob in the container. Use any blob in the container as the source of a copy operation"
        },
        "container_write": {
          "type": "boolean",
          "description": "Indicates that for any blob in the container if the issued token has permission to create or write content, properties, metadata, or block list. Snapshot or lease the blob. Resize the blob (page blob only). Use the blob as the destination of a copy operation within the same account."
        },
        "container_delete": {
          "type": "boolean",
          "description": "Indicates if issued token has permission to delete any blob in the container."
        },
        "container_list": {
          "type": "boolean",
          "description": "Indicates if the issued token has permission to list blobs in the container."
        }
      },
      "description": "Azure Blob Storage addon configuration.",
      "defaultValue": {}
    },
    "patch_clients_by_id_body_azure_sb": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "description": "Your Azure Service Bus namespace. Usually the first segment of your Service Bus URL (e.g. `https://acme-org.servicebus.windows.net` would be `acme-org`)."
        },
        "sasKeyName": {
          "type": "string",
          "description": "Your shared access policy name defined in your Service Bus entity."
        },
        "sasKey": {
          "type": "string",
          "description": "Primary Key associated with your shared access policy.",
          "secret": true
        },
        "entityPath": {
          "type": "string",
          "description": "Entity you want to request a token for. e.g. `my-queue`.'"
        },
        "expiration": {
          "type": "integer",
          "description": "Optional expiration in minutes for the generated token. Defaults to 5 minutes."
        }
      },
      "description": "Azure Storage Bus addon configuration.",
      "defaultValue": {}
    },
    "patch_clients_by_id_body_rms": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "format": "url",
          "description": "URL of your Rights Management Server. It can be internal or external, but users will have to be able to reach it."
        }
      },
      "required": ["url"],
      "defaultValue": {},
      "description": "Active Directory Rights Management Service SSO configuration."
    },
    "patch_clients_by_id_body_mscrm": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "format": "url",
          "description": "Microsoft Dynamics CRM application URL."
        }
      },
      "required": ["url"],
      "defaultValue": {},
      "description": "Microsoft Dynamics CRM SSO configuration."
    },
    "patch_clients_by_id_body_slack": {
      "type": "object",
      "properties": {
        "team": { "type": "string", "description": "Slack team name." }
      },
      "required": ["team"],
      "defaultValue": {},
      "description": "Slack team or workspace name usually first segment in your Slack URL. e.g. `https://acme-org.slack.com` would be `acme-org`."
    },
    "patch_clients_by_id_body_sentry": {
      "type": "object",
      "properties": {
        "org_slug": {
          "type": "string",
          "description": "Generated slug for your Sentry organization. Found in your Sentry URL. e.g. `https://sentry.acme.com/acme-org/` would be `acme-org`."
        },
        "base_url": {
          "type": "string",
          "description": "URL prefix only if running Sentry Community Edition, otherwise leave should be blank."
        }
      },
      "defaultValue": {},
      "description": "Sentry SSO configuration."
    },
    "patch_clients_by_id_body_box": {
      "type": "object",
      "defaultValue": {},
      "description": "Box SSO indicator (no configuration settings needed for Box SSO)."
    },
    "patch_clients_by_id_body_cloudbees": {
      "type": "object",
      "defaultValue": {},
      "description": "CloudBees SSO indicator (no configuration settings needed for CloudBees SSO)."
    },
    "patch_clients_by_id_body_concur": {
      "type": "object",
      "defaultValue": {},
      "description": "Concur SSO indicator (no configuration settings needed for Concur SSO)."
    },
    "patch_clients_by_id_body_dropbox": {
      "type": "object",
      "defaultValue": {},
      "description": "Dropbox SSO indicator (no configuration settings needed for Dropbox SSO)."
    },
    "patch_clients_by_id_body_echosign": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "string",
          "description": "Your custom domain found in your EchoSign URL. e.g. `https://acme-org.echosign.com` would be `acme-org`."
        }
      },
      "defaultValue": {},
      "description": "Adobe EchoSign SSO configuration."
    },
    "patch_clients_by_id_body_egnyte": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "string",
          "description": "Your custom domain found in your Egnyte URL. e.g. `https://acme-org.egnyte.com` would be `acme-org`."
        }
      },
      "defaultValue": {},
      "description": "Egnyte SSO configuration."
    },
    "patch_clients_by_id_body_firebase": {
      "type": "object",
      "properties": {
        "secret": {
          "type": "string",
          "description": "Google Firebase Secret. (SDK 2 only)."
        },
        "private_key_id": {
          "type": "string",
          "description": "Optional ID of the private key to obtain kid header in the issued token (SDK v3+ tokens only).",
          "secret": true
        },
        "private_key": {
          "type": "string",
          "description": "Private Key for signing the token (SDK v3+ tokens only).",
          "secret": true
        },
        "client_email": {
          "type": "string",
          "description": "ID of the Service Account you have created (shown as `client_email` in the generated JSON file, SDK v3+ tokens only)."
        },
        "lifetime_in_seconds": {
          "type": "integer",
          "description": "Optional expiration in seconds for the generated token. Defaults to 3600 seconds (SDK v3+ tokens only)."
        }
      },
      "defaultValue": {},
      "description": "Google Firebase addon configuration."
    },
    "patch_clients_by_id_body_newrelic": {
      "type": "object",
      "properties": {
        "account": {
          "type": "string",
          "description": "Your New Relic Account ID found in your New Relic URL after the `/accounts/` path. e.g. `https://rpm.newrelic.com/accounts/123456/query` would be `123456`."
        }
      },
      "defaultValue": {},
      "description": "New Relic SSO configuration."
    },
    "patch_clients_by_id_body_office365": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "string",
          "description": "Your Office 365 domain name. e.g. `acme-org.com`."
        },
        "connection": {
          "type": "string",
          "description": "Optional Auth0 database connection for testing an already-configured Office 365 tenant."
        }
      },
      "defaultValue": {},
      "description": "Microsoft Office 365 SSO configuration."
    },
    "patch_clients_by_id_body_salesforce": {
      "type": "object",
      "properties": {
        "entity_id": {
          "type": "string",
          "format": "url",
          "description": "Arbitrary logical URL that identifies the Saleforce resource. e.g. `https://acme-org.com`."
        }
      },
      "defaultValue": {},
      "description": "Salesforce SSO configuration."
    },
    "patch_clients_by_id_body_salesforce_api": {
      "type": "object",
      "properties": {
        "clientid": {
          "type": "string",
          "description": "Consumer Key assigned by Salesforce to the Connected App.",
          "secret": true
        },
        "principal": {
          "type": "string",
          "description": "Name of the property in the user object that maps to a Salesforce username. e.g. `email`.",
          "secret": true
        },
        "communityName": { "type": "string", "description": "Community name." },
        "community_url_section": {
          "type": "string",
          "description": "Community url section."
        }
      },
      "defaultValue": {},
      "description": "Salesforce API addon configuration."
    },
    "patch_clients_by_id_body_salesforce_sandbox_api": {
      "type": "object",
      "properties": {
        "clientid": {
          "type": "string",
          "description": "Consumer Key assigned by Salesforce to the Connected App."
        },
        "principal": {
          "type": "string",
          "description": "Name of the property in the user object that maps to a Salesforce username. e.g. `email`."
        },
        "communityName": { "type": "string", "description": "Community name." },
        "community_url_section": {
          "type": "string",
          "description": "Community url section."
        }
      },
      "defaultValue": {},
      "description": "Salesforce Sandbox addon configuration."
    },
    "patch_clients_by_id_body_samlp": {
      "type": "object",
      "properties": {
        "mappings": { "$ref": "patch_clients_by_id_body_mappings" },
        "audience": { "type": "string" },
        "recipient": { "type": "string" },
        "createUpnClaim": { "type": "boolean" },
        "mapUnknownClaimsAsIs": { "type": "boolean" },
        "passthroughClaimsWithNoMapping": { "type": "boolean" },
        "mapIdentities": { "type": "boolean" },
        "signatureAlgorithm": { "type": "string" },
        "digestAlgorithm": { "type": "string" },
        "issuer": { "type": "string" },
        "destination": { "type": "string" },
        "lifetimeInSeconds": { "type": "integer" },
        "signResponse": { "type": "boolean" },
        "nameIdentifierFormat": { "type": "string" },
        "nameIdentifierProbes": {
          "type": "array",
          "items": { "type": "string", "minLength": 1 },
          "uniqueItems": true
        },
        "authnContextClassRef": { "type": "string" }
      },
      "defaultValue": {},
      "description": "SAML2 addon indicator (no configuration settings needed for SAML2 addon)."
    },
    "patch_clients_by_id_body_mappings": { "type": "object" },
    "patch_clients_by_id_body_layer": {
      "type": "object",
      "properties": {
        "providerId": {
          "type": "string",
          "description": "Provider ID of your Layer account"
        },
        "keyId": {
          "type": "string",
          "description": "Authentication Key identifier used to sign the Layer token.",
          "secret": true
        },
        "privateKey": {
          "type": "string",
          "description": "Private key for signing the Layer token.",
          "secret": true
        },
        "principal": {
          "type": "string",
          "description": "Name of the property used as the unique user id in Layer. If not specified `user_id` is used."
        },
        "expiration": {
          "type": "integer",
          "minimum": 0,
          "exclusiveMinimum": true,
          "description": "Optional expiration in minutes for the generated token. Defaults to 5 minutes."
        }
      },
      "required": ["providerId", "keyId", "privateKey"],
      "defaultValue": {},
      "description": "Layer addon configuration."
    },
    "patch_clients_by_id_body_sap_api": {
      "type": "object",
      "properties": {
        "clientid": {
          "type": "string",
          "description": "If activated in the OAuth 2.0 client configuration (transaction SOAUTH2) the SAML attribute client_id must be set and equal the client_id form parameter of the access token request."
        },
        "usernameAttribute": {
          "type": "string",
          "description": "Name of the property in the user object that maps to a SAP username. e.g. `email`."
        },
        "tokenEndpointUrl": {
          "type": "string",
          "format": "url",
          "description": "Your SAP OData server OAuth2 token endpoint URL."
        },
        "scope": {
          "type": "string",
          "description": "Requested scope for SAP APIs."
        },
        "servicePassword": {
          "type": "string",
          "description": "Service account password to use to authenticate API calls to the token endpoint.",
          "secret": true
        },
        "nameIdentifierFormat": {
          "type": "string",
          "description": "NameID element of the Subject which can be used to express the user's identity. Defaults to `urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified`."
        }
      },
      "defaultValue": {},
      "description": "SAP API addon configuration."
    },
    "patch_clients_by_id_body_sharepoint": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "Internal SharePoint application URL."
        },
        "external_url": {
          "type": "array",
          "items": { "type": "string" },
          "description": "External SharePoint application URLs if exposed to the Internet."
        }
      },
      "defaultValue": {},
      "description": "SharePoint SSO configuration."
    },
    "patch_clients_by_id_body_springcm": {
      "type": "object",
      "properties": {
        "acsurl": {
          "type": "string",
          "description": "SpringCM ACS URL, e.g. `https://na11.springcm.com/atlas/sso/SSOEndpoint.ashx`."
        }
      },
      "defaultValue": {},
      "description": "SpringCM SSO configuration."
    },
    "patch_clients_by_id_body_wams": {
      "type": "object",
      "properties": {
        "masterkey": {
          "type": "string",
          "description": "Your master key for Windows Azure Mobile Services.",
          "secret": true
        }
      },
      "defaultValue": {},
      "description": "Windows Azure Mobile Services addon configuration."
    },
    "patch_clients_by_id_body_wsfed": {
      "type": "object",
      "defaultValue": {},
      "description": "WS-Fed (WIF) addon indicator. Actual configuration is stored in `callback` and `client_aliases` properties on the client."
    },
    "patch_clients_by_id_body_zendesk": {
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string",
          "description": "Zendesk account name usually first segment in your Zendesk URL. e.g. `https://acme-org.zendesk.com` would be `acme-org`."
        }
      },
      "defaultValue": {},
      "description": "Zendesk SSO configuration."
    },
    "patch_clients_by_id_body_zoom": {
      "type": "object",
      "properties": {
        "account": {
          "type": "string",
          "description": "Zoom account name usually first segment of your Zoom URL, e.g. `https://acme-org.zoom.us` would be `acme-org`."
        }
      },
      "defaultValue": {},
      "description": "Zoom SSO configuration."
    },
    "patch_clients_by_id_body_sso_integration": {
      "type": "object",
      "properties": {
        "name": { "type": "string", "description": "SSO integration name" },
        "version": {
          "type": "string",
          "description": "SSO integration version installed"
        }
      }
    },
    "patch_clients_by_id_body_client_metadata": {
      "type": "object",
      "description": "Metadata associated with the client, in the form of an object with string values (max 255 chars).  Maximum of 10 metadata properties allowed.  Field names (max 255 chars) are alphanumeric and may only include the following special characters:  :,-+=_*?\"/\\()<>@\t[Tab] [Space]",
      "maxProperties": 10,
      "patternProperties": {
        "^[A-Za-z0-9:,\\-+=_*\\?\"/\\\\()<>@\t ]{1,255}$": {
          "anyOf": [{ "type": "string", "maxLength": 255 }, { "type": "null" }]
        }
      },
      "additionalProperties": false
    },
    "patch_clients_by_id_body_mobile": {
      "type": "object",
      "description": "Configuration related to native mobile apps",
      "properties": {
        "android": {
          "$ref": "patch_clients_by_id_body_android",
          "description": "Configuration related to Android native apps"
        },
        "ios": {
          "$ref": "patch_clients_by_id_body_ios",
          "description": "Configuration related to iOS native apps"
        }
      },
      "minProperties": 1,
      "additionalProperties": false
    },
    "patch_clients_by_id_body_android": {
      "description": "Configuration related to Android native apps",
      "type": "object",
      "defaultValue": {
        "app_package_name": "com.example",
        "sha256_cert_fingerprints": ["D8:A0:83:..."]
      },
      "properties": {
        "app_package_name": {
          "description": "Application package name found in <code>AndroidManifest.xml</code>",
          "type": "string",
          "minLength": 1,
          "defaultValue": ""
        },
        "sha256_cert_fingerprints": {
          "description": "The SHA256 fingerprints of your app's signing certificate. Multiple fingerprints can be used to support different versions of your app, such as debug and production builds",
          "type": "array",
          "items": { "type": "string", "minLength": 1 },
          "minItems": 1,
          "defaultValue": []
        }
      },
      "minProperties": 1,
      "additionalProperties": false
    },
    "patch_clients_by_id_body_ios": {
      "description": "Configuration related to iOS native apps",
      "type": "object",
      "defaultValue": {
        "team_id": "9JA89QQLNQ",
        "app_bundle_identifier": "com.my.bundle.id"
      },
      "properties": {
        "team_id": {
          "description": "Identifier assigned to the account that signs and upload the app to the store",
          "type": "string",
          "minLength": 1,
          "defaultValue": ""
        },
        "app_bundle_identifier": {
          "description": "Assigned by the developer to the app as its unique identifier inside the store, usually is a reverse domain plus the app name: <code>com.you.MyApp</code>",
          "type": "string",
          "minLength": 1,
          "defaultValue": ""
        }
      },
      "minProperties": 1,
      "additionalProperties": false
    },
    "patch_clients_by_id_body_native_social_login": {
      "description": "Configure native social settings",
      "type": "object",
      "properties": {
        "apple": {
          "$ref": "patch_clients_by_id_body_apple",
          "description": "Native Social Login support for the Apple connection"
        },
        "facebook": {
          "$ref": "patch_clients_by_id_body_facebook",
          "description": "Native Social Login support for the Facebook connection"
        }
      },
      "minProperties": 1,
      "additionalProperties": false
    },
    "patch_clients_by_id_body_apple": {
      "description": "Native Social Login support for the Apple connection",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Determine whether or not to allow signing in natively using an Apple authorization code",
          "type": "boolean",
          "defaultValue": false
        }
      },
      "minProperties": 1,
      "additionalProperties": false
    },
    "patch_clients_by_id_body_facebook": {
      "swagger": false,
      "description": "Native Social Login support for the Facebook connection",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Determine whether or not to allow signing in natively using Facebook",
          "type": "boolean",
          "defaultValue": false
        }
      },
      "minProperties": 1,
      "additionalProperties": false
    },
    "patch_clients_by_id_body_refresh_token": {
      "type": "object",
      "description": "Refresh token configuration",
      "properties": {
        "rotation_type": {
          "type": "string",
          "description": "Refresh token rotation types, one of: rotating, non-rotating",
          "enum": ["rotating", "non-rotating"],
          "defaultValue": "non-rotating"
        },
        "expiration_type": {
          "type": "string",
          "description": "Refresh token expiration types, one of: expiring, non-expiring",
          "enum": ["expiring", "non-expiring"],
          "defaultValue": "non-expiring"
        },
        "leeway": {
          "type": "integer",
          "description": "Period in seconds where the previous refresh token can be exchanged without triggering breach detection",
          "defaultValue": 0,
          "minimum": 0
        },
        "token_lifetime": {
          "type": "integer",
          "description": "Period (in seconds) for which refresh tokens will remain valid",
          "minimum": 1,
          "maximum": 157788000
        },
        "infinite_token_lifetime": {
          "type": "boolean",
          "description": "Prevents tokens from having a set lifetime when `true` (takes precedence over `token_lifetime` values)"
        },
        "idle_token_lifetime": {
          "type": "integer",
          "description": "Period (in seconds) for which refresh tokens will remain valid without use",
          "minimum": 1
        },
        "infinite_idle_token_lifetime": {
          "type": "boolean",
          "description": "Prevents tokens from expiring without use when `true` (takes precedence over `idle_token_lifetime` values)",
          "defaultValue": false
        }
      },
      "required": ["rotation_type", "expiration_type"],
      "additionalProperties": false
    },
    "patch_clients_by_id_body_private_key_jwt": {
      "description": "Defines `private_key_jwt` client authentication method .",
      "type": "object",
      "properties": {
        "credentials": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": { "type": "string", "description": "Credential ID" }
            },
            "required": ["id"],
            "additionalProperties": false
          },
          "uniqueItems": true,
          "minItems": 0,
          "maxItems": 2
        }
      },
      "required": ["credentials"],
      "additionalProperties": false
    },
    "patch_clients_by_id_body_claims_mapping": {
      "type": "object",
      "description": "Custom configuration for claims in ID tokens",
      "properties": { "sub": { "$ref": "patch_clients_by_id_body_sub" } },
      "additionalProperties": false
    },
    "patch_clients_by_id_body_sub": {
      "properties": { "source": { "enum": ["default"] } },
      "required": ["source"]
    },
    "post_rotate-secret_response": {
      "type": "object",
      "properties": {
        "client_id": {
          "type": "string",
          "description": "ID of this client.",
          "defaultValue": "AaiyAPdpYdesoKnqjj8HJqRn4T5titww"
        },
        "tenant": {
          "type": "string",
          "description": "Name of the tenant this client belongs to.",
          "defaultValue": ""
        },
        "name": {
          "type": "string",
          "description": "Name of this client (min length: 1 character, does not allow `<` or `>`).",
          "defaultValue": "My application"
        },
        "description": {
          "type": "string",
          "description": "Free text description of this client (max length: 140 characters).",
          "defaultValue": ""
        },
        "global": {
          "type": "boolean",
          "description": "Whether this is your global 'All Applications' client representing legacy tenant settings (true) or a regular client (false).",
          "defaultValue": false
        },
        "client_secret": {
          "type": "string",
          "description": "Client secret (which you must not make public).",
          "defaultValue": "MG_TNT2ver-SylNat-_VeMmd-4m0Waba0jr1troztBniSChEw0glxEmgEi2Kw40H",
          "secret": true
        },
        "app_type": {
          "type": "string",
          "description": "Type of client used to determine which settings are applicable. Can be `spa`, `native`, `non_interactive`, or `regular_web`.",
          "defaultValue": ""
        },
        "logo_uri": {
          "type": "string",
          "description": "URL of the logo to display for this client. Recommended size is 150x150 pixels."
        },
        "is_first_party": {
          "type": "boolean",
          "description": "Whether this client a first party client (true) or not (false).",
          "defaultValue": false
        },
        "oidc_conformant": {
          "type": "boolean",
          "description": "Whether this client conforms to <a href='https://auth0.com/docs/api-auth/tutorials/adoption'>strict OIDC specifications</a> (true) or uses legacy features (false).",
          "defaultValue": false
        },
        "callbacks": {
          "type": "array",
          "items": { "type": "string" },
          "description": "Comma-separated list of URLs whitelisted for Auth0 to use as a callback to the client after authentication.",
          "defaultValue": "http://localhost/callback"
        },
        "allowed_origins": {
          "type": "array",
          "items": { "type": "string" },
          "description": "Comma-separated list of URLs allowed to make requests from JavaScript to Auth0 API (typically used with CORS). By default, all your callback URLs will be allowed. This field allows you to enter other origins if necessary. You can also use wildcards at the subdomain level (e.g., https://*.contoso.com). Query strings and hash information are not taken into account when validating these URLs."
        },
        "web_origins": {
          "type": "array",
          "items": { "type": "string" },
          "description": "Comma-separated list of allowed origins for use with <a href='https://auth0.com/docs/cross-origin-authentication'>Cross-Origin Authentication</a>, <a href='https://auth0.com/docs/flows/concepts/device-auth'>Device Flow</a>, and <a href='https://auth0.com/docs/protocols/oauth2#how-response-mode-works'>web message response mode</a>."
        },
        "client_aliases": {
          "type": "array",
          "items": { "type": "string" },
          "description": "List of audiences/realms for SAML protocol. Used by the wsfed addon."
        },
        "allowed_clients": {
          "type": "array",
          "items": { "type": "string" },
          "description": "List of allow clients and API ids that are allowed to make delegation requests. Empty means all all your clients are allowed."
        },
        "allowed_logout_urls": {
          "type": "array",
          "description": "Comma-separated list of URLs that are valid to redirect to after logout from Auth0. Wildcards are allowed for subdomains.",
          "items": { "type": "string" },
          "defaultValue": "http://localhost/logoutCallback"
        },
        "oidc_backchannel_logout": {
          "$ref": "post_rotate-secret_response_oidc_backchannel_logout",
          "description": "Configuration for OIDC backchannel logout"
        },
        "grant_types": {
          "type": "array",
          "items": { "type": "string" },
          "description": "List of grant types supported for this application. Can include `authorization_code`, `implicit`, `refresh_token`, `client_credentials`, `password`, `http://auth0.com/oauth/grant-type/password-realm`, `http://auth0.com/oauth/grant-type/mfa-oob`, `http://auth0.com/oauth/grant-type/mfa-otp`, `http://auth0.com/oauth/grant-type/mfa-recovery-code`, and `urn:ietf:params:oauth:grant-type:device_code`."
        },
        "jwt_configuration": {
          "$ref": "post_rotate-secret_response_jwt_configuration",
          "description": "Configuration related to JWTs for the client."
        },
        "signing_keys": {
          "type": "array",
          "description": "Signing certificates associated with this client.",
          "items": {
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "pkcs7": {
                "type": "string",
                "description": "Signing certificate public key and chain in PKCS#7 (.P7B) format.",
                "defaultValue": ""
              },
              "cert": {
                "type": "string",
                "description": "Signing certificate public key in X.590 (.CER) format.",
                "defaultValue": ""
              },
              "subject": {
                "type": "string",
                "description": "Subject name for this certificate in the format `/CN={domain}`.",
                "defaultValue": ""
              }
            }
          }
        },
        "encryption_key": {
          "$ref": "post_rotate-secret_response_encryption_key",
          "description": "Encryption used for WsFed responses with this client."
        },
        "sso": {
          "type": "boolean",
          "description": "Applies only to SSO clients and determines whether Auth0 will handle Single Sign On (true) or whether the Identity Provider will (false).",
          "defaultValue": false
        },
        "sso_disabled": {
          "type": "boolean",
          "description": "Whether Single Sign On is disabled (true) or enabled (true). Defaults to true.",
          "defaultValue": false
        },
        "cross_origin_authentication": {
          "type": "boolean",
          "description": "Whether this client can be used to make cross-origin authentication requests (true) or it is not allowed to make such requests (false)."
        },
        "cross_origin_loc": {
          "type": "string",
          "format": "url",
          "description": "URL of the location in your site where the cross origin verification takes place for the cross-origin auth flow when performing Auth in your own domain instead of Auth0 hosted login page."
        },
        "custom_login_page_on": {
          "type": "boolean",
          "description": "Whether a custom login page is to be used (true) or the default provided login page (false).",
          "defaultValue": true
        },
        "custom_login_page": {
          "type": "string",
          "description": "The content (HTML, CSS, JS) of the custom login page.",
          "defaultValue": ""
        },
        "custom_login_page_preview": {
          "type": "string",
          "description": "The content (HTML, CSS, JS) of the custom login page. (Used on Previews)",
          "defaultValue": ""
        },
        "form_template": {
          "type": "string",
          "description": "HTML form template to be used for WS-Federation.",
          "defaultValue": ""
        },
        "addons": {
          "$ref": "post_rotate-secret_response_addons",
          "description": "Addons enabled for this client and their associated configurations."
        },
        "token_endpoint_auth_method": {
          "type": "string",
          "defaultValue": "none",
          "enum": ["none", "client_secret_post", "client_secret_basic"],
          "description": "Defines the requested authentication method for the token endpoint. Can be `none` (public client without a client secret), `client_secret_post` (client uses HTTP POST parameters), or `client_secret_basic` (client uses HTTP Basic)."
        },
        "client_metadata": {
          "$ref": "post_rotate-secret_response_client_metadata",
          "description": "Metadata associated with the client, in the form of an object with string values (max 255 chars).  Maximum of 10 metadata properties allowed.  Field names (max 255 chars) are alphanumeric and may only include the following special characters:  :,-+=_*?\"/\\()<>@\t[Tab] [Space]"
        },
        "mobile": {
          "$ref": "post_rotate-secret_response_mobile",
          "description": "Additional configuration for native mobile apps."
        },
        "initiate_login_uri": {
          "type": "string",
          "format": "absolute-https-uri-or-empty",
          "description": "Initiate login uri, must be https"
        },
        "native_social_login": {
          "$ref": "post_rotate-secret_response_native_social_login",
          "description": "Configure native social settings"
        },
        "refresh_token": {
          "$ref": "post_rotate-secret_response_refresh_token",
          "description": "Refresh token configuration"
        },
        "organization_usage": {
          "type": "string",
          "enum": ["deny", "allow", "require"],
          "description": "Defines how to proceed during an authentication transaction with regards an organization. Can be `deny` (default), `allow` or `require`.",
          "defaultValue": "deny"
        },
        "organization_require_behavior": {
          "type": "string",
          "enum": ["no_prompt", "pre_login_prompt", "post_login_prompt"],
          "description": "Defines how to proceed during an authentication transaction when `client.organization_usage: 'require'`. Can be `no_prompt` (default) or `pre_login_prompt`.",
          "defaultValue": "no_prompt"
        }
      }
    },
    "post_rotate-secret_response_oidc_backchannel_logout": {
      "type": "object",
      "description": "Configuration for OIDC backchannel logout",
      "properties": {
        "backchannel_logout_urls": {
          "type": "array",
          "description": "Comma-separated list of URLs that are valid to call back from Auth0 for OIDC backchannel logout. Currently only one URL is allowed.",
          "items": { "type": "string", "format": "callback-url" }
        }
      }
    },
    "post_rotate-secret_response_jwt_configuration": {
      "description": "Configuration related to JWTs for the client.",
      "type": "object",
      "properties": {
        "lifetime_in_seconds": {
          "description": "Number of seconds the JWT will be valid for (affects `exp` claim).",
          "type": "integer",
          "defaultValue": 36000
        },
        "secret_encoded": {
          "description": "Whether the client secret is base64 encoded (true) or unencoded (false).",
          "type": "boolean",
          "defaultValue": true
        },
        "scopes": {
          "$ref": "post_rotate-secret_response_scopes",
          "description": "Configuration related to id token claims for the client."
        },
        "alg": {
          "type": "string",
          "defaultValue": "HS256",
          "enum": ["HS256", "RS256"],
          "description": "Algorithm used to sign JWTs. Can be `HS256` or `RS256`."
        }
      }
    },
    "post_rotate-secret_response_scopes": {
      "type": "object",
      "defaultValue": {},
      "description": "Configuration related to id token claims for the client."
    },
    "post_rotate-secret_response_encryption_key": {
      "type": "object",
      "description": "Encryption used for WsFed responses with this client.",
      "properties": {
        "pub": {
          "type": "string",
          "description": "Encryption Public RSA Key."
        },
        "cert": {
          "type": "string",
          "description": "Encryption certificate for public key in X.590 (.CER) format."
        },
        "subject": {
          "type": "string",
          "description": "Encryption certificate name for this certificate in the format `/CN={domain}`."
        }
      },
      "secret": true
    },
    "post_rotate-secret_response_addons": {
      "type": "object",
      "additionalProperties": false,
      "description": "Addons enabled for this client and their associated configurations.",
      "properties": {
        "aws": {
          "$ref": "post_rotate-secret_response_aws",
          "description": "AWS addon configuration."
        },
        "azure_blob": {
          "$ref": "post_rotate-secret_response_azure_blob",
          "description": "Azure Blob Storage addon configuration."
        },
        "azure_sb": {
          "$ref": "post_rotate-secret_response_azure_sb",
          "description": "Azure Storage Bus addon configuration."
        },
        "rms": {
          "$ref": "post_rotate-secret_response_rms",
          "description": "Active Directory Rights Management Service SSO configuration."
        },
        "mscrm": {
          "$ref": "post_rotate-secret_response_mscrm",
          "description": "Microsoft Dynamics CRM SSO configuration."
        },
        "slack": {
          "$ref": "post_rotate-secret_response_slack",
          "description": "Slack team or workspace name usually first segment in your Slack URL. e.g. `https://acme-org.slack.com` would be `acme-org`."
        },
        "sentry": {
          "$ref": "post_rotate-secret_response_sentry",
          "description": "Sentry SSO configuration."
        },
        "box": {
          "$ref": "post_rotate-secret_response_box",
          "description": "Box SSO indicator (no configuration settings needed for Box SSO)."
        },
        "cloudbees": {
          "$ref": "post_rotate-secret_response_cloudbees",
          "description": "CloudBees SSO indicator (no configuration settings needed for CloudBees SSO)."
        },
        "concur": {
          "$ref": "post_rotate-secret_response_concur",
          "description": "Concur SSO indicator (no configuration settings needed for Concur SSO)."
        },
        "dropbox": {
          "$ref": "post_rotate-secret_response_dropbox",
          "description": "Dropbox SSO indicator (no configuration settings needed for Dropbox SSO)."
        },
        "echosign": {
          "$ref": "post_rotate-secret_response_echosign",
          "description": "Adobe EchoSign SSO configuration."
        },
        "egnyte": {
          "$ref": "post_rotate-secret_response_egnyte",
          "description": "Egnyte SSO configuration."
        },
        "firebase": {
          "$ref": "post_rotate-secret_response_firebase",
          "description": "Google Firebase addon configuration."
        },
        "newrelic": {
          "$ref": "post_rotate-secret_response_newrelic",
          "description": "New Relic SSO configuration."
        },
        "office365": {
          "$ref": "post_rotate-secret_response_office365",
          "description": "Microsoft Office 365 SSO configuration."
        },
        "salesforce": {
          "$ref": "post_rotate-secret_response_salesforce",
          "description": "Salesforce SSO configuration."
        },
        "salesforce_api": {
          "$ref": "post_rotate-secret_response_salesforce_api",
          "description": "Salesforce API addon configuration."
        },
        "salesforce_sandbox_api": {
          "$ref": "post_rotate-secret_response_salesforce_sandbox_api",
          "description": "Salesforce Sandbox addon configuration."
        },
        "samlp": {
          "$ref": "post_rotate-secret_response_samlp",
          "description": "SAML2 addon indicator (no configuration settings needed for SAML2 addon)."
        },
        "layer": {
          "$ref": "post_rotate-secret_response_layer",
          "description": "Layer addon configuration."
        },
        "sap_api": {
          "$ref": "post_rotate-secret_response_sap_api",
          "description": "SAP API addon configuration."
        },
        "sharepoint": {
          "$ref": "post_rotate-secret_response_sharepoint",
          "description": "SharePoint SSO configuration."
        },
        "springcm": {
          "$ref": "post_rotate-secret_response_springcm",
          "description": "SpringCM SSO configuration."
        },
        "wams": {
          "$ref": "post_rotate-secret_response_wams",
          "description": "Windows Azure Mobile Services addon configuration."
        },
        "wsfed": {
          "$ref": "post_rotate-secret_response_wsfed",
          "description": "WS-Fed (WIF) addon indicator. Actual configuration is stored in `callback` and `client_aliases` properties on the client."
        },
        "zendesk": {
          "$ref": "post_rotate-secret_response_zendesk",
          "description": "Zendesk SSO configuration."
        },
        "zoom": {
          "$ref": "post_rotate-secret_response_zoom",
          "description": "Zoom SSO configuration."
        },
        "sso_integration": {
          "$ref": "post_rotate-secret_response_sso_integration"
        }
      }
    },
    "post_rotate-secret_response_aws": {
      "type": "object",
      "properties": {
        "principal": {
          "type": "string",
          "description": "AWS principal ARN, e.g. `arn:aws:iam::010616021751:saml-provider/idpname`"
        },
        "role": {
          "type": "string",
          "description": "AWS role ARN, e.g. `arn:aws:iam::010616021751:role/foo`"
        },
        "lifetime_in_seconds": {
          "type": "integer",
          "minimum": 900,
          "maximum": 43200,
          "description": "AWS token lifetime in seconds"
        }
      },
      "description": "AWS addon configuration.",
      "defaultValue": {}
    },
    "post_rotate-secret_response_azure_blob": {
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string",
          "pattern": "^([a-z0-9]){3,24}$",
          "description": "Your Azure storage account name. Usually first segment in your Azure storage URL. e.g. `https://acme-org.blob.core.windows.net` would be the account name `acme-org`."
        },
        "storageAccessKey": {
          "type": "string",
          "pattern": "^([A-Za-z0-9+/]){86}==$",
          "description": "Access key associated with this storage account.",
          "secret": true
        },
        "containerName": {
          "type": "string",
          "pattern": "^([a-z0-9]){1}([a-z0-9-]){2,62}$",
          "description": "Container to request a token for. e.g. `my-container`."
        },
        "blobName": {
          "type": "string",
          "pattern": "^(.){1,1024}$",
          "description": "Entity to request a token for. e.g. `my-blob`. If blank the computed SAS will apply to the entire storage container."
        },
        "expiration": {
          "type": "integer",
          "minimum": 0,
          "exclusiveMinimum": true,
          "description": "Expiration in minutes for the generated token (default of 5 minutes)."
        },
        "signedIdentifier": {
          "type": "string",
          "description": "Shared access policy identifier defined in your storage account resource."
        },
        "blob_read": {
          "type": "boolean",
          "description": "Indicates if the issued token has permission to read the content, properties, metadata and block list. Use the blob as the source of a copy operation."
        },
        "blob_write": {
          "type": "boolean",
          "description": "Indicates if the issued token has permission to create or write content, properties, metadata, or block list. Snapshot or lease the blob. Resize the blob (page blob only). Use the blob as the destination of a copy operation within the same account."
        },
        "blob_delete": {
          "type": "boolean",
          "description": "Indicates if the issued token has permission to delete the blob."
        },
        "container_read": {
          "type": "boolean",
          "description": "Indicates if the issued token has permission to read the content, properties, metadata or block list of any blob in the container. Use any blob in the container as the source of a copy operation"
        },
        "container_write": {
          "type": "boolean",
          "description": "Indicates that for any blob in the container if the issued token has permission to create or write content, properties, metadata, or block list. Snapshot or lease the blob. Resize the blob (page blob only). Use the blob as the destination of a copy operation within the same account."
        },
        "container_delete": {
          "type": "boolean",
          "description": "Indicates if issued token has permission to delete any blob in the container."
        },
        "container_list": {
          "type": "boolean",
          "description": "Indicates if the issued token has permission to list blobs in the container."
        }
      },
      "description": "Azure Blob Storage addon configuration.",
      "defaultValue": {}
    },
    "post_rotate-secret_response_azure_sb": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "description": "Your Azure Service Bus namespace. Usually the first segment of your Service Bus URL (e.g. `https://acme-org.servicebus.windows.net` would be `acme-org`)."
        },
        "sasKeyName": {
          "type": "string",
          "description": "Your shared access policy name defined in your Service Bus entity."
        },
        "sasKey": {
          "type": "string",
          "description": "Primary Key associated with your shared access policy.",
          "secret": true
        },
        "entityPath": {
          "type": "string",
          "description": "Entity you want to request a token for. e.g. `my-queue`.'"
        },
        "expiration": {
          "type": "integer",
          "description": "Optional expiration in minutes for the generated token. Defaults to 5 minutes."
        }
      },
      "description": "Azure Storage Bus addon configuration.",
      "defaultValue": {}
    },
    "post_rotate-secret_response_rms": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "format": "url",
          "description": "URL of your Rights Management Server. It can be internal or external, but users will have to be able to reach it."
        }
      },
      "required": ["url"],
      "defaultValue": {},
      "description": "Active Directory Rights Management Service SSO configuration."
    },
    "post_rotate-secret_response_mscrm": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "format": "url",
          "description": "Microsoft Dynamics CRM application URL."
        }
      },
      "required": ["url"],
      "defaultValue": {},
      "description": "Microsoft Dynamics CRM SSO configuration."
    },
    "post_rotate-secret_response_slack": {
      "type": "object",
      "properties": {
        "team": { "type": "string", "description": "Slack team name." }
      },
      "required": ["team"],
      "defaultValue": {},
      "description": "Slack team or workspace name usually first segment in your Slack URL. e.g. `https://acme-org.slack.com` would be `acme-org`."
    },
    "post_rotate-secret_response_sentry": {
      "type": "object",
      "properties": {
        "org_slug": {
          "type": "string",
          "description": "Generated slug for your Sentry organization. Found in your Sentry URL. e.g. `https://sentry.acme.com/acme-org/` would be `acme-org`."
        },
        "base_url": {
          "type": "string",
          "description": "URL prefix only if running Sentry Community Edition, otherwise leave should be blank."
        }
      },
      "defaultValue": {},
      "description": "Sentry SSO configuration."
    },
    "post_rotate-secret_response_box": {
      "type": "object",
      "defaultValue": {},
      "description": "Box SSO indicator (no configuration settings needed for Box SSO)."
    },
    "post_rotate-secret_response_cloudbees": {
      "type": "object",
      "defaultValue": {},
      "description": "CloudBees SSO indicator (no configuration settings needed for CloudBees SSO)."
    },
    "post_rotate-secret_response_concur": {
      "type": "object",
      "defaultValue": {},
      "description": "Concur SSO indicator (no configuration settings needed for Concur SSO)."
    },
    "post_rotate-secret_response_dropbox": {
      "type": "object",
      "defaultValue": {},
      "description": "Dropbox SSO indicator (no configuration settings needed for Dropbox SSO)."
    },
    "post_rotate-secret_response_echosign": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "string",
          "description": "Your custom domain found in your EchoSign URL. e.g. `https://acme-org.echosign.com` would be `acme-org`."
        }
      },
      "defaultValue": {},
      "description": "Adobe EchoSign SSO configuration."
    },
    "post_rotate-secret_response_egnyte": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "string",
          "description": "Your custom domain found in your Egnyte URL. e.g. `https://acme-org.egnyte.com` would be `acme-org`."
        }
      },
      "defaultValue": {},
      "description": "Egnyte SSO configuration."
    },
    "post_rotate-secret_response_firebase": {
      "type": "object",
      "properties": {
        "secret": {
          "type": "string",
          "description": "Google Firebase Secret. (SDK 2 only)."
        },
        "private_key_id": {
          "type": "string",
          "description": "Optional ID of the private key to obtain kid header in the issued token (SDK v3+ tokens only).",
          "secret": true
        },
        "private_key": {
          "type": "string",
          "description": "Private Key for signing the token (SDK v3+ tokens only).",
          "secret": true
        },
        "client_email": {
          "type": "string",
          "description": "ID of the Service Account you have created (shown as `client_email` in the generated JSON file, SDK v3+ tokens only)."
        },
        "lifetime_in_seconds": {
          "type": "integer",
          "description": "Optional expiration in seconds for the generated token. Defaults to 3600 seconds (SDK v3+ tokens only)."
        }
      },
      "defaultValue": {},
      "description": "Google Firebase addon configuration."
    },
    "post_rotate-secret_response_newrelic": {
      "type": "object",
      "properties": {
        "account": {
          "type": "string",
          "description": "Your New Relic Account ID found in your New Relic URL after the `/accounts/` path. e.g. `https://rpm.newrelic.com/accounts/123456/query` would be `123456`."
        }
      },
      "defaultValue": {},
      "description": "New Relic SSO configuration."
    },
    "post_rotate-secret_response_office365": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "string",
          "description": "Your Office 365 domain name. e.g. `acme-org.com`."
        },
        "connection": {
          "type": "string",
          "description": "Optional Auth0 database connection for testing an already-configured Office 365 tenant."
        }
      },
      "defaultValue": {},
      "description": "Microsoft Office 365 SSO configuration."
    },
    "post_rotate-secret_response_salesforce": {
      "type": "object",
      "properties": {
        "entity_id": {
          "type": "string",
          "format": "url",
          "description": "Arbitrary logical URL that identifies the Saleforce resource. e.g. `https://acme-org.com`."
        }
      },
      "defaultValue": {},
      "description": "Salesforce SSO configuration."
    },
    "post_rotate-secret_response_salesforce_api": {
      "type": "object",
      "properties": {
        "clientid": {
          "type": "string",
          "description": "Consumer Key assigned by Salesforce to the Connected App.",
          "secret": true
        },
        "principal": {
          "type": "string",
          "description": "Name of the property in the user object that maps to a Salesforce username. e.g. `email`.",
          "secret": true
        },
        "communityName": { "type": "string", "description": "Community name." },
        "community_url_section": {
          "type": "string",
          "description": "Community url section."
        }
      },
      "defaultValue": {},
      "description": "Salesforce API addon configuration."
    },
    "post_rotate-secret_response_salesforce_sandbox_api": {
      "type": "object",
      "properties": {
        "clientid": {
          "type": "string",
          "description": "Consumer Key assigned by Salesforce to the Connected App."
        },
        "principal": {
          "type": "string",
          "description": "Name of the property in the user object that maps to a Salesforce username. e.g. `email`."
        },
        "communityName": { "type": "string", "description": "Community name." },
        "community_url_section": {
          "type": "string",
          "description": "Community url section."
        }
      },
      "defaultValue": {},
      "description": "Salesforce Sandbox addon configuration."
    },
    "post_rotate-secret_response_samlp": {
      "type": "object",
      "properties": {
        "mappings": { "$ref": "post_rotate-secret_response_mappings" },
        "audience": { "type": "string" },
        "recipient": { "type": "string" },
        "createUpnClaim": { "type": "boolean" },
        "mapUnknownClaimsAsIs": { "type": "boolean" },
        "passthroughClaimsWithNoMapping": { "type": "boolean" },
        "mapIdentities": { "type": "boolean" },
        "signatureAlgorithm": { "type": "string" },
        "digestAlgorithm": { "type": "string" },
        "issuer": { "type": "string" },
        "destination": { "type": "string" },
        "lifetimeInSeconds": { "type": "integer" },
        "signResponse": { "type": "boolean" },
        "nameIdentifierFormat": { "type": "string" },
        "nameIdentifierProbes": {
          "type": "array",
          "items": { "type": "string", "minLength": 1 },
          "uniqueItems": true
        },
        "authnContextClassRef": { "type": "string" }
      },
      "defaultValue": {},
      "description": "SAML2 addon indicator (no configuration settings needed for SAML2 addon)."
    },
    "post_rotate-secret_response_mappings": { "type": "object" },
    "post_rotate-secret_response_layer": {
      "type": "object",
      "properties": {
        "providerId": {
          "type": "string",
          "description": "Provider ID of your Layer account"
        },
        "keyId": {
          "type": "string",
          "description": "Authentication Key identifier used to sign the Layer token.",
          "secret": true
        },
        "privateKey": {
          "type": "string",
          "description": "Private key for signing the Layer token.",
          "secret": true
        },
        "principal": {
          "type": "string",
          "description": "Name of the property used as the unique user id in Layer. If not specified `user_id` is used."
        },
        "expiration": {
          "type": "integer",
          "minimum": 0,
          "exclusiveMinimum": true,
          "description": "Optional expiration in minutes for the generated token. Defaults to 5 minutes."
        }
      },
      "required": ["providerId", "keyId", "privateKey"],
      "defaultValue": {},
      "description": "Layer addon configuration."
    },
    "post_rotate-secret_response_sap_api": {
      "type": "object",
      "properties": {
        "clientid": {
          "type": "string",
          "description": "If activated in the OAuth 2.0 client configuration (transaction SOAUTH2) the SAML attribute client_id must be set and equal the client_id form parameter of the access token request."
        },
        "usernameAttribute": {
          "type": "string",
          "description": "Name of the property in the user object that maps to a SAP username. e.g. `email`."
        },
        "tokenEndpointUrl": {
          "type": "string",
          "format": "url",
          "description": "Your SAP OData server OAuth2 token endpoint URL."
        },
        "scope": {
          "type": "string",
          "description": "Requested scope for SAP APIs."
        },
        "servicePassword": {
          "type": "string",
          "description": "Service account password to use to authenticate API calls to the token endpoint.",
          "secret": true
        },
        "nameIdentifierFormat": {
          "type": "string",
          "description": "NameID element of the Subject which can be used to express the user's identity. Defaults to `urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified`."
        }
      },
      "defaultValue": {},
      "description": "SAP API addon configuration."
    },
    "post_rotate-secret_response_sharepoint": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "Internal SharePoint application URL."
        },
        "external_url": {
          "type": "array",
          "items": { "type": "string" },
          "description": "External SharePoint application URLs if exposed to the Internet."
        }
      },
      "defaultValue": {},
      "description": "SharePoint SSO configuration."
    },
    "post_rotate-secret_response_springcm": {
      "type": "object",
      "properties": {
        "acsurl": {
          "type": "string",
          "description": "SpringCM ACS URL, e.g. `https://na11.springcm.com/atlas/sso/SSOEndpoint.ashx`."
        }
      },
      "defaultValue": {},
      "description": "SpringCM SSO configuration."
    },
    "post_rotate-secret_response_wams": {
      "type": "object",
      "properties": {
        "masterkey": {
          "type": "string",
          "description": "Your master key for Windows Azure Mobile Services.",
          "secret": true
        }
      },
      "defaultValue": {},
      "description": "Windows Azure Mobile Services addon configuration."
    },
    "post_rotate-secret_response_wsfed": {
      "type": "object",
      "defaultValue": {},
      "description": "WS-Fed (WIF) addon indicator. Actual configuration is stored in `callback` and `client_aliases` properties on the client."
    },
    "post_rotate-secret_response_zendesk": {
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string",
          "description": "Zendesk account name usually first segment in your Zendesk URL. e.g. `https://acme-org.zendesk.com` would be `acme-org`."
        }
      },
      "defaultValue": {},
      "description": "Zendesk SSO configuration."
    },
    "post_rotate-secret_response_zoom": {
      "type": "object",
      "properties": {
        "account": {
          "type": "string",
          "description": "Zoom account name usually first segment of your Zoom URL, e.g. `https://acme-org.zoom.us` would be `acme-org`."
        }
      },
      "defaultValue": {},
      "description": "Zoom SSO configuration."
    },
    "post_rotate-secret_response_sso_integration": {
      "type": "object",
      "properties": {
        "name": { "type": "string", "description": "SSO integration name" },
        "version": {
          "type": "string",
          "description": "SSO integration version installed"
        }
      }
    },
    "post_rotate-secret_response_client_metadata": {
      "type": "object",
      "description": "Metadata associated with the client, in the form of an object with string values (max 255 chars).  Maximum of 10 metadata properties allowed.  Field names (max 255 chars) are alphanumeric and may only include the following special characters:  :,-+=_*?\"/\\()<>@\t[Tab] [Space]",
      "maxProperties": 10,
      "patternProperties": {
        "^[A-Za-z0-9:,\\-+=_*\\?\"/\\\\()<>@\t ]{1,255}$": {
          "anyOf": [{ "type": "string", "maxLength": 255 }, { "type": "null" }]
        }
      },
      "additionalProperties": false
    },
    "post_rotate-secret_response_mobile": {
      "description": "Additional configuration for native mobile apps.",
      "type": "object",
      "properties": {
        "android": {
          "$ref": "post_rotate-secret_response_android",
          "description": "Android native app configuration."
        },
        "ios": {
          "$ref": "post_rotate-secret_response_ios",
          "description": "iOS native app configuration."
        }
      }
    },
    "post_rotate-secret_response_android": {
      "description": "Android native app configuration.",
      "type": "object",
      "defaultValue": {
        "app_package_name": "com.example",
        "sha256_cert_fingerprints": ["D8:A0:83:..."]
      },
      "properties": {
        "app_package_name": {
          "description": "App package name found in AndroidManifest.xml.",
          "type": "string",
          "defaultValue": ""
        },
        "sha256_cert_fingerprints": {
          "description": "SHA256 fingerprints of the app's signing certificate. Multiple fingerprints can be used to support different versions of your app, such as debug and production builds.",
          "type": "array",
          "items": { "type": "string", "minLength": 1 },
          "minItems": 1,
          "defaultValue": []
        }
      }
    },
    "post_rotate-secret_response_ios": {
      "description": "iOS native app configuration.",
      "type": "object",
      "defaultValue": {
        "team_id": "9JA89QQLNQ",
        "app_bundle_identifier": "com.my.bundle.id"
      },
      "properties": {
        "team_id": {
          "description": "Identifier assigned to the Apple account that signs and uploads the app to the store.",
          "type": "string",
          "defaultValue": ""
        },
        "app_bundle_identifier": {
          "description": "Assigned by developer to the app as its unique identifier inside the store. Usually this is a reverse domain plus the app name, e.g. `com.you.MyApp`.",
          "type": "string",
          "defaultValue": ""
        }
      }
    },
    "post_rotate-secret_response_native_social_login": {
      "description": "Configure native social settings",
      "type": "object",
      "properties": {
        "apple": {
          "$ref": "post_rotate-secret_response_apple",
          "description": "Native Social Login support for the Apple connection"
        },
        "facebook": {
          "$ref": "post_rotate-secret_response_facebook",
          "description": "Native Social Login support for the Facebook connection"
        }
      },
      "minProperties": 1,
      "additionalProperties": false
    },
    "post_rotate-secret_response_apple": {
      "description": "Native Social Login support for the Apple connection",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Determine whether or not to allow signing in natively using an Apple authorization code",
          "type": "boolean",
          "defaultValue": false
        }
      },
      "minProperties": 1,
      "additionalProperties": false
    },
    "post_rotate-secret_response_facebook": {
      "swagger": false,
      "description": "Native Social Login support for the Facebook connection",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Determine whether or not to allow signing in natively using Facebook",
          "type": "boolean",
          "defaultValue": false
        }
      },
      "minProperties": 1,
      "additionalProperties": false
    },
    "post_rotate-secret_response_refresh_token": {
      "type": "object",
      "description": "Refresh token configuration",
      "properties": {
        "rotation_type": {
          "type": "string",
          "description": "Refresh token rotation types, one of: rotating, non-rotating",
          "enum": ["rotating", "non-rotating"],
          "defaultValue": "non-rotating"
        },
        "expiration_type": {
          "type": "string",
          "description": "Refresh token expiration types, one of: expiring, non-expiring",
          "enum": ["expiring", "non-expiring"],
          "defaultValue": "non-expiring"
        },
        "leeway": {
          "type": "integer",
          "description": "Period in seconds where the previous refresh token can be exchanged without triggering breach detection",
          "defaultValue": 0,
          "minimum": 0
        },
        "token_lifetime": {
          "type": "integer",
          "description": "Period (in seconds) for which refresh tokens will remain valid",
          "minimum": 1,
          "maximum": 157788000
        },
        "infinite_token_lifetime": {
          "type": "boolean",
          "description": "Prevents tokens from having a set lifetime when `true` (takes precedence over `token_lifetime` values)"
        },
        "idle_token_lifetime": {
          "type": "integer",
          "description": "Period (in seconds) for which refresh tokens will remain valid without use",
          "minimum": 1
        },
        "infinite_idle_token_lifetime": {
          "type": "boolean",
          "description": "Prevents tokens from expiring without use when `true` (takes precedence over `idle_token_lifetime` values)",
          "defaultValue": false
        }
      },
      "required": ["rotation_type", "expiration_type"],
      "additionalProperties": false
    },
    "post_rotate-secret_response_private_key_jwt": {
      "description": "Defines `private_key_jwt` client authentication method .",
      "type": "object",
      "properties": {
        "credentials": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": { "type": "string", "description": "Credential ID" }
            },
            "required": ["id"],
            "additionalProperties": false
          },
          "uniqueItems": false,
          "minItems": 0,
          "maxItems": 2
        }
      },
      "required": ["credentials"],
      "additionalProperties": false
    },
    "post_rotate-secret_response_claims_mapping": {
      "type": "object",
      "description": "Custom configuration for claims in ID tokens",
      "properties": { "sub": { "$ref": "post_rotate-secret_response_sub" } },
      "additionalProperties": false
    },
    "post_rotate-secret_response_sub": {
      "properties": { "source": { "enum": ["default"] } },
      "required": ["source"]
    }
  }
}

{
  "apiVersion": "2",
  "swaggerVersion": "1.2",
  "basePath": "/",
  "resourcePath": "/Logs",
  "produces": ["application/json"],
  "apis": [
    {
      "path": "/api/v2/logs",
      "operations": [
        {
          "method": "get",
          "summary": "Search log events",
          "notes": "Retrieve log entries that match the specified search criteria (or all log entries if no criteria specified).\n\nSet custom search criteria using the <code>q</code> parameter, or search from a specific log ID (<i>\"search from checkpoint\"</i>).\n\nFor more information on all possible event types, their respective acronyms, and descriptions, see <a href=\"https://auth0.com/docs/logs/log-event-type-codes\">Log Event Type Codes</a>.\n\n<h5>To set custom search criteria, use the following parameters:</h5>\n\n<ul>\n    <li><b>q:</b> Search Criteria using <a href=\"https://auth0.com/docs/logs/log-search-query-syntax\">Query String Syntax</a></li>\n    <li><b>page:</b> Page index of the results to return. First page is 0.</li>\n    <li><b>per_page:</b> Number of results per page.</li>\n    <li><b>sort:</b> Field to use for sorting appended with `:1` for ascending and `:-1` for descending. e.g. `date:-1`</li>\n    <li><b>fields:</b> Comma-separated list of fields to include or exclude (depending on include_fields) from the result, empty to retrieve all fields.</li>\n    <li><b>include_fields:</b> Whether specified fields are to be included (true) or excluded (false).</li>\n    <li><b>include_totals:</b> Return results inside an object that contains the total result count (true) or as a direct array of results (false, default). <b>Deprecated:</b> this field is deprecated and should be removed from use. See <a href=\"https://auth0.com/docs/product-lifecycle/deprecations-and-migrations/migrate-to-tenant-log-search-v3#pagination\">Search Engine V3 Breaking Changes</a></li>\n</ul>\n\nFor more information on the list of fields that can be used in <code>fields</code> and <code>sort</code>, see <a href=\"https://auth0.com/docs/logs/log-search-query-syntax#searchable-fields\">Searchable Fields</a>.\n\nAuth0 <a href=\"https://auth0.com/docs/logs/retrieve-log-events-using-mgmt-api#limitations\">limits the number of logs</a> you can return by search criteria to 100 logs per request. Furthermore, you may paginate only through 1,000 search results. If you exceed this threshold, please redefine your search or use the <a href=\"https://auth0.com/docs/logs/retrieve-log-events-using-mgmt-api#retrieve-logs-by-checkpoint\">get logs by checkpoint method</a>.\n\n<h5>To search from a checkpoint log ID, use the following parameters:</h5>\n<ul>\n    <li><b>from:</b> Log Event ID from which to start retrieving logs. You can limit the number of logs returned using the <code>take</code> parameter. If you use <code>from</code> at the same time as <code>q</code>, <code>from</code> takes precedence and <code>q</code> is ignored.</li>\n    <li><b>take:</b> Number of entries to retrieve when using the <code>from</code> parameter.</li>\n</ul>\n\n<strong>Important:</strong> When fetching logs from a checkpoint log ID, any parameter other than <code>from</code> and <code>take</code> will be ignored, and date ordering is not guaranteed.\n",
          "type": "array",
          "nickname": "get_logs",
          "parameters": [
            {
              "paramType": "query",
              "name": "page",
              "description": "Page index of the results to return. First page is 0.",
              "type": "integer",
              "minimum": 0
            },
            {
              "paramType": "query",
              "name": "per_page",
              "description": " Number of results per page. Paging is disabled if parameter not sent. Default: <code>50</code>. Max value: <code>100</code>",
              "type": "integer",
              "minimum": 0,
              "maximum": 100
            },
            {
              "paramType": "query",
              "name": "sort",
              "description": "Field to use for sorting appended with <code>:1</code>  for ascending and <code>:-1</code> for descending. e.g. <code>date:-1</code>",
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "fields",
              "description": "Comma-separated list of fields to include or exclude (based on value provided for <code>include_fields</code>) in the result. Leave empty to retrieve all fields.",
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "include_fields",
              "description": "Whether specified fields are to be included (<code>true</code>) or excluded (<code>false</code>)",
              "type": "boolean"
            },
            {
              "paramType": "query",
              "name": "include_totals",
              "description": "Return results as an array when false (default). Return results inside an object that also contains a total result count when true.",
              "type": "boolean"
            },
            {
              "paramType": "query",
              "name": "from",
              "description": "Log Event Id from which to start selection from.",
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "take",
              "description": "Number of entries to retrieve when using the <code>from</code> parameter. Default <code>50</code>, max <code>100</code>",
              "type": "integer"
            },
            {
              "paramType": "query",
              "name": "q",
              "description": "Query in <a target='_new' href ='http://www.lucenetutorial.com/lucene-query-syntax.html'>Lucene query string syntax</a>.",
              "type": "string"
            }
          ],
          "items": { "$ref": "get_logs_response" },
          "responseMessages": [
            { "code": 200, "message": "Logs successfully retrieved." },
            {
              "code": 400,
              "message": "Invalid request URI. The message will vary depending on the cause.",
              "errorCode": "invalid_uri"
            },
            { "code": 401, "message": "Invalid token." },
            {
              "code": 401,
              "message": "Invalid signature received for JSON Web Token validation."
            },
            {
              "code": 403,
              "message": "Insufficient scope; expected any of: read:logs, read:logs_users.",
              "errorCode": "insufficient_scope"
            },
            {
              "code": 429,
              "message": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."
            }
          ],
          "authorizations": {
            "jwt": { "scopes": ["read:logs", "read:logs_users"] }
          }
        }
      ]
    },
    {
      "path": "/api/v2/logs/{id}",
      "operations": [
        {
          "method": "get",
          "summary": "Get a log event by id",
          "notes": "Retrieve an individual log event.",
          "type": "get_logs_by_id_response",
          "nickname": "get_logs_by_id",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "log_id of the log to retrieve.",
              "type": "string",
              "required": true
            }
          ],
          "responseMessages": [
            { "code": 200, "message": "Log successfully retrieved." },
            {
              "code": 400,
              "message": "Invalid request URI. The message will vary depending on the cause.",
              "errorCode": "invalid_uri"
            },
            { "code": 401, "message": "Invalid token." },
            {
              "code": 401,
              "message": "Invalid signature received for JSON Web Token validation."
            },
            {
              "code": 403,
              "message": "Insufficient scope; expected any of: read:logs, read:logs_users.",
              "errorCode": "insufficient_scope"
            },
            {
              "code": 404,
              "message": "Log not found.",
              "errorCode": "inexistent_log"
            },
            {
              "code": 429,
              "message": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."
            }
          ],
          "authorizations": {
            "jwt": { "scopes": ["read:logs", "read:logs_users"] }
          }
        }
      ]
    }
  ],
  "consumes": [],
  "models": {
    "get_logs_response": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "description": "Date when the event occurred in ISO 8601 format.",
          "defaultValue": "2016-02-23T19:57:29.532Z"
        },
        "type": {
          "type": "string",
          "description": "Type of event.",
          "defaultValue": "sapi"
        },
        "description": {
          "type": "string",
          "description": "Description of this event."
        },
        "connection": {
          "type": "string",
          "description": "Name of the connection the event relates to."
        },
        "connection_id": {
          "type": "string",
          "description": "ID of the connection the event relates to."
        },
        "client_id": {
          "type": "string",
          "description": "ID of the client (application).",
          "defaultValue": "AaiyAPdpYdesoKnqjj8HJqRn4T5titww"
        },
        "client_name": {
          "type": "string",
          "description": "Name of the client (application).",
          "defaultValue": "My application Name"
        },
        "ip": {
          "type": "string",
          "description": "IP address of the log event source.",
          "defaultValue": "190.257.209.19"
        },
        "hostname": {
          "type": "string",
          "description": "Hostname the event applies to.",
          "defaultValue": "190.257.209.19"
        },
        "user_id": {
          "type": "string",
          "description": "ID of the user involved in the event.",
          "defaultValue": "auth0|56c75c4e42b6359e98374bc2"
        },
        "user_name": {
          "type": "string",
          "description": "Name of the user involved in the event."
        },
        "audience": {
          "type": "string",
          "description": "API audience the event applies to."
        },
        "scope": {
          "type": "string",
          "description": "Scope permissions applied to the event.",
          "defaultValue": ""
        },
        "strategy": {
          "type": "string",
          "description": "Name of the strategy involved in the event."
        },
        "strategy_type": {
          "type": "string",
          "description": "Type of strategy involved in the event."
        },
        "log_id": {
          "type": "string",
          "description": "Unique ID of the event."
        },
        "isMobile": {
          "type": "boolean",
          "description": "Whether the client was a mobile device (true) or desktop/laptop/server (false)."
        },
        "details": {
          "$ref": "get_logs_response_details",
          "description": "Additional useful details about this event (structure is dependent upon event type)."
        },
        "user_agent": {
          "type": "string",
          "description": "User agent string from the client device that caused the event."
        },
        "location_info": {
          "$ref": "get_logs_response_location_info",
          "description": "Information about the location that triggered this event based on the `ip`."
        }
      },
      "additionalProperties": true
    },
    "get_logs_response_details": {
      "type": "object",
      "description": "Additional useful details about this event (structure is dependent upon event type).",
      "additionalProperties": true,
      "defaultValue": {}
    },
    "get_logs_response_location_info": {
      "type": "object",
      "description": "Information about the location that triggered this event based on the `ip`.",
      "properties": {
        "country_code": {
          "type": "string",
          "description": "Two-letter <a href=\"https://www.iso.org/iso-3166-country-codes.html\">Alpha-2 ISO 3166-1</a> country code.",
          "minLength": 2,
          "maxLength": 2
        },
        "country_code3": {
          "type": "string",
          "description": "Three-letter <a href=\"https://www.iso.org/iso-3166-country-codes.html\">Alpha-3 ISO 3166-1</a> country code.",
          "minLength": 3,
          "maxLength": 3
        },
        "country_name": {
          "type": "string",
          "description": "Full country name in English."
        },
        "city_name": {
          "type": "string",
          "description": "Full city name in English."
        },
        "latitude": {
          "type": "string",
          "description": "Global latitude (horizontal) position."
        },
        "longitude": {
          "type": "string",
          "description": "Global longitude (vertical) position."
        },
        "time_zone": {
          "type": "string",
          "description": "Time zone name as found in the <a href=\"https://www.iana.org/time-zones\">tz database</a>."
        },
        "continent_code": {
          "type": "string",
          "description": "Continent the country is located within. Can be `AF` (Africa), `AN` (Antarctica), `AS` (Asia), `EU` (Europe), `NA` (North America), `OC` (Oceania) or `SA` (South America)."
        }
      }
    },
    "get_logs_by_id_response": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "description": "Date when the event occurred in ISO 8601 format.",
          "defaultValue": "2016-02-23T19:57:29.532Z"
        },
        "type": {
          "type": "string",
          "description": "Type of event.",
          "defaultValue": "sapi"
        },
        "description": {
          "type": "string",
          "description": "Description of this event."
        },
        "connection": {
          "type": "string",
          "description": "Name of the connection the event relates to."
        },
        "connection_id": {
          "type": "string",
          "description": "ID of the connection the event relates to."
        },
        "client_id": {
          "type": "string",
          "description": "ID of the client (application).",
          "defaultValue": "AaiyAPdpYdesoKnqjj8HJqRn4T5titww"
        },
        "client_name": {
          "type": "string",
          "description": "Name of the client (application).",
          "defaultValue": "My application Name"
        },
        "ip": {
          "type": "string",
          "description": "IP address of the log event source.",
          "defaultValue": "190.257.209.19"
        },
        "hostname": {
          "type": "string",
          "description": "Hostname the event applies to.",
          "defaultValue": "190.257.209.19"
        },
        "user_id": {
          "type": "string",
          "description": "ID of the user involved in the event.",
          "defaultValue": "auth0|56c75c4e42b6359e98374bc2"
        },
        "user_name": {
          "type": "string",
          "description": "Name of the user involved in the event."
        },
        "audience": {
          "type": "string",
          "description": "API audience the event applies to."
        },
        "scope": {
          "type": "string",
          "description": "Scope permissions applied to the event.",
          "defaultValue": ""
        },
        "strategy": {
          "type": "string",
          "description": "Name of the strategy involved in the event."
        },
        "strategy_type": {
          "type": "string",
          "description": "Type of strategy involved in the event."
        },
        "log_id": {
          "type": "string",
          "description": "Unique ID of the event."
        },
        "isMobile": {
          "type": "boolean",
          "description": "Whether the client was a mobile device (true) or desktop/laptop/server (false)."
        },
        "details": {
          "$ref": "get_logs_by_id_response_details",
          "description": "Additional useful details about this event (structure is dependent upon event type)."
        },
        "user_agent": {
          "type": "string",
          "description": "User agent string from the client device that caused the event."
        },
        "location_info": {
          "$ref": "get_logs_by_id_response_location_info",
          "description": "Information about the location that triggered this event based on the `ip`."
        }
      },
      "additionalProperties": true
    },
    "get_logs_by_id_response_details": {
      "type": "object",
      "description": "Additional useful details about this event (structure is dependent upon event type).",
      "additionalProperties": true,
      "defaultValue": {}
    },
    "get_logs_by_id_response_location_info": {
      "type": "object",
      "description": "Information about the location that triggered this event based on the `ip`.",
      "properties": {
        "country_code": {
          "type": "string",
          "description": "Two-letter <a href=\"https://www.iso.org/iso-3166-country-codes.html\">Alpha-2 ISO 3166-1</a> country code.",
          "minLength": 2,
          "maxLength": 2
        },
        "country_code3": {
          "type": "string",
          "description": "Three-letter <a href=\"https://www.iso.org/iso-3166-country-codes.html\">Alpha-3 ISO 3166-1</a> country code.",
          "minLength": 3,
          "maxLength": 3
        },
        "country_name": {
          "type": "string",
          "description": "Full country name in English."
        },
        "city_name": {
          "type": "string",
          "description": "Full city name in English."
        },
        "latitude": {
          "type": "string",
          "description": "Global latitude (horizontal) position."
        },
        "longitude": {
          "type": "string",
          "description": "Global longitude (vertical) position."
        },
        "time_zone": {
          "type": "string",
          "description": "Time zone name as found in the <a href=\"https://www.iana.org/time-zones\">tz database</a>."
        },
        "continent_code": {
          "type": "string",
          "description": "Continent the country is located within. Can be `AF` (Africa), `AN` (Antarctica), `AS` (Asia), `EU` (Europe), `NA` (North America), `OC` (Oceania) or `SA` (South America)."
        }
      }
    }
  }
}

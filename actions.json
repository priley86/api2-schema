{
  "apiVersion": "2",
  "swaggerVersion": "1.2",
  "basePath": "/",
  "resourcePath": "/Actions",
  "produces": ["application/json"],
  "apis": [
    {
      "path": "/api/v2/actions/actions",
      "operations": [
        {
          "method": "get",
          "summary": "Get actions",
          "notes": "Retrieve all actions.\n",
          "type": "get_actions_response",
          "nickname": "get_actions",
          "parameters": [
            {
              "paramType": "query",
              "name": "triggerId",
              "description": "An actions extensibility point.",
              "type": "string",
              "enum": [
                "post-login",
                "credentials-exchange",
                "pre-user-registration",
                "post-user-registration",
                "post-change-password",
                "send-phone-message",
                "iga-approval",
                "iga-certification",
                "iga-fulfillment-assignment",
                "iga-fulfillment-execution"
              ]
            },
            {
              "paramType": "query",
              "name": "actionName",
              "description": "The name of the action to retrieve.",
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "deployed",
              "description": "Optional filter to only retrieve actions that are deployed.",
              "type": "boolean"
            },
            {
              "paramType": "query",
              "name": "page",
              "description": "Use this field to request a specific page of the list results.",
              "type": "number"
            },
            {
              "paramType": "query",
              "name": "per_page",
              "description": "The maximum number of results to be returned by the server in single response. 20 by default",
              "type": "number"
            },
            {
              "paramType": "query",
              "name": "installed",
              "description": "Optional. When true, return only installed actions. When false, return only custom actions. Returns all actions by default.",
              "type": "boolean"
            }
          ],
          "responseMessages": [
            { "code": 200, "message": "The actions were retrieved." },
            {
              "code": 400,
              "message": "Invalid request URI. The message will vary depending on the cause.",
              "errorCode": "invalid_uri"
            },
            { "code": 401, "message": "Invalid token." },
            {
              "code": 401,
              "message": "Invalid signature received for JSON Web Token validation."
            },
            {
              "code": 403,
              "message": "Insufficient scope, expected: read:actions."
            },
            {
              "code": 429,
              "message": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."
            }
          ],
          "authorizations": { "jwt": { "scopes": ["read:actions"] } }
        },
        {
          "method": "post",
          "summary": "Create an action",
          "notes": "Create an action. Once an action is created, it must be deployed, and then\nbound to a trigger before it will be executed as part of a flow.\n",
          "type": "post_action_response",
          "nickname": "post_action",
          "parameters": [
            {
              "paramType": "body",
              "name": "body",
              "type": "post_action_body",
              "required": true
            }
          ],
          "responseMessages": [
            { "code": 201, "message": "Action successfully created." },
            {
              "code": 400,
              "message": "Invalid Request Body.",
              "errorCode": "invalid_body"
            },
            { "code": 401, "message": "Invalid token." },
            {
              "code": 401,
              "message": "Invalid signature received for JSON Web Token validation."
            },
            {
              "code": 403,
              "message": "Insufficient scope, expected: create:actions."
            },
            {
              "code": 429,
              "message": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."
            }
          ],
          "consumes": ["application/json", "application/x-www-form-urlencoded"],
          "authorizations": { "jwt": { "scopes": ["create:actions"] } }
        }
      ]
    },
    {
      "path": "/api/v2/actions/triggers",
      "operations": [
        {
          "method": "get",
          "summary": "Get triggers",
          "notes": "Retrieve the set of triggers currently available within actions. A trigger is an extensibility point to which actions \ncan be bound.\n",
          "type": "get_triggers_response",
          "nickname": "get_triggers",
          "parameters": [],
          "responseMessages": [
            { "code": 200, "message": "The triggers were retrieved." },
            {
              "code": 400,
              "message": "Invalid request URI. The message will vary depending on the cause.",
              "errorCode": "invalid_uri"
            },
            { "code": 401, "message": "Invalid token." },
            {
              "code": 401,
              "message": "Invalid signature received for JSON Web Token validation."
            },
            {
              "code": 403,
              "message": "Insufficient scope, expected: read:actions."
            },
            {
              "code": 429,
              "message": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."
            }
          ],
          "authorizations": { "jwt": { "scopes": ["read:actions"] } }
        }
      ]
    },
    {
      "path": "/api/v2/actions/actions/{id}",
      "operations": [
        {
          "method": "get",
          "summary": "Get an action",
          "notes": "Retrieve an action by its ID.\n",
          "type": "get_action_response",
          "nickname": "get_action",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "The ID of the action to retrieve.",
              "type": "string",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 200,
              "message": "The action was retrieved. See <strong>Response Class</strong> below for schema."
            },
            {
              "code": 400,
              "message": "Invalid request URI. The message will vary depending on the cause.",
              "errorCode": "invalid_uri"
            },
            { "code": 401, "message": "Invalid token." },
            {
              "code": 401,
              "message": "Invalid signature received for JSON Web Token validation."
            },
            {
              "code": 403,
              "message": "Insufficient scope, expected: read:actions."
            },
            { "code": 404, "message": "The action does not exist." },
            {
              "code": 429,
              "message": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."
            }
          ],
          "authorizations": { "jwt": { "scopes": ["read:actions"] } }
        },
        {
          "method": "delete",
          "summary": "Delete an action",
          "notes": "Deletes an action and all of its associated versions. An action must be unbound from all triggers\nbefore it can be deleted.\n",
          "type": "void",
          "nickname": "delete_action",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "The ID of the action to delete.",
              "type": "string",
              "required": true
            },
            {
              "paramType": "path",
              "name": "force",
              "description": "Force action deletion detaching bindings",
              "type": "boolean",
              "required": false
            }
          ],
          "responseMessages": [
            { "code": 204, "message": "Action successfully deleted." },
            {
              "code": 400,
              "message": "Invalid request URI. The message will vary depending on the cause.",
              "errorCode": "invalid_uri"
            },
            { "code": 401, "message": "Invalid token." },
            {
              "code": 401,
              "message": "Invalid signature received for JSON Web Token validation."
            },
            {
              "code": 403,
              "message": "Insufficient scope, expected: delete:actions."
            },
            { "code": 404, "message": "The action version does not exist." },
            {
              "code": 429,
              "message": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."
            }
          ],
          "authorizations": { "jwt": { "scopes": ["delete:actions"] } }
        },
        {
          "method": "patch",
          "summary": "Update an action",
          "notes": "Update an existing action. If this action is currently bound to a trigger, updating it will <strong>not</strong> affect\nany user flows until the action is deployed.\n",
          "type": "patch_action_response",
          "nickname": "patch_action",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "The id of the action to update.",
              "type": "string",
              "required": true
            },
            {
              "paramType": "body",
              "name": "body",
              "type": "patch_action_body",
              "required": true
            }
          ],
          "responseMessages": [
            { "code": 200, "message": "Action successfully updated." },
            {
              "code": 400,
              "message": "Invalid Request Body.",
              "errorCode": "invalid_body"
            },
            { "code": 401, "message": "Invalid token." },
            {
              "code": 401,
              "message": "Invalid signature received for JSON Web Token validation."
            },
            {
              "code": 403,
              "message": "Insufficient scope, expected: update:actions."
            },
            {
              "code": 404,
              "message": "Action not found and cannot be updated."
            },
            {
              "code": 429,
              "message": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."
            }
          ],
          "consumes": ["application/json", "application/x-www-form-urlencoded"],
          "authorizations": { "jwt": { "scopes": ["update:actions"] } }
        }
      ]
    },
    {
      "path": "/api/v2/actions/executions/{id}",
      "operations": [
        {
          "method": "get",
          "summary": "Get an execution",
          "notes": "Retrieve information about a specific execution of a trigger. Relevant execution IDs will be included in tenant logs\ngenerated as part of that authentication flow. Executions will only be stored for 10 days after their creation.\n",
          "type": "get_execution_response",
          "nickname": "get_execution",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "The ID of the execution to retrieve.",
              "type": "string",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 200,
              "message": "The execution was retrieved. See <strong>Response Class</strong> below for schema."
            },
            {
              "code": 400,
              "message": "Invalid request URI. The message will vary depending on the cause.",
              "errorCode": "invalid_uri"
            },
            { "code": 401, "message": "Invalid token." },
            {
              "code": 401,
              "message": "Invalid signature received for JSON Web Token validation."
            },
            {
              "code": 403,
              "message": "Insufficient scope, expected: read:actions."
            },
            { "code": 404, "message": "The execution does not exist." },
            {
              "code": 429,
              "message": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."
            }
          ],
          "authorizations": { "jwt": { "scopes": ["read:actions"] } }
        }
      ]
    },
    {
      "path": "/api/v2/actions/actions/{actionId}/versions",
      "operations": [
        {
          "method": "get",
          "summary": "Get an action's versions",
          "notes": "Retrieve all of an action's versions. An action version is created whenever\nan action is deployed. An action version is immutable, once created.\n",
          "type": "get_action_versions_response",
          "nickname": "get_action_versions",
          "parameters": [
            {
              "paramType": "path",
              "name": "actionId",
              "description": "The ID of the action.",
              "type": "string",
              "required": true
            },
            {
              "paramType": "query",
              "name": "page",
              "description": "Use this field to request a specific page of the list results.",
              "type": "number"
            },
            {
              "paramType": "query",
              "name": "per_page",
              "description": "This field specify the maximum number of results to be returned by the server. 20 by default",
              "type": "number"
            }
          ],
          "responseMessages": [
            { "code": 200, "message": "The action versions were retrieved." },
            {
              "code": 400,
              "message": "Invalid request URI. The message will vary depending on the cause.",
              "errorCode": "invalid_uri"
            },
            { "code": 401, "message": "Invalid token." },
            {
              "code": 401,
              "message": "Invalid signature received for JSON Web Token validation."
            },
            {
              "code": 403,
              "message": "Insufficient scope, expected: read:actions."
            },
            {
              "code": 429,
              "message": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."
            }
          ],
          "authorizations": { "jwt": { "scopes": ["read:actions"] } }
        }
      ]
    },
    {
      "path": "/api/v2/actions/triggers/{triggerId}/bindings",
      "operations": [
        {
          "method": "get",
          "summary": "Get trigger bindings",
          "notes": "Retrieve the actions that are bound to a trigger. Once an action is created and deployed, it must be\nattached (i.e. bound) to a trigger so that it will be executed as part of a flow. The list of actions returned\nreflects the order in which they will be executed during the appropriate flow.\n",
          "type": "get_bindings_response",
          "nickname": "get_bindings",
          "parameters": [
            {
              "paramType": "path",
              "name": "triggerId",
              "description": "An actions extensibility point.",
              "type": "string",
              "required": true,
              "enum": [
                "post-login",
                "credentials-exchange",
                "pre-user-registration",
                "post-user-registration",
                "post-change-password",
                "send-phone-message",
                "iga-approval",
                "iga-certification",
                "iga-fulfillment-assignment",
                "iga-fulfillment-execution"
              ]
            },
            {
              "paramType": "query",
              "name": "page",
              "description": "Use this field to request a specific page of the list results.",
              "type": "number"
            },
            {
              "paramType": "query",
              "name": "per_page",
              "description": "The maximum number of results to be returned in a single request. 20 by default",
              "type": "number"
            }
          ],
          "responseMessages": [
            { "code": 200, "message": "The bindings were retrieved." },
            {
              "code": 400,
              "message": "Invalid request URI. The message will vary depending on the cause.",
              "errorCode": "invalid_uri"
            },
            { "code": 401, "message": "Invalid token." },
            {
              "code": 401,
              "message": "Invalid signature received for JSON Web Token validation."
            },
            {
              "code": 403,
              "message": "Insufficient scope, expected: read:actions."
            },
            {
              "code": 429,
              "message": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."
            }
          ],
          "authorizations": { "jwt": { "scopes": ["read:actions"] } }
        },
        {
          "method": "patch",
          "summary": "Update trigger bindings",
          "notes": "Update the actions that are bound (i.e. attached) to a trigger. Once an action is created and deployed, it must be\nattached (i.e. bound) to a trigger so that it will be executed as part of a flow. The order in which the actions are\nprovided will determine the order in which they are executed.\n",
          "type": "patch_bindings_response",
          "nickname": "patch_bindings",
          "parameters": [
            {
              "paramType": "path",
              "name": "triggerId",
              "description": "An actions extensibility point.",
              "type": "string",
              "required": true,
              "enum": [
                "post-login",
                "credentials-exchange",
                "pre-user-registration",
                "post-user-registration",
                "post-change-password",
                "send-phone-message",
                "iga-approval",
                "iga-certification",
                "iga-fulfillment-assignment",
                "iga-fulfillment-execution"
              ]
            },
            {
              "paramType": "body",
              "name": "body",
              "type": "patch_bindings_body",
              "required": true
            }
          ],
          "responseMessages": [
            { "code": 200, "message": "The bindings were updated." },
            {
              "code": 400,
              "message": "Invalid Request Body.",
              "errorCode": "invalid_body"
            },
            {
              "code": 400,
              "message": "Invalid request URI. The message will vary depending on the cause.",
              "errorCode": "invalid_uri"
            },
            { "code": 401, "message": "Invalid token." },
            {
              "code": 401,
              "message": "Invalid signature received for JSON Web Token validation."
            },
            {
              "code": 403,
              "message": "Insufficient scope, expected: update:actions."
            },
            {
              "code": 429,
              "message": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."
            }
          ],
          "consumes": ["application/json", "application/x-www-form-urlencoded"],
          "authorizations": { "jwt": { "scopes": ["update:actions"] } }
        }
      ]
    },
    {
      "path": "/api/v2/actions/actions/{actionId}/versions/{id}",
      "operations": [
        {
          "method": "get",
          "summary": "Get a specific version of an action",
          "notes": "Retrieve a specific version of an action. An action version is created whenever\nan action is deployed. An action version is immutable, once created.\n",
          "type": "get_action_version_response",
          "nickname": "get_action_version",
          "parameters": [
            {
              "paramType": "path",
              "name": "actionId",
              "description": "The ID of the action.",
              "type": "string",
              "required": true
            },
            {
              "paramType": "path",
              "name": "id",
              "description": "The ID of the action version.",
              "type": "string",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 200,
              "message": "The action version was retrieved. See <strong>Response Class</strong> below for schema."
            },
            {
              "code": 400,
              "message": "Invalid request URI. The message will vary depending on the cause.",
              "errorCode": "invalid_uri"
            },
            { "code": 401, "message": "Invalid token." },
            {
              "code": 401,
              "message": "Invalid signature received for JSON Web Token validation."
            },
            {
              "code": 403,
              "message": "Insufficient scope, expected: read:actions."
            },
            { "code": 404, "message": "The action version does not exist." },
            {
              "code": 429,
              "message": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."
            }
          ],
          "authorizations": { "jwt": { "scopes": ["read:actions"] } }
        }
      ]
    },
    {
      "path": "/api/v2/actions/actions/{id}/test",
      "operations": [
        {
          "method": "post",
          "summary": "Test an Action",
          "notes": "Test an action. After updating an action, it can be tested prior to being deployed to ensure it behaves as expected.\n",
          "type": "post_test_action_response",
          "nickname": "post_test_action",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "The id of the action to test.",
              "type": "string"
            },
            {
              "paramType": "body",
              "name": "body",
              "type": "post_test_action_body",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 200,
              "message": "Test action version successfully created."
            },
            {
              "code": 400,
              "message": "Invalid Request Body.",
              "errorCode": "invalid_body"
            },
            { "code": 401, "message": "Invalid token." },
            {
              "code": 401,
              "message": "Invalid signature received for JSON Web Token validation."
            },
            {
              "code": 403,
              "message": "Insufficient scope, expected: create:actions."
            },
            {
              "code": 429,
              "message": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."
            }
          ],
          "consumes": ["application/json", "application/x-www-form-urlencoded"],
          "authorizations": { "jwt": { "scopes": ["create:actions"] } }
        }
      ]
    },
    {
      "path": "/api/v2/actions/actions/{id}/deploy",
      "operations": [
        {
          "method": "post",
          "summary": "Deploy an action",
          "notes": "Deploy an action. Deploying an action will create a new immutable version of the action. If the action is\ncurrently bound to a trigger, then the system will begin executing the newly deployed version of the action immediately. Otherwise, the action will only be executed as a part of a flow once it is bound to that flow.\n",
          "type": "post_deploy_action_response",
          "nickname": "post_deploy_action",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "The ID of an action.",
              "type": "string",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 202,
              "message": "Request to create action version was accepted."
            },
            {
              "code": 400,
              "message": "Invalid Request Body.",
              "errorCode": "invalid_body"
            },
            { "code": 401, "message": "Invalid token." },
            {
              "code": 401,
              "message": "Invalid signature received for JSON Web Token validation."
            },
            {
              "code": 403,
              "message": "Insufficient scope, expected: create:actions."
            },
            {
              "code": 429,
              "message": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."
            }
          ],
          "authorizations": { "jwt": { "scopes": ["create:actions"] } }
        }
      ]
    },
    {
      "path": "/api/v2/actions/actions/{actionId}/versions/{id}/deploy",
      "operations": [
        {
          "method": "post",
          "summary": "Roll back to a previous action version",
          "notes": "Performs the equivalent of a roll-back of an action to an earlier, specified version. Creates a new, deployed\naction version that is identical to the specified version. If this action is currently bound to a trigger, the\nsystem will begin executing the newly-created version immediately.\n",
          "type": "post_deploy_draft_version_response",
          "nickname": "post_deploy_draft_version",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "The ID of an action version.",
              "type": "string",
              "required": true
            },
            {
              "paramType": "path",
              "name": "actionId",
              "description": "The ID of an action.",
              "type": "string",
              "required": true
            },
            {
              "paramType": "body",
              "name": "body",
              "type": "post_deploy_draft_version_body",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 202,
              "message": "Request to create action version was accepted."
            },
            {
              "code": 400,
              "message": "Invalid Request Body.",
              "errorCode": "invalid_body"
            },
            { "code": 401, "message": "Invalid token." },
            {
              "code": 401,
              "message": "Invalid signature received for JSON Web Token validation."
            },
            {
              "code": 403,
              "message": "Insufficient scope, expected: create:actions."
            },
            {
              "code": 429,
              "message": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."
            }
          ],
          "consumes": ["application/json", "application/x-www-form-urlencoded"],
          "authorizations": { "jwt": { "scopes": ["create:actions"] } }
        }
      ]
    }
  ],
  "consumes": ["application/json", "application/x-www-form-urlencoded"],
  "models": {
    "get_actions_response": {
      "type": "object",
      "properties": {
        "total": {
          "type": "number",
          "description": "The total result count.",
          "defaultValue": 1
        },
        "page": {
          "type": "number",
          "description": "Page index of the results being returned. First page is 0.",
          "defaultValue": 0
        },
        "per_page": {
          "type": "number",
          "description": "Number of results per page.",
          "defaultValue": 20
        },
        "actions": {
          "type": "array",
          "items": {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The unique ID of the action.",
                "defaultValue": "910b1053-577f-4d81-a8c8-020e7319a38a"
              },
              "name": {
                "type": "string",
                "description": "The name of an action.",
                "defaultValue": "my-action"
              },
              "supported_triggers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["id"],
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An actions extensibility point.",
                      "defaultValue": "post-login",
                      "enum": [
                        "post-login",
                        "credentials-exchange",
                        "pre-user-registration",
                        "post-user-registration",
                        "post-change-password",
                        "send-phone-message",
                        "iga-approval",
                        "iga-certification",
                        "iga-fulfillment-assignment",
                        "iga-fulfillment-execution"
                      ]
                    },
                    "version": {
                      "type": "string",
                      "description": "The version of a trigger. v1, v2, etc."
                    },
                    "status": {
                      "type": "string",
                      "description": "status points to the trigger status."
                    },
                    "runtimes": {
                      "type": "array",
                      "items": { "type": "string" },
                      "description": "runtimes supported by this trigger."
                    },
                    "default_runtime": {
                      "type": "string",
                      "description": "Runtime that will be used when none is specified when creating an action."
                    },
                    "url": {
                      "x-swagger-docs": false,
                      "type": "string",
                      "description": "url refers to some documentation or reference for this trigger."
                    },
                    "compatible_triggers": {
                      "type": "array",
                      "description": "compatible_triggers informs which other trigger supports the same event and api.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "An actions extensibility point.",
                            "defaultValue": "post-login",
                            "enum": [
                              "post-login",
                              "credentials-exchange",
                              "pre-user-registration",
                              "post-user-registration",
                              "post-change-password",
                              "send-phone-message",
                              "iga-approval",
                              "iga-certification",
                              "iga-fulfillment-assignment",
                              "iga-fulfillment-execution"
                            ]
                          },
                          "version": {
                            "type": "string",
                            "description": "The version of a trigger. v1, v2, etc."
                          }
                        },
                        "required": ["id", "version"]
                      }
                    }
                  }
                },
                "description": "The list of triggers that this action supports. At this time, an action can only target a single trigger at a time.",
                "minItems": 1,
                "maxItems": 1,
                "defaultValue": [{ "id": "post-login", "version": "v2" }]
              },
              "required_configuration": {
                "x-swagger-docs": false,
                "type": "array",
                "items": {
                  "type": "object",
                  "description": "param describes specific config / secrets required by an action.",
                  "required": ["name", "label", "type"],
                  "additionalProperties": false,
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "name is analogous to the name attribute in an input form element."
                    },
                    "label": {
                      "type": "string",
                      "description": "label is analogous to what you put in the label form element."
                    },
                    "type": {
                      "type": "string",
                      "description": "type will dictate how the form element is displayed.",
                      "enum": ["string"]
                    },
                    "placeholder": {
                      "type": "string",
                      "description": "placeholder is analogous to the placeholder attribute in an input form element."
                    },
                    "description": {
                      "type": "string",
                      "description": "description provides more context for certain fields which requires more explanation."
                    },
                    "default_value": {
                      "type": "string",
                      "description": "default_value becomes the pre-filled value for a given input. Useful to provide smart defaults."
                    },
                    "optional": {
                      "type": "boolean",
                      "description": "LABS ONLY optional will determine if the param value is optional for the behavior of the action."
                    },
                    "required": {
                      "type": "boolean",
                      "description": "required will determine if the param value is required for the behavior of the action."
                    },
                    "options": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value of an option that will be used within the application."
                          },
                          "label": {
                            "type": "string",
                            "description": "The display value of an option suitable for displaying in a UI."
                          }
                        }
                      },
                      "description": "The allowable options for this param."
                    }
                  }
                },
                "description": "The configuration that must be provided by an action when it is bound to a trigger."
              },
              "required_secrets": {
                "x-swagger-docs": false,
                "type": "array",
                "items": {
                  "type": "object",
                  "description": "param describes specific config / secrets required by an action.",
                  "required": ["name", "label", "type"],
                  "additionalProperties": false,
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "name is analogous to the name attribute in an input form element."
                    },
                    "label": {
                      "type": "string",
                      "description": "label is analogous to what you put in the label form element."
                    },
                    "type": {
                      "type": "string",
                      "description": "type will dictate how the form element is displayed.",
                      "enum": ["string"]
                    },
                    "placeholder": {
                      "type": "string",
                      "description": "placeholder is analogous to the placeholder attribute in an input form element."
                    },
                    "description": {
                      "type": "string",
                      "description": "description provides more context for certain fields which requires more explanation."
                    },
                    "default_value": {
                      "type": "string",
                      "description": "default_value becomes the pre-filled value for a given input. Useful to provide smart defaults."
                    },
                    "optional": {
                      "type": "boolean",
                      "description": "LABS ONLY optional will determine if the param value is optional for the behavior of the action."
                    },
                    "required": {
                      "type": "boolean",
                      "description": "required will determine if the param value is required for the behavior of the action."
                    },
                    "options": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value of an option that will be used within the application."
                          },
                          "label": {
                            "type": "string",
                            "description": "The display value of an option suitable for displaying in a UI."
                          }
                        }
                      },
                      "description": "The allowable options for this param."
                    }
                  }
                },
                "description": "The secrets that must be provided by an action when it is bound to a trigger."
              },
              "code": {
                "type": "string",
                "description": "The source code of the action.",
                "defaultValue": "module.exports = () => {}"
              },
              "dependencies": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "name is the name of the npm module, e.g. lodash"
                    },
                    "version": {
                      "type": "string",
                      "description": "description is the version of the npm module, e.g. 4.17.1"
                    },
                    "registry_url": {
                      "type": "string",
                      "description": "registry_url is an optional value used primarily for private npm registries."
                    }
                  },
                  "description": "Dependency is an npm module. These values are used to produce an immutable artifact, which manifests as a layer_id."
                },
                "description": "The list of third party npm modules, and their versions, that this action depends on.",
                "defaultValue": [{ "name": "lodash", "version": "1.0.0" }]
              },
              "runtime": {
                "type": "string",
                "description": "The Node runtime. For example: `node12`, defaults to `node12`",
                "defaultValue": "node12"
              },
              "secrets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the particular secret, e.g. API_KEY.",
                      "defaultValue": "mySecret"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "The time when the secret was last updated.",
                      "format": "date-time",
                      "defaultValue": "2021-01-01T00:00:00.000Z"
                    }
                  }
                },
                "description": "The list of secrets that are included in an action or a version of an action.",
                "defaultValue": [
                  {
                    "name": "mySecret",
                    "updated_at": "2021-01-01T00:00:00.000Z"
                  }
                ]
              },
              "current_version": {
                "x-swagger-docs": false,
                "type": "object",
                "items": {},
                "description": "The version of the action that is currently deployed.",
                "defaultValue": {}
              },
              "deployed_version": {
                "type": "object",
                "items": {},
                "description": "The version of the action that is currently deployed.",
                "defaultValue": {}
              },
              "installed_integration_id": {
                "type": "string",
                "description": "installed_integration_id is the fk reference to the InstalledIntegration entity.",
                "defaultValue": "7d2bc0c9-c0c2-433a-9f4e-86ef80270aad"
              },
              "integration": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "id is a system generated GUID. This same ID is designed to be federated in\nall the applicable localities.",
                    "defaultValue": "8e9fe2d0-a2fc-4c8c-9e35-dae5afadb70b"
                  },
                  "catalog_id": {
                    "type": "string",
                    "defaultValue": "awesome-auth0-integration",
                    "description": "catalog_id refers to the ID in the marketplace catalog"
                  },
                  "url_slug": {
                    "type": "string",
                    "defaultValue": "awesome-auth0-integration-slug",
                    "description": "url_slug refers to the url_slug in the marketplace catalog"
                  },
                  "partner_id": {
                    "type": "string",
                    "description": "partner_id is the foreign key reference to the partner account this\nintegration belongs to.",
                    "defaultValue": "b8575c12-8d9d-4b5c-b28e-671fe9d39029"
                  },
                  "name": {
                    "type": "string",
                    "description": "name is the integration name, which will be used for display purposes in\nthe marketplace.\n\nTo start we're going to make sure the display name is at least 3\ncharacters. Can adjust this easily later.",
                    "defaultValue": "Example Auth0 integration"
                  },
                  "description": {
                    "type": "string",
                    "description": "description adds more text for the integration name -- also relevant for\nthe marketplace listing.",
                    "defaultValue": "An awesome Auth0 integration"
                  },
                  "short_description": {
                    "type": "string",
                    "defaultValue": "Awesome Auth0 integration",
                    "description": "short_description is the brief description of the integration, which is used for display purposes in cards"
                  },
                  "logo": { "type": "string" },
                  "feature_type": {
                    "type": "string",
                    "enum": [
                      "unspecified",
                      "action",
                      "social_connection",
                      "log_stream",
                      "sso_integration",
                      "sms_provider"
                    ],
                    "default": "unspecified",
                    "defaultValue": "action",
                    "description": "feature_type is the type of the integration."
                  },
                  "terms_of_use_url": { "type": "string" },
                  "privacy_policy_url": { "type": "string" },
                  "public_support_link": { "type": "string" },
                  "current_release": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The id of the associated IntegrationRelease"
                      },
                      "trigger": {
                        "type": "object",
                        "required": ["id"],
                        "additionalProperties": false,
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "An actions extensibility point.",
                            "defaultValue": "post-login",
                            "enum": [
                              "post-login",
                              "credentials-exchange",
                              "pre-user-registration",
                              "post-user-registration",
                              "post-change-password",
                              "send-phone-message",
                              "iga-approval",
                              "iga-certification",
                              "iga-fulfillment-assignment",
                              "iga-fulfillment-execution"
                            ]
                          },
                          "version": {
                            "type": "string",
                            "description": "The version of a trigger. v1, v2, etc."
                          },
                          "status": {
                            "type": "string",
                            "description": "status points to the trigger status."
                          },
                          "runtimes": {
                            "type": "array",
                            "items": { "type": "string" },
                            "description": "runtimes supported by this trigger."
                          },
                          "default_runtime": {
                            "type": "string",
                            "description": "Runtime that will be used when none is specified when creating an action."
                          },
                          "url": {
                            "x-swagger-docs": false,
                            "type": "string",
                            "description": "url refers to some documentation or reference for this trigger."
                          },
                          "compatible_triggers": {
                            "type": "array",
                            "description": "compatible_triggers informs which other trigger supports the same event and api.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "An actions extensibility point.",
                                  "defaultValue": "post-login",
                                  "enum": [
                                    "post-login",
                                    "credentials-exchange",
                                    "pre-user-registration",
                                    "post-user-registration",
                                    "post-change-password",
                                    "send-phone-message",
                                    "iga-approval",
                                    "iga-certification",
                                    "iga-fulfillment-assignment",
                                    "iga-fulfillment-execution"
                                  ]
                                },
                                "version": {
                                  "type": "string",
                                  "description": "The version of a trigger. v1, v2, etc."
                                }
                              },
                              "required": ["id", "version"]
                            }
                          }
                        }
                      },
                      "semver": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "major": {
                            "type": "integer",
                            "description": "Major is the major number of a semver",
                            "defaultValue": 1
                          },
                          "minor": {
                            "type": "integer",
                            "description": "Minior is the minior number of a semver",
                            "defaultValue": 1
                          }
                        },
                        "description": "Semver denotes the major.minor version of an integration release"
                      },
                      "required_secrets": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": ["UNSPECIFIED", "STRING"],
                              "default": "UNSPECIFIED"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the parameter."
                            },
                            "required": {
                              "type": "boolean",
                              "description": "The flag for if this parameter is required."
                            },
                            "optional": {
                              "type": "boolean",
                              "description": "The temp flag for if this parameter is required (experimental; for Labs use only)."
                            },
                            "label": {
                              "type": "string",
                              "description": "The short label for this parameter."
                            },
                            "description": {
                              "type": "string",
                              "description": "The lengthier description for this parameter."
                            },
                            "default_value": {
                              "type": "string",
                              "description": "The default value for this parameter."
                            },
                            "placeholder": {
                              "type": "string",
                              "description": "Placeholder text for this parameter."
                            },
                            "options": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                  "value": {
                                    "type": "string",
                                    "description": "The value of an option that will be used within the application."
                                  },
                                  "label": {
                                    "type": "string",
                                    "description": "The display value of an option suitable for displaying in a UI."
                                  }
                                }
                              },
                              "description": "The allowable options for this param."
                            }
                          },
                          "description": "Param are form input values, primarily utilized when specifying secrets and\nconfiguration values for actions.\n\nThese are especially important for partner integrations -- but can be\nexposed to tenant admins as well if they want to parameterize their custom\nactions."
                        },
                        "description": "required_secrets declares all the necessary secrets for an integration to\nwork."
                      },
                      "required_configuration": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": ["UNSPECIFIED", "STRING"],
                              "default": "UNSPECIFIED"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the parameter."
                            },
                            "required": {
                              "type": "boolean",
                              "description": "The flag for if this parameter is required."
                            },
                            "optional": {
                              "type": "boolean",
                              "description": "The temp flag for if this parameter is required (experimental; for Labs use only)."
                            },
                            "label": {
                              "type": "string",
                              "description": "The short label for this parameter."
                            },
                            "description": {
                              "type": "string",
                              "description": "The lengthier description for this parameter."
                            },
                            "default_value": {
                              "type": "string",
                              "description": "The default value for this parameter."
                            },
                            "placeholder": {
                              "type": "string",
                              "description": "Placeholder text for this parameter."
                            },
                            "options": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                  "value": {
                                    "type": "string",
                                    "description": "The value of an option that will be used within the application."
                                  },
                                  "label": {
                                    "type": "string",
                                    "description": "The display value of an option suitable for displaying in a UI."
                                  }
                                }
                              },
                              "description": "The allowable options for this param."
                            }
                          },
                          "description": "Param are form input values, primarily utilized when specifying secrets and\nconfiguration values for actions.\n\nThese are especially important for partner integrations -- but can be\nexposed to tenant admins as well if they want to parameterize their custom\nactions."
                        },
                        "description": "required_configuration declares all the necessary configuration fields for an integration to work."
                      }
                    }
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "defaultValue": "2021-06-21T15:47:29.072Z"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "defaultValue": "2021-06-21T15:47:29.072Z"
                  }
                },
                "description": "Integration defines a self contained functioning unit which partners\npublish. A partner may create one or many of these integrations."
              },
              "status": {
                "type": "string",
                "description": "The build status of this action.",
                "enum": [
                  "pending",
                  "building",
                  "packaged",
                  "built",
                  "retrying",
                  "failed"
                ],
                "defaultValue": "built"
              },
              "all_changes_deployed": {
                "type": "boolean",
                "description": "True if all of an Action's contents have been deployed.",
                "defaultValue": false
              },
              "built_at": {
                "type": "string",
                "format": "date-time",
                "description": "The time when this action was built successfully.",
                "defaultValue": "2021-01-01T00:00:00.000Z"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "The time when this action was created.",
                "defaultValue": "2021-01-01T00:00:00.000Z"
              },
              "updated_at": {
                "type": "string",
                "format": "date-time",
                "description": "The time when this action was updated.",
                "defaultValue": "2021-01-01T00:00:00.000Z"
              }
            }
          },
          "description": "The list of actions.",
          "defaultValue": {
            "id": "910b1053-577f-4d81-a8c8-020e7319a38a",
            "installed_integration_id": "7d2bc0c9-c0c2-433a-9f4e-86ef80270aad",
            "name": "my-action",
            "code": "module.exports = () => {}",
            "runtime": "node12",
            "supported_triggers": [{ "id": "post-login", "version": "v2" }],
            "dependencies": [{ "name": "lodash", "version": "1.0.0" }],
            "secrets": [
              { "name": "mySecret", "updated_at": "2021-01-01T00:00:00.000Z" }
            ],
            "status": "built",
            "all_changes_deployed": false,
            "created_at": "2021-01-01T00:00:00.000Z",
            "updated_at": "2021-01-01T00:00:00.000Z",
            "built_at": "2021-01-01T00:00:00.000Z"
          }
        }
      },
      "additionalProperties": false
    },
    "post_action_response": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique ID of the action.",
          "defaultValue": "910b1053-577f-4d81-a8c8-020e7319a38a"
        },
        "name": {
          "type": "string",
          "description": "The name of an action.",
          "defaultValue": "my-action"
        },
        "supported_triggers": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["id"],
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "description": "An actions extensibility point.",
                "defaultValue": "post-login",
                "enum": [
                  "post-login",
                  "credentials-exchange",
                  "pre-user-registration",
                  "post-user-registration",
                  "post-change-password",
                  "send-phone-message",
                  "iga-approval",
                  "iga-certification",
                  "iga-fulfillment-assignment",
                  "iga-fulfillment-execution"
                ]
              },
              "version": {
                "type": "string",
                "description": "The version of a trigger. v1, v2, etc."
              },
              "status": {
                "type": "string",
                "description": "status points to the trigger status."
              },
              "runtimes": {
                "type": "array",
                "items": { "type": "string" },
                "description": "runtimes supported by this trigger."
              },
              "default_runtime": {
                "type": "string",
                "description": "Runtime that will be used when none is specified when creating an action."
              },
              "url": {
                "x-swagger-docs": false,
                "type": "string",
                "description": "url refers to some documentation or reference for this trigger."
              },
              "compatible_triggers": {
                "type": "array",
                "description": "compatible_triggers informs which other trigger supports the same event and api.",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An actions extensibility point.",
                      "defaultValue": "post-login",
                      "enum": [
                        "post-login",
                        "credentials-exchange",
                        "pre-user-registration",
                        "post-user-registration",
                        "post-change-password",
                        "send-phone-message",
                        "iga-approval",
                        "iga-certification",
                        "iga-fulfillment-assignment",
                        "iga-fulfillment-execution"
                      ]
                    },
                    "version": {
                      "type": "string",
                      "description": "The version of a trigger. v1, v2, etc."
                    }
                  },
                  "required": ["id", "version"]
                }
              }
            }
          },
          "description": "The list of triggers that this action supports. At this time, an action can only target a single trigger at a time.",
          "minItems": 1,
          "maxItems": 1,
          "defaultValue": [{ "id": "post-login", "version": "v2" }]
        },
        "code": {
          "type": "string",
          "description": "The source code of the action.",
          "defaultValue": "module.exports = () => {}"
        },
        "dependencies": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string",
                "description": "name is the name of the npm module, e.g. lodash"
              },
              "version": {
                "type": "string",
                "description": "description is the version of the npm module, e.g. 4.17.1"
              },
              "registry_url": {
                "type": "string",
                "description": "registry_url is an optional value used primarily for private npm registries."
              }
            },
            "description": "Dependency is an npm module. These values are used to produce an immutable artifact, which manifests as a layer_id."
          },
          "description": "The list of third party npm modules, and their versions, that this action depends on.",
          "defaultValue": [{ "name": "lodash", "version": "1.0.0" }]
        },
        "runtime": {
          "type": "string",
          "description": "The Node runtime. For example: `node12`, defaults to `node12`",
          "defaultValue": "node12"
        },
        "secrets": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the particular secret, e.g. API_KEY.",
                "defaultValue": "mySecret"
              },
              "updated_at": {
                "type": "string",
                "description": "The time when the secret was last updated.",
                "format": "date-time",
                "defaultValue": "2021-01-01T00:00:00.000Z"
              }
            }
          },
          "description": "The list of secrets that are included in an action or a version of an action.",
          "defaultValue": [
            { "name": "mySecret", "updated_at": "2021-01-01T00:00:00.000Z" }
          ]
        },
        "deployed_version": {
          "$ref": "post_action_response_deployed_version",
          "description": "The version of the action that is currently deployed."
        },
        "installed_integration_id": {
          "type": "string",
          "description": "installed_integration_id is the fk reference to the InstalledIntegration entity.",
          "defaultValue": "7d2bc0c9-c0c2-433a-9f4e-86ef80270aad"
        },
        "integration": {
          "$ref": "post_action_response_integration",
          "description": "Integration defines a self contained functioning unit which partners\npublish. A partner may create one or many of these integrations."
        },
        "status": {
          "type": "string",
          "description": "The build status of this action.",
          "enum": [
            "pending",
            "building",
            "packaged",
            "built",
            "retrying",
            "failed"
          ],
          "defaultValue": "built"
        },
        "all_changes_deployed": {
          "type": "boolean",
          "description": "True if all of an Action's contents have been deployed.",
          "defaultValue": false
        },
        "built_at": {
          "type": "string",
          "format": "date-time",
          "description": "The time when this action was built successfully.",
          "defaultValue": "2021-01-01T00:00:00.000Z"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "The time when this action was created.",
          "defaultValue": "2021-01-01T00:00:00.000Z"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "The time when this action was updated.",
          "defaultValue": "2021-01-01T00:00:00.000Z"
        }
      }
    },
    "post_action_response_deployed_version": {
      "type": "object",
      "items": {},
      "description": "The version of the action that is currently deployed.",
      "defaultValue": {}
    },
    "post_action_response_integration": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "id is a system generated GUID. This same ID is designed to be federated in\nall the applicable localities.",
          "defaultValue": "8e9fe2d0-a2fc-4c8c-9e35-dae5afadb70b"
        },
        "catalog_id": {
          "type": "string",
          "defaultValue": "awesome-auth0-integration",
          "description": "catalog_id refers to the ID in the marketplace catalog"
        },
        "url_slug": {
          "type": "string",
          "defaultValue": "awesome-auth0-integration-slug",
          "description": "url_slug refers to the url_slug in the marketplace catalog"
        },
        "partner_id": {
          "type": "string",
          "description": "partner_id is the foreign key reference to the partner account this\nintegration belongs to.",
          "defaultValue": "b8575c12-8d9d-4b5c-b28e-671fe9d39029"
        },
        "name": {
          "type": "string",
          "description": "name is the integration name, which will be used for display purposes in\nthe marketplace.\n\nTo start we're going to make sure the display name is at least 3\ncharacters. Can adjust this easily later.",
          "defaultValue": "Example Auth0 integration"
        },
        "description": {
          "type": "string",
          "description": "description adds more text for the integration name -- also relevant for\nthe marketplace listing.",
          "defaultValue": "An awesome Auth0 integration"
        },
        "short_description": {
          "type": "string",
          "defaultValue": "Awesome Auth0 integration",
          "description": "short_description is the brief description of the integration, which is used for display purposes in cards"
        },
        "logo": { "type": "string" },
        "feature_type": {
          "type": "string",
          "enum": [
            "unspecified",
            "action",
            "social_connection",
            "log_stream",
            "sso_integration",
            "sms_provider"
          ],
          "default": "unspecified",
          "defaultValue": "action",
          "description": "feature_type is the type of the integration."
        },
        "terms_of_use_url": { "type": "string" },
        "privacy_policy_url": { "type": "string" },
        "public_support_link": { "type": "string" },
        "current_release": { "$ref": "post_action_response_current_release" },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "defaultValue": "2021-06-21T15:47:29.072Z"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "defaultValue": "2021-06-21T15:47:29.072Z"
        }
      },
      "description": "Integration defines a self contained functioning unit which partners\npublish. A partner may create one or many of these integrations."
    },
    "post_action_response_current_release": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id of the associated IntegrationRelease"
        },
        "trigger": { "$ref": "post_action_response_trigger" },
        "semver": {
          "$ref": "post_action_response_semver",
          "description": "Semver denotes the major.minor version of an integration release"
        },
        "required_secrets": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": ["UNSPECIFIED", "STRING"],
                "default": "UNSPECIFIED"
              },
              "name": {
                "type": "string",
                "description": "The name of the parameter."
              },
              "required": {
                "type": "boolean",
                "description": "The flag for if this parameter is required."
              },
              "optional": {
                "type": "boolean",
                "description": "The temp flag for if this parameter is required (experimental; for Labs use only)."
              },
              "label": {
                "type": "string",
                "description": "The short label for this parameter."
              },
              "description": {
                "type": "string",
                "description": "The lengthier description for this parameter."
              },
              "default_value": {
                "type": "string",
                "description": "The default value for this parameter."
              },
              "placeholder": {
                "type": "string",
                "description": "Placeholder text for this parameter."
              },
              "options": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "The value of an option that will be used within the application."
                    },
                    "label": {
                      "type": "string",
                      "description": "The display value of an option suitable for displaying in a UI."
                    }
                  }
                },
                "description": "The allowable options for this param."
              }
            },
            "description": "Param are form input values, primarily utilized when specifying secrets and\nconfiguration values for actions.\n\nThese are especially important for partner integrations -- but can be\nexposed to tenant admins as well if they want to parameterize their custom\nactions."
          },
          "description": "required_secrets declares all the necessary secrets for an integration to\nwork."
        },
        "required_configuration": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": ["UNSPECIFIED", "STRING"],
                "default": "UNSPECIFIED"
              },
              "name": {
                "type": "string",
                "description": "The name of the parameter."
              },
              "required": {
                "type": "boolean",
                "description": "The flag for if this parameter is required."
              },
              "optional": {
                "type": "boolean",
                "description": "The temp flag for if this parameter is required (experimental; for Labs use only)."
              },
              "label": {
                "type": "string",
                "description": "The short label for this parameter."
              },
              "description": {
                "type": "string",
                "description": "The lengthier description for this parameter."
              },
              "default_value": {
                "type": "string",
                "description": "The default value for this parameter."
              },
              "placeholder": {
                "type": "string",
                "description": "Placeholder text for this parameter."
              },
              "options": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "The value of an option that will be used within the application."
                    },
                    "label": {
                      "type": "string",
                      "description": "The display value of an option suitable for displaying in a UI."
                    }
                  }
                },
                "description": "The allowable options for this param."
              }
            },
            "description": "Param are form input values, primarily utilized when specifying secrets and\nconfiguration values for actions.\n\nThese are especially important for partner integrations -- but can be\nexposed to tenant admins as well if they want to parameterize their custom\nactions."
          },
          "description": "required_configuration declares all the necessary configuration fields for an integration to work."
        }
      }
    },
    "post_action_response_trigger": {
      "type": "object",
      "required": ["id"],
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "description": "An actions extensibility point.",
          "defaultValue": "post-login",
          "enum": [
            "post-login",
            "credentials-exchange",
            "pre-user-registration",
            "post-user-registration",
            "post-change-password",
            "send-phone-message",
            "iga-approval",
            "iga-certification",
            "iga-fulfillment-assignment",
            "iga-fulfillment-execution"
          ]
        },
        "version": {
          "type": "string",
          "description": "The version of a trigger. v1, v2, etc."
        },
        "status": {
          "type": "string",
          "description": "status points to the trigger status."
        },
        "runtimes": {
          "type": "array",
          "items": { "type": "string" },
          "description": "runtimes supported by this trigger."
        },
        "default_runtime": {
          "type": "string",
          "description": "Runtime that will be used when none is specified when creating an action."
        },
        "compatible_triggers": {
          "type": "array",
          "description": "compatible_triggers informs which other trigger supports the same event and api.",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "An actions extensibility point.",
                "defaultValue": "post-login",
                "enum": [
                  "post-login",
                  "credentials-exchange",
                  "pre-user-registration",
                  "post-user-registration",
                  "post-change-password",
                  "send-phone-message",
                  "iga-approval",
                  "iga-certification",
                  "iga-fulfillment-assignment",
                  "iga-fulfillment-execution"
                ]
              },
              "version": {
                "type": "string",
                "description": "The version of a trigger. v1, v2, etc."
              }
            },
            "required": ["id", "version"]
          }
        }
      }
    },
    "post_action_response_semver": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "major": {
          "type": "integer",
          "description": "Major is the major number of a semver",
          "defaultValue": 1
        },
        "minor": {
          "type": "integer",
          "description": "Minior is the minior number of a semver",
          "defaultValue": 1
        }
      },
      "description": "Semver denotes the major.minor version of an integration release"
    },
    "post_action_body": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of an action.",
          "defaultValue": "my-action"
        },
        "supported_triggers": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["id"],
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "description": "An actions extensibility point.",
                "defaultValue": "post-login",
                "enum": [
                  "post-login",
                  "credentials-exchange",
                  "pre-user-registration",
                  "post-user-registration",
                  "post-change-password",
                  "send-phone-message",
                  "iga-approval",
                  "iga-certification",
                  "iga-fulfillment-assignment",
                  "iga-fulfillment-execution"
                ]
              },
              "version": {
                "type": "string",
                "description": "The version of a trigger. v1, v2, etc."
              },
              "status": {
                "type": "string",
                "description": "status points to the trigger status."
              },
              "runtimes": {
                "type": "array",
                "items": { "type": "string" },
                "description": "runtimes supported by this trigger."
              },
              "default_runtime": {
                "type": "string",
                "description": "Runtime that will be used when none is specified when creating an action."
              },
              "url": {
                "x-swagger-docs": false,
                "type": "string",
                "description": "url refers to some documentation or reference for this trigger."
              },
              "compatible_triggers": {
                "type": "array",
                "description": "compatible_triggers informs which other trigger supports the same event and api.",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An actions extensibility point.",
                      "defaultValue": "post-login",
                      "enum": [
                        "post-login",
                        "credentials-exchange",
                        "pre-user-registration",
                        "post-user-registration",
                        "post-change-password",
                        "send-phone-message",
                        "iga-approval",
                        "iga-certification",
                        "iga-fulfillment-assignment",
                        "iga-fulfillment-execution"
                      ]
                    },
                    "version": {
                      "type": "string",
                      "description": "The version of a trigger. v1, v2, etc."
                    }
                  },
                  "required": ["id", "version"]
                }
              }
            }
          },
          "description": "The list of triggers that this action supports. At this time, an action can only target a single trigger at a time.",
          "minItems": 1,
          "maxItems": 1,
          "defaultValue": [{ "id": "post-login", "version": "v2" }]
        },
        "code": {
          "type": "string",
          "description": "The source code of the action.",
          "defaultValue": "module.exports = () => {}"
        },
        "dependencies": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string",
                "description": "name is the name of the npm module, e.g. lodash"
              },
              "version": {
                "type": "string",
                "description": "description is the version of the npm module, e.g. 4.17.1"
              },
              "registry_url": {
                "type": "string",
                "description": "registry_url is an optional value used primarily for private npm registries."
              }
            },
            "description": "Dependency is an npm module. These values are used to produce an immutable artifact, which manifests as a layer_id."
          },
          "description": "The list of third party npm modules, and their versions, that this action depends on.",
          "defaultValue": [{ "name": "lodash", "version": "1.0.0" }]
        },
        "runtime": {
          "type": "string",
          "description": "The Node runtime. For example: `node12`, defaults to `node12`",
          "defaultValue": "node12"
        },
        "secrets": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the particular secret, e.g. API_KEY.",
                "defaultValue": "mySecret"
              },
              "value": {
                "type": "string",
                "description": "The value of the particular secret, e.g. secret123. A secret's value can only be set upon creation. A secret's value will never be returned by the API.",
                "defaultValue": "mySecretValue"
              }
            }
          },
          "description": "The list of secrets that are included in an action or a version of an action.",
          "defaultValue": [{ "name": "mySecret", "value": "mySecretValue" }]
        }
      },
      "required": ["name", "supported_triggers"],
      "additionalProperties": false
    },
    "get_triggers_response": {
      "type": "object",
      "properties": {
        "triggers": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["id"],
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "description": "An actions extensibility point.",
                "defaultValue": "post-login",
                "enum": [
                  "post-login",
                  "credentials-exchange",
                  "pre-user-registration",
                  "post-user-registration",
                  "post-change-password",
                  "send-phone-message",
                  "iga-approval",
                  "iga-certification",
                  "iga-fulfillment-assignment",
                  "iga-fulfillment-execution"
                ]
              },
              "version": {
                "type": "string",
                "description": "The version of a trigger. v1, v2, etc."
              },
              "status": {
                "type": "string",
                "description": "status points to the trigger status."
              },
              "runtimes": {
                "type": "array",
                "items": { "type": "string" },
                "description": "runtimes supported by this trigger."
              },
              "default_runtime": {
                "type": "string",
                "description": "Runtime that will be used when none is specified when creating an action."
              },
              "url": {
                "x-swagger-docs": false,
                "type": "string",
                "description": "url refers to some documentation or reference for this trigger."
              },
              "compatible_triggers": {
                "type": "array",
                "description": "compatible_triggers informs which other trigger supports the same event and api.",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An actions extensibility point.",
                      "defaultValue": "post-login",
                      "enum": [
                        "post-login",
                        "credentials-exchange",
                        "pre-user-registration",
                        "post-user-registration",
                        "post-change-password",
                        "send-phone-message",
                        "iga-approval",
                        "iga-certification",
                        "iga-fulfillment-assignment",
                        "iga-fulfillment-execution"
                      ]
                    },
                    "version": {
                      "type": "string",
                      "description": "The version of a trigger. v1, v2, etc."
                    }
                  },
                  "required": ["id", "version"]
                }
              }
            }
          },
          "defaultValue": {
            "id": "post-login",
            "runtimes": ["node12"],
            "default_runtime": "node12",
            "version": "v2"
          }
        }
      },
      "additionalProperties": false
    },
    "get_action_response": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique ID of the action.",
          "defaultValue": "910b1053-577f-4d81-a8c8-020e7319a38a"
        },
        "name": {
          "type": "string",
          "description": "The name of an action.",
          "defaultValue": "my-action"
        },
        "supported_triggers": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["id"],
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "description": "An actions extensibility point.",
                "defaultValue": "post-login",
                "enum": [
                  "post-login",
                  "credentials-exchange",
                  "pre-user-registration",
                  "post-user-registration",
                  "post-change-password",
                  "send-phone-message",
                  "iga-approval",
                  "iga-certification",
                  "iga-fulfillment-assignment",
                  "iga-fulfillment-execution"
                ]
              },
              "version": {
                "type": "string",
                "description": "The version of a trigger. v1, v2, etc."
              },
              "status": {
                "type": "string",
                "description": "status points to the trigger status."
              },
              "runtimes": {
                "type": "array",
                "items": { "type": "string" },
                "description": "runtimes supported by this trigger."
              },
              "default_runtime": {
                "type": "string",
                "description": "Runtime that will be used when none is specified when creating an action."
              },
              "url": {
                "x-swagger-docs": false,
                "type": "string",
                "description": "url refers to some documentation or reference for this trigger."
              },
              "compatible_triggers": {
                "type": "array",
                "description": "compatible_triggers informs which other trigger supports the same event and api.",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An actions extensibility point.",
                      "defaultValue": "post-login",
                      "enum": [
                        "post-login",
                        "credentials-exchange",
                        "pre-user-registration",
                        "post-user-registration",
                        "post-change-password",
                        "send-phone-message",
                        "iga-approval",
                        "iga-certification",
                        "iga-fulfillment-assignment",
                        "iga-fulfillment-execution"
                      ]
                    },
                    "version": {
                      "type": "string",
                      "description": "The version of a trigger. v1, v2, etc."
                    }
                  },
                  "required": ["id", "version"]
                }
              }
            }
          },
          "description": "The list of triggers that this action supports. At this time, an action can only target a single trigger at a time.",
          "minItems": 1,
          "maxItems": 1,
          "defaultValue": [{ "id": "post-login", "version": "v2" }]
        },
        "code": {
          "type": "string",
          "description": "The source code of the action.",
          "defaultValue": "module.exports = () => {}"
        },
        "dependencies": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string",
                "description": "name is the name of the npm module, e.g. lodash"
              },
              "version": {
                "type": "string",
                "description": "description is the version of the npm module, e.g. 4.17.1"
              },
              "registry_url": {
                "type": "string",
                "description": "registry_url is an optional value used primarily for private npm registries."
              }
            },
            "description": "Dependency is an npm module. These values are used to produce an immutable artifact, which manifests as a layer_id."
          },
          "description": "The list of third party npm modules, and their versions, that this action depends on.",
          "defaultValue": [{ "name": "lodash", "version": "1.0.0" }]
        },
        "runtime": {
          "type": "string",
          "description": "The Node runtime. For example: `node12`, defaults to `node12`",
          "defaultValue": "node12"
        },
        "secrets": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the particular secret, e.g. API_KEY.",
                "defaultValue": "mySecret"
              },
              "updated_at": {
                "type": "string",
                "description": "The time when the secret was last updated.",
                "format": "date-time",
                "defaultValue": "2021-01-01T00:00:00.000Z"
              }
            }
          },
          "description": "The list of secrets that are included in an action or a version of an action.",
          "defaultValue": [
            { "name": "mySecret", "updated_at": "2021-01-01T00:00:00.000Z" }
          ]
        },
        "deployed_version": {
          "$ref": "get_action_response_deployed_version",
          "description": "The version of the action that is currently deployed."
        },
        "installed_integration_id": {
          "type": "string",
          "description": "installed_integration_id is the fk reference to the InstalledIntegration entity.",
          "defaultValue": "7d2bc0c9-c0c2-433a-9f4e-86ef80270aad"
        },
        "integration": {
          "$ref": "get_action_response_integration",
          "description": "Integration defines a self contained functioning unit which partners\npublish. A partner may create one or many of these integrations."
        },
        "status": {
          "type": "string",
          "description": "The build status of this action.",
          "enum": [
            "pending",
            "building",
            "packaged",
            "built",
            "retrying",
            "failed"
          ],
          "defaultValue": "built"
        },
        "all_changes_deployed": {
          "type": "boolean",
          "description": "True if all of an Action's contents have been deployed.",
          "defaultValue": false
        },
        "built_at": {
          "type": "string",
          "format": "date-time",
          "description": "The time when this action was built successfully.",
          "defaultValue": "2021-01-01T00:00:00.000Z"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "The time when this action was created.",
          "defaultValue": "2021-01-01T00:00:00.000Z"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "The time when this action was updated.",
          "defaultValue": "2021-01-01T00:00:00.000Z"
        }
      }
    },
    "get_action_response_deployed_version": {
      "type": "object",
      "items": {},
      "description": "The version of the action that is currently deployed.",
      "defaultValue": {}
    },
    "get_action_response_integration": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "id is a system generated GUID. This same ID is designed to be federated in\nall the applicable localities.",
          "defaultValue": "8e9fe2d0-a2fc-4c8c-9e35-dae5afadb70b"
        },
        "catalog_id": {
          "type": "string",
          "defaultValue": "awesome-auth0-integration",
          "description": "catalog_id refers to the ID in the marketplace catalog"
        },
        "url_slug": {
          "type": "string",
          "defaultValue": "awesome-auth0-integration-slug",
          "description": "url_slug refers to the url_slug in the marketplace catalog"
        },
        "partner_id": {
          "type": "string",
          "description": "partner_id is the foreign key reference to the partner account this\nintegration belongs to.",
          "defaultValue": "b8575c12-8d9d-4b5c-b28e-671fe9d39029"
        },
        "name": {
          "type": "string",
          "description": "name is the integration name, which will be used for display purposes in\nthe marketplace.\n\nTo start we're going to make sure the display name is at least 3\ncharacters. Can adjust this easily later.",
          "defaultValue": "Example Auth0 integration"
        },
        "description": {
          "type": "string",
          "description": "description adds more text for the integration name -- also relevant for\nthe marketplace listing.",
          "defaultValue": "An awesome Auth0 integration"
        },
        "short_description": {
          "type": "string",
          "defaultValue": "Awesome Auth0 integration",
          "description": "short_description is the brief description of the integration, which is used for display purposes in cards"
        },
        "logo": { "type": "string" },
        "feature_type": {
          "type": "string",
          "enum": [
            "unspecified",
            "action",
            "social_connection",
            "log_stream",
            "sso_integration",
            "sms_provider"
          ],
          "default": "unspecified",
          "defaultValue": "action",
          "description": "feature_type is the type of the integration."
        },
        "terms_of_use_url": { "type": "string" },
        "privacy_policy_url": { "type": "string" },
        "public_support_link": { "type": "string" },
        "current_release": { "$ref": "get_action_response_current_release" },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "defaultValue": "2021-06-21T15:47:29.072Z"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "defaultValue": "2021-06-21T15:47:29.072Z"
        }
      },
      "description": "Integration defines a self contained functioning unit which partners\npublish. A partner may create one or many of these integrations."
    },
    "get_action_response_current_release": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id of the associated IntegrationRelease"
        },
        "trigger": { "$ref": "get_action_response_trigger" },
        "semver": {
          "$ref": "get_action_response_semver",
          "description": "Semver denotes the major.minor version of an integration release"
        },
        "required_secrets": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": ["UNSPECIFIED", "STRING"],
                "default": "UNSPECIFIED"
              },
              "name": {
                "type": "string",
                "description": "The name of the parameter."
              },
              "required": {
                "type": "boolean",
                "description": "The flag for if this parameter is required."
              },
              "optional": {
                "type": "boolean",
                "description": "The temp flag for if this parameter is required (experimental; for Labs use only)."
              },
              "label": {
                "type": "string",
                "description": "The short label for this parameter."
              },
              "description": {
                "type": "string",
                "description": "The lengthier description for this parameter."
              },
              "default_value": {
                "type": "string",
                "description": "The default value for this parameter."
              },
              "placeholder": {
                "type": "string",
                "description": "Placeholder text for this parameter."
              },
              "options": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "The value of an option that will be used within the application."
                    },
                    "label": {
                      "type": "string",
                      "description": "The display value of an option suitable for displaying in a UI."
                    }
                  }
                },
                "description": "The allowable options for this param."
              }
            },
            "description": "Param are form input values, primarily utilized when specifying secrets and\nconfiguration values for actions.\n\nThese are especially important for partner integrations -- but can be\nexposed to tenant admins as well if they want to parameterize their custom\nactions."
          },
          "description": "required_secrets declares all the necessary secrets for an integration to\nwork."
        },
        "required_configuration": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": ["UNSPECIFIED", "STRING"],
                "default": "UNSPECIFIED"
              },
              "name": {
                "type": "string",
                "description": "The name of the parameter."
              },
              "required": {
                "type": "boolean",
                "description": "The flag for if this parameter is required."
              },
              "optional": {
                "type": "boolean",
                "description": "The temp flag for if this parameter is required (experimental; for Labs use only)."
              },
              "label": {
                "type": "string",
                "description": "The short label for this parameter."
              },
              "description": {
                "type": "string",
                "description": "The lengthier description for this parameter."
              },
              "default_value": {
                "type": "string",
                "description": "The default value for this parameter."
              },
              "placeholder": {
                "type": "string",
                "description": "Placeholder text for this parameter."
              },
              "options": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "The value of an option that will be used within the application."
                    },
                    "label": {
                      "type": "string",
                      "description": "The display value of an option suitable for displaying in a UI."
                    }
                  }
                },
                "description": "The allowable options for this param."
              }
            },
            "description": "Param are form input values, primarily utilized when specifying secrets and\nconfiguration values for actions.\n\nThese are especially important for partner integrations -- but can be\nexposed to tenant admins as well if they want to parameterize their custom\nactions."
          },
          "description": "required_configuration declares all the necessary configuration fields for an integration to work."
        }
      }
    },
    "get_action_response_trigger": {
      "type": "object",
      "required": ["id"],
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "description": "An actions extensibility point.",
          "defaultValue": "post-login",
          "enum": [
            "post-login",
            "credentials-exchange",
            "pre-user-registration",
            "post-user-registration",
            "post-change-password",
            "send-phone-message",
            "iga-approval",
            "iga-certification",
            "iga-fulfillment-assignment",
            "iga-fulfillment-execution"
          ]
        },
        "version": {
          "type": "string",
          "description": "The version of a trigger. v1, v2, etc."
        },
        "status": {
          "type": "string",
          "description": "status points to the trigger status."
        },
        "runtimes": {
          "type": "array",
          "items": { "type": "string" },
          "description": "runtimes supported by this trigger."
        },
        "default_runtime": {
          "type": "string",
          "description": "Runtime that will be used when none is specified when creating an action."
        },
        "compatible_triggers": {
          "type": "array",
          "description": "compatible_triggers informs which other trigger supports the same event and api.",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "An actions extensibility point.",
                "defaultValue": "post-login",
                "enum": [
                  "post-login",
                  "credentials-exchange",
                  "pre-user-registration",
                  "post-user-registration",
                  "post-change-password",
                  "send-phone-message",
                  "iga-approval",
                  "iga-certification",
                  "iga-fulfillment-assignment",
                  "iga-fulfillment-execution"
                ]
              },
              "version": {
                "type": "string",
                "description": "The version of a trigger. v1, v2, etc."
              }
            },
            "required": ["id", "version"]
          }
        }
      }
    },
    "get_action_response_semver": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "major": {
          "type": "integer",
          "description": "Major is the major number of a semver",
          "defaultValue": 1
        },
        "minor": {
          "type": "integer",
          "description": "Minior is the minior number of a semver",
          "defaultValue": 1
        }
      },
      "description": "Semver denotes the major.minor version of an integration release"
    },
    "patch_action_response": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique ID of the action.",
          "defaultValue": "910b1053-577f-4d81-a8c8-020e7319a38a"
        },
        "name": {
          "type": "string",
          "description": "The name of an action.",
          "defaultValue": "my-action"
        },
        "supported_triggers": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["id"],
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "description": "An actions extensibility point.",
                "defaultValue": "post-login",
                "enum": [
                  "post-login",
                  "credentials-exchange",
                  "pre-user-registration",
                  "post-user-registration",
                  "post-change-password",
                  "send-phone-message",
                  "iga-approval",
                  "iga-certification",
                  "iga-fulfillment-assignment",
                  "iga-fulfillment-execution"
                ]
              },
              "version": {
                "type": "string",
                "description": "The version of a trigger. v1, v2, etc."
              },
              "status": {
                "type": "string",
                "description": "status points to the trigger status."
              },
              "runtimes": {
                "type": "array",
                "items": { "type": "string" },
                "description": "runtimes supported by this trigger."
              },
              "default_runtime": {
                "type": "string",
                "description": "Runtime that will be used when none is specified when creating an action."
              },
              "url": {
                "x-swagger-docs": false,
                "type": "string",
                "description": "url refers to some documentation or reference for this trigger."
              },
              "compatible_triggers": {
                "type": "array",
                "description": "compatible_triggers informs which other trigger supports the same event and api.",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An actions extensibility point.",
                      "defaultValue": "post-login",
                      "enum": [
                        "post-login",
                        "credentials-exchange",
                        "pre-user-registration",
                        "post-user-registration",
                        "post-change-password",
                        "send-phone-message",
                        "iga-approval",
                        "iga-certification",
                        "iga-fulfillment-assignment",
                        "iga-fulfillment-execution"
                      ]
                    },
                    "version": {
                      "type": "string",
                      "description": "The version of a trigger. v1, v2, etc."
                    }
                  },
                  "required": ["id", "version"]
                }
              }
            }
          },
          "description": "The list of triggers that this action supports. At this time, an action can only target a single trigger at a time.",
          "minItems": 1,
          "maxItems": 1,
          "defaultValue": [{ "id": "post-login", "version": "v2" }]
        },
        "code": {
          "type": "string",
          "description": "The source code of the action.",
          "defaultValue": "module.exports = () => {}"
        },
        "dependencies": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string",
                "description": "name is the name of the npm module, e.g. lodash"
              },
              "version": {
                "type": "string",
                "description": "description is the version of the npm module, e.g. 4.17.1"
              },
              "registry_url": {
                "type": "string",
                "description": "registry_url is an optional value used primarily for private npm registries."
              }
            },
            "description": "Dependency is an npm module. These values are used to produce an immutable artifact, which manifests as a layer_id."
          },
          "description": "The list of third party npm modules, and their versions, that this action depends on.",
          "defaultValue": [{ "name": "lodash", "version": "1.0.0" }]
        },
        "runtime": {
          "type": "string",
          "description": "The Node runtime. For example: `node12`, defaults to `node12`",
          "defaultValue": "node12"
        },
        "secrets": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the particular secret, e.g. API_KEY.",
                "defaultValue": "mySecret"
              },
              "updated_at": {
                "type": "string",
                "description": "The time when the secret was last updated.",
                "format": "date-time",
                "defaultValue": "2021-01-01T00:00:00.000Z"
              }
            }
          },
          "description": "The list of secrets that are included in an action or a version of an action.",
          "defaultValue": [
            { "name": "mySecret", "updated_at": "2021-01-01T00:00:00.000Z" }
          ]
        },
        "deployed_version": {
          "$ref": "patch_action_response_deployed_version",
          "description": "The version of the action that is currently deployed."
        },
        "installed_integration_id": {
          "type": "string",
          "description": "installed_integration_id is the fk reference to the InstalledIntegration entity.",
          "defaultValue": "7d2bc0c9-c0c2-433a-9f4e-86ef80270aad"
        },
        "integration": {
          "$ref": "patch_action_response_integration",
          "description": "Integration defines a self contained functioning unit which partners\npublish. A partner may create one or many of these integrations."
        },
        "status": {
          "type": "string",
          "description": "The build status of this action.",
          "enum": [
            "pending",
            "building",
            "packaged",
            "built",
            "retrying",
            "failed"
          ],
          "defaultValue": "built"
        },
        "all_changes_deployed": {
          "type": "boolean",
          "description": "True if all of an Action's contents have been deployed.",
          "defaultValue": false
        },
        "built_at": {
          "type": "string",
          "format": "date-time",
          "description": "The time when this action was built successfully.",
          "defaultValue": "2021-01-01T00:00:00.000Z"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "The time when this action was created.",
          "defaultValue": "2021-01-01T00:00:00.000Z"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "The time when this action was updated.",
          "defaultValue": "2021-01-01T00:00:00.000Z"
        }
      }
    },
    "patch_action_response_deployed_version": {
      "type": "object",
      "items": {},
      "description": "The version of the action that is currently deployed.",
      "defaultValue": {}
    },
    "patch_action_response_integration": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "id is a system generated GUID. This same ID is designed to be federated in\nall the applicable localities.",
          "defaultValue": "8e9fe2d0-a2fc-4c8c-9e35-dae5afadb70b"
        },
        "catalog_id": {
          "type": "string",
          "defaultValue": "awesome-auth0-integration",
          "description": "catalog_id refers to the ID in the marketplace catalog"
        },
        "url_slug": {
          "type": "string",
          "defaultValue": "awesome-auth0-integration-slug",
          "description": "url_slug refers to the url_slug in the marketplace catalog"
        },
        "partner_id": {
          "type": "string",
          "description": "partner_id is the foreign key reference to the partner account this\nintegration belongs to.",
          "defaultValue": "b8575c12-8d9d-4b5c-b28e-671fe9d39029"
        },
        "name": {
          "type": "string",
          "description": "name is the integration name, which will be used for display purposes in\nthe marketplace.\n\nTo start we're going to make sure the display name is at least 3\ncharacters. Can adjust this easily later.",
          "defaultValue": "Example Auth0 integration"
        },
        "description": {
          "type": "string",
          "description": "description adds more text for the integration name -- also relevant for\nthe marketplace listing.",
          "defaultValue": "An awesome Auth0 integration"
        },
        "short_description": {
          "type": "string",
          "defaultValue": "Awesome Auth0 integration",
          "description": "short_description is the brief description of the integration, which is used for display purposes in cards"
        },
        "logo": { "type": "string" },
        "feature_type": {
          "type": "string",
          "enum": [
            "unspecified",
            "action",
            "social_connection",
            "log_stream",
            "sso_integration",
            "sms_provider"
          ],
          "default": "unspecified",
          "defaultValue": "action",
          "description": "feature_type is the type of the integration."
        },
        "terms_of_use_url": { "type": "string" },
        "privacy_policy_url": { "type": "string" },
        "public_support_link": { "type": "string" },
        "current_release": { "$ref": "patch_action_response_current_release" },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "defaultValue": "2021-06-21T15:47:29.072Z"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "defaultValue": "2021-06-21T15:47:29.072Z"
        }
      },
      "description": "Integration defines a self contained functioning unit which partners\npublish. A partner may create one or many of these integrations."
    },
    "patch_action_response_current_release": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id of the associated IntegrationRelease"
        },
        "trigger": { "$ref": "patch_action_response_trigger" },
        "semver": {
          "$ref": "patch_action_response_semver",
          "description": "Semver denotes the major.minor version of an integration release"
        },
        "required_secrets": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": ["UNSPECIFIED", "STRING"],
                "default": "UNSPECIFIED"
              },
              "name": {
                "type": "string",
                "description": "The name of the parameter."
              },
              "required": {
                "type": "boolean",
                "description": "The flag for if this parameter is required."
              },
              "optional": {
                "type": "boolean",
                "description": "The temp flag for if this parameter is required (experimental; for Labs use only)."
              },
              "label": {
                "type": "string",
                "description": "The short label for this parameter."
              },
              "description": {
                "type": "string",
                "description": "The lengthier description for this parameter."
              },
              "default_value": {
                "type": "string",
                "description": "The default value for this parameter."
              },
              "placeholder": {
                "type": "string",
                "description": "Placeholder text for this parameter."
              },
              "options": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "The value of an option that will be used within the application."
                    },
                    "label": {
                      "type": "string",
                      "description": "The display value of an option suitable for displaying in a UI."
                    }
                  }
                },
                "description": "The allowable options for this param."
              }
            },
            "description": "Param are form input values, primarily utilized when specifying secrets and\nconfiguration values for actions.\n\nThese are especially important for partner integrations -- but can be\nexposed to tenant admins as well if they want to parameterize their custom\nactions."
          },
          "description": "required_secrets declares all the necessary secrets for an integration to\nwork."
        },
        "required_configuration": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": ["UNSPECIFIED", "STRING"],
                "default": "UNSPECIFIED"
              },
              "name": {
                "type": "string",
                "description": "The name of the parameter."
              },
              "required": {
                "type": "boolean",
                "description": "The flag for if this parameter is required."
              },
              "optional": {
                "type": "boolean",
                "description": "The temp flag for if this parameter is required (experimental; for Labs use only)."
              },
              "label": {
                "type": "string",
                "description": "The short label for this parameter."
              },
              "description": {
                "type": "string",
                "description": "The lengthier description for this parameter."
              },
              "default_value": {
                "type": "string",
                "description": "The default value for this parameter."
              },
              "placeholder": {
                "type": "string",
                "description": "Placeholder text for this parameter."
              },
              "options": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "The value of an option that will be used within the application."
                    },
                    "label": {
                      "type": "string",
                      "description": "The display value of an option suitable for displaying in a UI."
                    }
                  }
                },
                "description": "The allowable options for this param."
              }
            },
            "description": "Param are form input values, primarily utilized when specifying secrets and\nconfiguration values for actions.\n\nThese are especially important for partner integrations -- but can be\nexposed to tenant admins as well if they want to parameterize their custom\nactions."
          },
          "description": "required_configuration declares all the necessary configuration fields for an integration to work."
        }
      }
    },
    "patch_action_response_trigger": {
      "type": "object",
      "required": ["id"],
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "description": "An actions extensibility point.",
          "defaultValue": "post-login",
          "enum": [
            "post-login",
            "credentials-exchange",
            "pre-user-registration",
            "post-user-registration",
            "post-change-password",
            "send-phone-message",
            "iga-approval",
            "iga-certification",
            "iga-fulfillment-assignment",
            "iga-fulfillment-execution"
          ]
        },
        "version": {
          "type": "string",
          "description": "The version of a trigger. v1, v2, etc."
        },
        "status": {
          "type": "string",
          "description": "status points to the trigger status."
        },
        "runtimes": {
          "type": "array",
          "items": { "type": "string" },
          "description": "runtimes supported by this trigger."
        },
        "default_runtime": {
          "type": "string",
          "description": "Runtime that will be used when none is specified when creating an action."
        },
        "compatible_triggers": {
          "type": "array",
          "description": "compatible_triggers informs which other trigger supports the same event and api.",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "An actions extensibility point.",
                "defaultValue": "post-login",
                "enum": [
                  "post-login",
                  "credentials-exchange",
                  "pre-user-registration",
                  "post-user-registration",
                  "post-change-password",
                  "send-phone-message",
                  "iga-approval",
                  "iga-certification",
                  "iga-fulfillment-assignment",
                  "iga-fulfillment-execution"
                ]
              },
              "version": {
                "type": "string",
                "description": "The version of a trigger. v1, v2, etc."
              }
            },
            "required": ["id", "version"]
          }
        }
      }
    },
    "patch_action_response_semver": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "major": {
          "type": "integer",
          "description": "Major is the major number of a semver",
          "defaultValue": 1
        },
        "minor": {
          "type": "integer",
          "description": "Minior is the minior number of a semver",
          "defaultValue": 1
        }
      },
      "description": "Semver denotes the major.minor version of an integration release"
    },
    "patch_action_body": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of an action.",
          "defaultValue": "my-action"
        },
        "supported_triggers": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["id"],
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "description": "An actions extensibility point.",
                "defaultValue": "post-login",
                "enum": [
                  "post-login",
                  "credentials-exchange",
                  "pre-user-registration",
                  "post-user-registration",
                  "post-change-password",
                  "send-phone-message",
                  "iga-approval",
                  "iga-certification",
                  "iga-fulfillment-assignment",
                  "iga-fulfillment-execution"
                ]
              },
              "version": {
                "type": "string",
                "description": "The version of a trigger. v1, v2, etc."
              },
              "status": {
                "type": "string",
                "description": "status points to the trigger status."
              },
              "runtimes": {
                "type": "array",
                "items": { "type": "string" },
                "description": "runtimes supported by this trigger."
              },
              "default_runtime": {
                "type": "string",
                "description": "Runtime that will be used when none is specified when creating an action."
              },
              "url": {
                "x-swagger-docs": false,
                "type": "string",
                "description": "url refers to some documentation or reference for this trigger."
              },
              "compatible_triggers": {
                "type": "array",
                "description": "compatible_triggers informs which other trigger supports the same event and api.",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An actions extensibility point.",
                      "defaultValue": "post-login",
                      "enum": [
                        "post-login",
                        "credentials-exchange",
                        "pre-user-registration",
                        "post-user-registration",
                        "post-change-password",
                        "send-phone-message",
                        "iga-approval",
                        "iga-certification",
                        "iga-fulfillment-assignment",
                        "iga-fulfillment-execution"
                      ]
                    },
                    "version": {
                      "type": "string",
                      "description": "The version of a trigger. v1, v2, etc."
                    }
                  },
                  "required": ["id", "version"]
                }
              }
            }
          },
          "description": "The list of triggers that this action supports. At this time, an action can only target a single trigger at a time.",
          "minItems": 1,
          "maxItems": 1,
          "defaultValue": [{ "id": "post-login", "version": "v2" }]
        },
        "code": {
          "type": "string",
          "description": "The source code of the action.",
          "defaultValue": "module.exports = () => {}"
        },
        "dependencies": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string",
                "description": "name is the name of the npm module, e.g. lodash"
              },
              "version": {
                "type": "string",
                "description": "description is the version of the npm module, e.g. 4.17.1"
              },
              "registry_url": {
                "type": "string",
                "description": "registry_url is an optional value used primarily for private npm registries."
              }
            },
            "description": "Dependency is an npm module. These values are used to produce an immutable artifact, which manifests as a layer_id."
          },
          "description": "The list of third party npm modules, and their versions, that this action depends on.",
          "defaultValue": [{ "name": "lodash", "version": "1.0.0" }]
        },
        "runtime": {
          "type": "string",
          "description": "The Node runtime. For example: `node12`, defaults to `node12`",
          "defaultValue": "node12"
        },
        "secrets": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the particular secret, e.g. API_KEY.",
                "defaultValue": "mySecret"
              },
              "value": {
                "type": "string",
                "description": "The value of the particular secret, e.g. secret123. A secret's value can only be set upon creation. A secret's value will never be returned by the API.",
                "defaultValue": "mySecretValue"
              }
            }
          },
          "description": "The list of secrets that are included in an action or a version of an action.",
          "defaultValue": [{ "name": "mySecret", "value": "mySecretValue" }]
        }
      },
      "additionalProperties": false
    },
    "get_execution_response": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "description": "ID identifies this specific execution simulation. These IDs would resemble real executions in production.",
          "defaultValue": "c5b35bb1-c67d-40bb-9b0d-700b6fe33dd9"
        },
        "trigger_id": {
          "type": "string",
          "description": "An actions extensibility point.",
          "defaultValue": "post-login",
          "enum": [
            "post-login",
            "credentials-exchange",
            "pre-user-registration",
            "post-user-registration",
            "post-change-password",
            "send-phone-message",
            "iga-approval",
            "iga-certification",
            "iga-fulfillment-assignment",
            "iga-fulfillment-execution"
          ]
        },
        "status": {
          "type": "string",
          "enum": [
            "unspecified",
            "pending",
            "final",
            "partial",
            "canceled",
            "suspended"
          ],
          "description": "The overall status of an execution.",
          "defaultValue": "final"
        },
        "results": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "action_name": {
                "type": "string",
                "description": "The name of the action that was executed.",
                "defaultValue": "my-action"
              },
              "binding_id": {
                "x-swagger-docs": false,
                "type": "string",
                "description": "binding_id identifies the binding for this particular result."
              },
              "version_id": {
                "x-swagger-docs": false,
                "type": "string",
                "description": "version_id identifies the deployed Action::Version at the time of execution."
              },
              "response": {
                "x-swagger-docs": false,
                "type": "object",
                "description": "response indicates the exact JSON response that was returned by this particular action."
              },
              "error": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "id": { "type": "string" },
                  "msg": { "type": "string" },
                  "url": { "type": "string" }
                },
                "description": "Error is a generic error with a human readable id which should be easily referenced in support tickets."
              },
              "started_at": {
                "type": "string",
                "format": "date-time",
                "description": "The time when the action was started.",
                "defaultValue": "2021-01-01T00:00:00.000Z"
              },
              "ended_at": {
                "type": "string",
                "format": "date-time",
                "description": "The time when the action finished executing.",
                "defaultValue": "2021-01-01T00:00:00.000Z"
              }
            },
            "description": "Captures the results of a single action being executed."
          },
          "defaultValue": [
            {
              "action_name": "my-action",
              "started_at": "2021-01-01T00:00:00.000Z",
              "ended_at": "2021-01-01T00:00:00.000Z"
            }
          ]
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "The time that the execution was started.",
          "defaultValue": "2021-01-01T00:00:00.000Z"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "The time that the exeution finished executing.",
          "defaultValue": "2021-01-01T00:00:00.000Z"
        }
      },
      "description": "The result of a specific execution of a trigger."
    },
    "get_action_versions_response": {
      "type": "object",
      "properties": {
        "total": {
          "type": "number",
          "description": "The total result count.",
          "defaultValue": 1
        },
        "page": {
          "type": "number",
          "description": "Page index of the results being returned. First page is 0.",
          "defaultValue": 0
        },
        "per_page": {
          "type": "number",
          "description": "Number of results per page. Paging is disabled if parameter not sent.",
          "defaultValue": 20
        },
        "versions": {
          "type": "array",
          "items": {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The unique id of an action version.",
                "defaultValue": "12a3b9e6-06e6-4a29-96bf-90c82fe79a0d"
              },
              "action_id": {
                "type": "string",
                "description": "The id of the action to which this version belongs.",
                "defaultValue": "910b1053-577f-4d81-a8c8-020e7319a38a"
              },
              "code": {
                "type": "string",
                "description": "The source code of this specific version of the action.",
                "defaultValue": "module.exports = () => {}"
              },
              "dependencies": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "name is the name of the npm module, e.g. lodash"
                    },
                    "version": {
                      "type": "string",
                      "description": "description is the version of the npm module, e.g. 4.17.1"
                    },
                    "registry_url": {
                      "type": "string",
                      "description": "registry_url is an optional value used primarily for private npm registries."
                    }
                  },
                  "description": "Dependency is an npm module. These values are used to produce an immutable artifact, which manifests as a layer_id."
                },
                "description": "The list of third party npm modules, and their versions, that this specific version depends on. ",
                "defaultValue": [{ "name": "lodash", "version": "1.0.0" }]
              },
              "deployed": {
                "type": "boolean",
                "description": "Indicates if this speciic version is the currently one deployed.",
                "defaultValue": true
              },
              "runtime": {
                "type": "string",
                "description": "The Node runtime. For example: `node12`",
                "defaultValue": "node12"
              },
              "secrets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the particular secret, e.g. API_KEY.",
                      "defaultValue": "mySecret"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "The time when the secret was last updated.",
                      "format": "date-time",
                      "defaultValue": "2021-01-01T00:00:00.000Z"
                    }
                  }
                },
                "description": "The list of secrets that are included in an action or a version of an action.",
                "defaultValue": [
                  {
                    "name": "mySecret",
                    "updated_at": "2021-01-01T00:00:00.000Z"
                  }
                ]
              },
              "status": {
                "type": "string",
                "description": "The build status of this specific version.",
                "enum": [
                  "pending",
                  "building",
                  "packaged",
                  "built",
                  "retrying",
                  "failed"
                ],
                "defaultValue": "built"
              },
              "number": {
                "type": "number",
                "description": "The index of this version in list of versions for the action.",
                "multipleOf": 1,
                "defaultValue": 1
              },
              "errors": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "id": { "type": "string" },
                    "msg": { "type": "string" },
                    "url": { "type": "string" }
                  },
                  "description": "Error is a generic error with a human readable id which should be easily referenced in support tickets."
                },
                "description": "Any errors that occurred while the version was being built."
              },
              "layer_id": {
                "x-swagger-docs": false,
                "type": "string",
                "description": "layer_id is typically a hash message digest which refers to the combination of dependencies that this particular function requires. This is system generated."
              },
              "action": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The unique ID of the action.",
                    "defaultValue": "910b1053-577f-4d81-a8c8-020e7319a38a"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of an action.",
                    "defaultValue": "my-action"
                  },
                  "supported_triggers": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": ["id"],
                      "additionalProperties": false,
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "An actions extensibility point.",
                          "defaultValue": "post-login",
                          "enum": [
                            "post-login",
                            "credentials-exchange",
                            "pre-user-registration",
                            "post-user-registration",
                            "post-change-password",
                            "send-phone-message",
                            "iga-approval",
                            "iga-certification",
                            "iga-fulfillment-assignment",
                            "iga-fulfillment-execution"
                          ]
                        },
                        "version": {
                          "type": "string",
                          "description": "The version of a trigger. v1, v2, etc."
                        },
                        "status": {
                          "type": "string",
                          "description": "status points to the trigger status."
                        },
                        "runtimes": {
                          "type": "array",
                          "items": { "type": "string" },
                          "description": "runtimes supported by this trigger."
                        },
                        "default_runtime": {
                          "type": "string",
                          "description": "Runtime that will be used when none is specified when creating an action."
                        },
                        "url": {
                          "x-swagger-docs": false,
                          "type": "string",
                          "description": "url refers to some documentation or reference for this trigger."
                        },
                        "compatible_triggers": {
                          "type": "array",
                          "description": "compatible_triggers informs which other trigger supports the same event and api.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "An actions extensibility point.",
                                "defaultValue": "post-login",
                                "enum": [
                                  "post-login",
                                  "credentials-exchange",
                                  "pre-user-registration",
                                  "post-user-registration",
                                  "post-change-password",
                                  "send-phone-message",
                                  "iga-approval",
                                  "iga-certification",
                                  "iga-fulfillment-assignment",
                                  "iga-fulfillment-execution"
                                ]
                              },
                              "version": {
                                "type": "string",
                                "description": "The version of a trigger. v1, v2, etc."
                              }
                            },
                            "required": ["id", "version"]
                          }
                        }
                      }
                    },
                    "description": "The list of triggers that this action supports. At this time, an action can only target a single trigger at a time.",
                    "minItems": 1,
                    "maxItems": 1,
                    "defaultValue": [{ "id": "post-login", "version": "v2" }]
                  },
                  "required_configuration": {
                    "x-swagger-docs": false,
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "param describes specific config / secrets required by an action.",
                      "required": ["name", "label", "type"],
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "name is analogous to the name attribute in an input form element."
                        },
                        "label": {
                          "type": "string",
                          "description": "label is analogous to what you put in the label form element."
                        },
                        "type": {
                          "type": "string",
                          "description": "type will dictate how the form element is displayed.",
                          "enum": ["string"]
                        },
                        "placeholder": {
                          "type": "string",
                          "description": "placeholder is analogous to the placeholder attribute in an input form element."
                        },
                        "description": {
                          "type": "string",
                          "description": "description provides more context for certain fields which requires more explanation."
                        },
                        "default_value": {
                          "type": "string",
                          "description": "default_value becomes the pre-filled value for a given input. Useful to provide smart defaults."
                        },
                        "optional": {
                          "type": "boolean",
                          "description": "LABS ONLY optional will determine if the param value is optional for the behavior of the action."
                        },
                        "required": {
                          "type": "boolean",
                          "description": "required will determine if the param value is required for the behavior of the action."
                        },
                        "options": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "type": "string",
                                "description": "The value of an option that will be used within the application."
                              },
                              "label": {
                                "type": "string",
                                "description": "The display value of an option suitable for displaying in a UI."
                              }
                            }
                          },
                          "description": "The allowable options for this param."
                        }
                      }
                    },
                    "description": "The configuration that must be provided by an action when it is bound to a trigger."
                  },
                  "required_secrets": {
                    "x-swagger-docs": false,
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "param describes specific config / secrets required by an action.",
                      "required": ["name", "label", "type"],
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "name is analogous to the name attribute in an input form element."
                        },
                        "label": {
                          "type": "string",
                          "description": "label is analogous to what you put in the label form element."
                        },
                        "type": {
                          "type": "string",
                          "description": "type will dictate how the form element is displayed.",
                          "enum": ["string"]
                        },
                        "placeholder": {
                          "type": "string",
                          "description": "placeholder is analogous to the placeholder attribute in an input form element."
                        },
                        "description": {
                          "type": "string",
                          "description": "description provides more context for certain fields which requires more explanation."
                        },
                        "default_value": {
                          "type": "string",
                          "description": "default_value becomes the pre-filled value for a given input. Useful to provide smart defaults."
                        },
                        "optional": {
                          "type": "boolean",
                          "description": "LABS ONLY optional will determine if the param value is optional for the behavior of the action."
                        },
                        "required": {
                          "type": "boolean",
                          "description": "required will determine if the param value is required for the behavior of the action."
                        },
                        "options": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "type": "string",
                                "description": "The value of an option that will be used within the application."
                              },
                              "label": {
                                "type": "string",
                                "description": "The display value of an option suitable for displaying in a UI."
                              }
                            }
                          },
                          "description": "The allowable options for this param."
                        }
                      }
                    },
                    "description": "The secrets that must be provided by an action when it is bound to a trigger."
                  },
                  "code": {
                    "type": "string",
                    "description": "The source code of the action.",
                    "defaultValue": "module.exports = () => {}"
                  },
                  "dependencies": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "name is the name of the npm module, e.g. lodash"
                        },
                        "version": {
                          "type": "string",
                          "description": "description is the version of the npm module, e.g. 4.17.1"
                        },
                        "registry_url": {
                          "type": "string",
                          "description": "registry_url is an optional value used primarily for private npm registries."
                        }
                      },
                      "description": "Dependency is an npm module. These values are used to produce an immutable artifact, which manifests as a layer_id."
                    },
                    "description": "The list of third party npm modules, and their versions, that this action depends on.",
                    "defaultValue": [{ "name": "lodash", "version": "1.0.0" }]
                  },
                  "runtime": {
                    "type": "string",
                    "description": "The Node runtime. For example: `node12`, defaults to `node12`",
                    "defaultValue": "node12"
                  },
                  "secrets": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of the particular secret, e.g. API_KEY.",
                          "defaultValue": "mySecret"
                        },
                        "updated_at": {
                          "type": "string",
                          "description": "The time when the secret was last updated.",
                          "format": "date-time",
                          "defaultValue": "2021-01-01T00:00:00.000Z"
                        }
                      }
                    },
                    "description": "The list of secrets that are included in an action or a version of an action.",
                    "defaultValue": [
                      {
                        "name": "mySecret",
                        "updated_at": "2021-01-01T00:00:00.000Z"
                      }
                    ]
                  },
                  "current_version": {
                    "x-swagger-docs": false,
                    "type": "object",
                    "items": {},
                    "description": "The version of the action that is currently deployed.",
                    "defaultValue": {}
                  },
                  "deployed_version": {
                    "type": "object",
                    "items": {},
                    "description": "The version of the action that is currently deployed.",
                    "defaultValue": {}
                  },
                  "installed_integration_id": {
                    "type": "string",
                    "description": "installed_integration_id is the fk reference to the InstalledIntegration entity.",
                    "defaultValue": "7d2bc0c9-c0c2-433a-9f4e-86ef80270aad"
                  },
                  "integration": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "id is a system generated GUID. This same ID is designed to be federated in\nall the applicable localities.",
                        "defaultValue": "8e9fe2d0-a2fc-4c8c-9e35-dae5afadb70b"
                      },
                      "catalog_id": {
                        "type": "string",
                        "defaultValue": "awesome-auth0-integration",
                        "description": "catalog_id refers to the ID in the marketplace catalog"
                      },
                      "url_slug": {
                        "type": "string",
                        "defaultValue": "awesome-auth0-integration-slug",
                        "description": "url_slug refers to the url_slug in the marketplace catalog"
                      },
                      "partner_id": {
                        "type": "string",
                        "description": "partner_id is the foreign key reference to the partner account this\nintegration belongs to.",
                        "defaultValue": "b8575c12-8d9d-4b5c-b28e-671fe9d39029"
                      },
                      "name": {
                        "type": "string",
                        "description": "name is the integration name, which will be used for display purposes in\nthe marketplace.\n\nTo start we're going to make sure the display name is at least 3\ncharacters. Can adjust this easily later.",
                        "defaultValue": "Example Auth0 integration"
                      },
                      "description": {
                        "type": "string",
                        "description": "description adds more text for the integration name -- also relevant for\nthe marketplace listing.",
                        "defaultValue": "An awesome Auth0 integration"
                      },
                      "short_description": {
                        "type": "string",
                        "defaultValue": "Awesome Auth0 integration",
                        "description": "short_description is the brief description of the integration, which is used for display purposes in cards"
                      },
                      "logo": { "type": "string" },
                      "feature_type": {
                        "type": "string",
                        "enum": [
                          "unspecified",
                          "action",
                          "social_connection",
                          "log_stream",
                          "sso_integration",
                          "sms_provider"
                        ],
                        "default": "unspecified",
                        "defaultValue": "action",
                        "description": "feature_type is the type of the integration."
                      },
                      "terms_of_use_url": { "type": "string" },
                      "privacy_policy_url": { "type": "string" },
                      "public_support_link": { "type": "string" },
                      "current_release": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The id of the associated IntegrationRelease"
                          },
                          "trigger": {
                            "type": "object",
                            "required": ["id"],
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "An actions extensibility point.",
                                "defaultValue": "post-login",
                                "enum": [
                                  "post-login",
                                  "credentials-exchange",
                                  "pre-user-registration",
                                  "post-user-registration",
                                  "post-change-password",
                                  "send-phone-message",
                                  "iga-approval",
                                  "iga-certification",
                                  "iga-fulfillment-assignment",
                                  "iga-fulfillment-execution"
                                ]
                              },
                              "version": {
                                "type": "string",
                                "description": "The version of a trigger. v1, v2, etc."
                              },
                              "status": {
                                "type": "string",
                                "description": "status points to the trigger status."
                              },
                              "runtimes": {
                                "type": "array",
                                "items": { "type": "string" },
                                "description": "runtimes supported by this trigger."
                              },
                              "default_runtime": {
                                "type": "string",
                                "description": "Runtime that will be used when none is specified when creating an action."
                              },
                              "url": {
                                "x-swagger-docs": false,
                                "type": "string",
                                "description": "url refers to some documentation or reference for this trigger."
                              },
                              "compatible_triggers": {
                                "type": "array",
                                "description": "compatible_triggers informs which other trigger supports the same event and api.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "An actions extensibility point.",
                                      "defaultValue": "post-login",
                                      "enum": [
                                        "post-login",
                                        "credentials-exchange",
                                        "pre-user-registration",
                                        "post-user-registration",
                                        "post-change-password",
                                        "send-phone-message",
                                        "iga-approval",
                                        "iga-certification",
                                        "iga-fulfillment-assignment",
                                        "iga-fulfillment-execution"
                                      ]
                                    },
                                    "version": {
                                      "type": "string",
                                      "description": "The version of a trigger. v1, v2, etc."
                                    }
                                  },
                                  "required": ["id", "version"]
                                }
                              }
                            }
                          },
                          "semver": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "major": {
                                "type": "integer",
                                "description": "Major is the major number of a semver",
                                "defaultValue": 1
                              },
                              "minor": {
                                "type": "integer",
                                "description": "Minior is the minior number of a semver",
                                "defaultValue": 1
                              }
                            },
                            "description": "Semver denotes the major.minor version of an integration release"
                          },
                          "required_secrets": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": ["UNSPECIFIED", "STRING"],
                                  "default": "UNSPECIFIED"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the parameter."
                                },
                                "required": {
                                  "type": "boolean",
                                  "description": "The flag for if this parameter is required."
                                },
                                "optional": {
                                  "type": "boolean",
                                  "description": "The temp flag for if this parameter is required (experimental; for Labs use only)."
                                },
                                "label": {
                                  "type": "string",
                                  "description": "The short label for this parameter."
                                },
                                "description": {
                                  "type": "string",
                                  "description": "The lengthier description for this parameter."
                                },
                                "default_value": {
                                  "type": "string",
                                  "description": "The default value for this parameter."
                                },
                                "placeholder": {
                                  "type": "string",
                                  "description": "Placeholder text for this parameter."
                                },
                                "options": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "value": {
                                        "type": "string",
                                        "description": "The value of an option that will be used within the application."
                                      },
                                      "label": {
                                        "type": "string",
                                        "description": "The display value of an option suitable for displaying in a UI."
                                      }
                                    }
                                  },
                                  "description": "The allowable options for this param."
                                }
                              },
                              "description": "Param are form input values, primarily utilized when specifying secrets and\nconfiguration values for actions.\n\nThese are especially important for partner integrations -- but can be\nexposed to tenant admins as well if they want to parameterize their custom\nactions."
                            },
                            "description": "required_secrets declares all the necessary secrets for an integration to\nwork."
                          },
                          "required_configuration": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": ["UNSPECIFIED", "STRING"],
                                  "default": "UNSPECIFIED"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the parameter."
                                },
                                "required": {
                                  "type": "boolean",
                                  "description": "The flag for if this parameter is required."
                                },
                                "optional": {
                                  "type": "boolean",
                                  "description": "The temp flag for if this parameter is required (experimental; for Labs use only)."
                                },
                                "label": {
                                  "type": "string",
                                  "description": "The short label for this parameter."
                                },
                                "description": {
                                  "type": "string",
                                  "description": "The lengthier description for this parameter."
                                },
                                "default_value": {
                                  "type": "string",
                                  "description": "The default value for this parameter."
                                },
                                "placeholder": {
                                  "type": "string",
                                  "description": "Placeholder text for this parameter."
                                },
                                "options": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "value": {
                                        "type": "string",
                                        "description": "The value of an option that will be used within the application."
                                      },
                                      "label": {
                                        "type": "string",
                                        "description": "The display value of an option suitable for displaying in a UI."
                                      }
                                    }
                                  },
                                  "description": "The allowable options for this param."
                                }
                              },
                              "description": "Param are form input values, primarily utilized when specifying secrets and\nconfiguration values for actions.\n\nThese are especially important for partner integrations -- but can be\nexposed to tenant admins as well if they want to parameterize their custom\nactions."
                            },
                            "description": "required_configuration declares all the necessary configuration fields for an integration to work."
                          }
                        }
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "defaultValue": "2021-06-21T15:47:29.072Z"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "defaultValue": "2021-06-21T15:47:29.072Z"
                      }
                    },
                    "description": "Integration defines a self contained functioning unit which partners\npublish. A partner may create one or many of these integrations."
                  },
                  "status": {
                    "type": "string",
                    "description": "The build status of this action.",
                    "enum": [
                      "pending",
                      "building",
                      "packaged",
                      "built",
                      "retrying",
                      "failed"
                    ],
                    "defaultValue": "built"
                  },
                  "all_changes_deployed": {
                    "type": "boolean",
                    "description": "True if all of an Action's contents have been deployed.",
                    "defaultValue": false
                  },
                  "built_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time when this action was built successfully.",
                    "defaultValue": "2021-01-01T00:00:00.000Z"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time when this action was created.",
                    "defaultValue": "2021-01-01T00:00:00.000Z"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time when this action was updated.",
                    "defaultValue": "2021-01-01T00:00:00.000Z"
                  }
                },
                "description": "The action to which this verison belongs."
              },
              "built_at": {
                "type": "string",
                "format": "date-time",
                "description": "The time when this version was built successfully.",
                "defaultValue": "2021-01-01T00:00:00.000Z"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "The time when this version was created.",
                "defaultValue": "2021-01-01T00:00:00.000Z"
              },
              "updated_at": {
                "type": "string",
                "format": "date-time",
                "description": "The time when a version was updated. Versions are never updated externally. Only Auth0 will update an action version as it is beiing built.",
                "defaultValue": "2021-01-01T00:00:00.000Z"
              },
              "supported_triggers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["id"],
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An actions extensibility point.",
                      "defaultValue": "post-login",
                      "enum": [
                        "post-login",
                        "credentials-exchange",
                        "pre-user-registration",
                        "post-user-registration",
                        "post-change-password",
                        "send-phone-message",
                        "iga-approval",
                        "iga-certification",
                        "iga-fulfillment-assignment",
                        "iga-fulfillment-execution"
                      ]
                    },
                    "version": {
                      "type": "string",
                      "description": "The version of a trigger. v1, v2, etc."
                    },
                    "status": {
                      "type": "string",
                      "description": "status points to the trigger status."
                    },
                    "runtimes": {
                      "type": "array",
                      "items": { "type": "string" },
                      "description": "runtimes supported by this trigger."
                    },
                    "default_runtime": {
                      "type": "string",
                      "description": "Runtime that will be used when none is specified when creating an action."
                    },
                    "url": {
                      "x-swagger-docs": false,
                      "type": "string",
                      "description": "url refers to some documentation or reference for this trigger."
                    },
                    "compatible_triggers": {
                      "type": "array",
                      "description": "compatible_triggers informs which other trigger supports the same event and api.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "An actions extensibility point.",
                            "defaultValue": "post-login",
                            "enum": [
                              "post-login",
                              "credentials-exchange",
                              "pre-user-registration",
                              "post-user-registration",
                              "post-change-password",
                              "send-phone-message",
                              "iga-approval",
                              "iga-certification",
                              "iga-fulfillment-assignment",
                              "iga-fulfillment-execution"
                            ]
                          },
                          "version": {
                            "type": "string",
                            "description": "The version of a trigger. v1, v2, etc."
                          }
                        },
                        "required": ["id", "version"]
                      }
                    }
                  }
                },
                "description": "The list of triggers that this version supports. At this time, a version can only target a single trigger at a time.",
                "minItems": 1,
                "maxItems": 1
              }
            }
          },
          "defaultValue": {
            "id": "12a3b9e6-06e6-4a29-96bf-90c82fe79a0d",
            "action_id": "910b1053-577f-4d81-a8c8-020e7319a38a",
            "code": "module.exports = () => {}",
            "runtime": "node12",
            "number": 1,
            "deployed": true,
            "dependencies": [{ "name": "lodash", "version": "1.0.0" }],
            "status": "built",
            "created_at": "2021-01-01T00:00:00.000Z",
            "updated_at": "2021-01-01T00:00:00.000Z",
            "built_at": "2021-01-01T00:00:00.000Z",
            "action": {
              "id": "910b1053-577f-4d81-a8c8-020e7319a38a",
              "installed_integration_id": "7d2bc0c9-c0c2-433a-9f4e-86ef80270aad",
              "name": "my-action",
              "code": "module.exports = () => {}",
              "runtime": "node12",
              "supported_triggers": [{ "id": "post-login", "version": "v2" }],
              "dependencies": [{ "name": "lodash", "version": "1.0.0" }],
              "secrets": [
                { "name": "mySecret", "updated_at": "2021-01-01T00:00:00.000Z" }
              ],
              "status": "built",
              "all_changes_deployed": false,
              "created_at": "2021-01-01T00:00:00.000Z",
              "updated_at": "2021-01-01T00:00:00.000Z",
              "built_at": "2021-01-01T00:00:00.000Z"
            }
          }
        }
      },
      "additionalProperties": false
    },
    "get_bindings_response": {
      "type": "object",
      "properties": {
        "total": {
          "type": "number",
          "description": "The total result count.",
          "defaultValue": 1
        },
        "page": {
          "type": "number",
          "description": "Page index of the results being returned. First page is 0.",
          "defaultValue": 0
        },
        "per_page": {
          "type": "number",
          "description": "Number of results per page.",
          "defaultValue": 20
        },
        "bindings": {
          "type": "array",
          "items": {
            "additionalProperties": false,
            "type": "object",
            "description": "Binding is the associative entity joining a trigger, and an action together.",
            "properties": {
              "id": {
                "type": "string",
                "description": "The unique ID of this binding.",
                "defaultValue": "4a881e22-0562-4178-bc91-b0f2b321dc13"
              },
              "trigger_id": {
                "type": "string",
                "description": "An actions extensibility point.",
                "defaultValue": "post-login",
                "enum": [
                  "post-login",
                  "credentials-exchange",
                  "pre-user-registration",
                  "post-user-registration",
                  "post-change-password",
                  "send-phone-message",
                  "iga-approval",
                  "iga-certification",
                  "iga-fulfillment-assignment",
                  "iga-fulfillment-execution"
                ]
              },
              "trigger_instance_id": {
                "x-swagger-docs": false,
                "description": "The identifier to which this instance of the trigger is bound."
              },
              "display_name": {
                "type": "string",
                "description": "The name of the binding.",
                "defaultValue": "my-action-1"
              },
              "metadata": {
                "x-swagger-docs": false,
                "type": "object",
                "additionalProperties": {
                  "type": "string",
                  "description": "metadata expresses connection_id, client_id, or connection_name filters for the binding."
                }
              },
              "action": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The unique ID of the action.",
                    "defaultValue": "910b1053-577f-4d81-a8c8-020e7319a38a"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of an action.",
                    "defaultValue": "my-action"
                  },
                  "supported_triggers": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": ["id"],
                      "additionalProperties": false,
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "An actions extensibility point.",
                          "defaultValue": "post-login",
                          "enum": [
                            "post-login",
                            "credentials-exchange",
                            "pre-user-registration",
                            "post-user-registration",
                            "post-change-password",
                            "send-phone-message",
                            "iga-approval",
                            "iga-certification",
                            "iga-fulfillment-assignment",
                            "iga-fulfillment-execution"
                          ]
                        },
                        "version": {
                          "type": "string",
                          "description": "The version of a trigger. v1, v2, etc."
                        },
                        "status": {
                          "type": "string",
                          "description": "status points to the trigger status."
                        },
                        "runtimes": {
                          "type": "array",
                          "items": { "type": "string" },
                          "description": "runtimes supported by this trigger."
                        },
                        "default_runtime": {
                          "type": "string",
                          "description": "Runtime that will be used when none is specified when creating an action."
                        },
                        "url": {
                          "x-swagger-docs": false,
                          "type": "string",
                          "description": "url refers to some documentation or reference for this trigger."
                        },
                        "compatible_triggers": {
                          "type": "array",
                          "description": "compatible_triggers informs which other trigger supports the same event and api.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "An actions extensibility point.",
                                "defaultValue": "post-login",
                                "enum": [
                                  "post-login",
                                  "credentials-exchange",
                                  "pre-user-registration",
                                  "post-user-registration",
                                  "post-change-password",
                                  "send-phone-message",
                                  "iga-approval",
                                  "iga-certification",
                                  "iga-fulfillment-assignment",
                                  "iga-fulfillment-execution"
                                ]
                              },
                              "version": {
                                "type": "string",
                                "description": "The version of a trigger. v1, v2, etc."
                              }
                            },
                            "required": ["id", "version"]
                          }
                        }
                      }
                    },
                    "description": "The list of triggers that this action supports. At this time, an action can only target a single trigger at a time.",
                    "minItems": 1,
                    "maxItems": 1,
                    "defaultValue": [{ "id": "post-login", "version": "v2" }]
                  },
                  "required_configuration": {
                    "x-swagger-docs": false,
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "param describes specific config / secrets required by an action.",
                      "required": ["name", "label", "type"],
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "name is analogous to the name attribute in an input form element."
                        },
                        "label": {
                          "type": "string",
                          "description": "label is analogous to what you put in the label form element."
                        },
                        "type": {
                          "type": "string",
                          "description": "type will dictate how the form element is displayed.",
                          "enum": ["string"]
                        },
                        "placeholder": {
                          "type": "string",
                          "description": "placeholder is analogous to the placeholder attribute in an input form element."
                        },
                        "description": {
                          "type": "string",
                          "description": "description provides more context for certain fields which requires more explanation."
                        },
                        "default_value": {
                          "type": "string",
                          "description": "default_value becomes the pre-filled value for a given input. Useful to provide smart defaults."
                        },
                        "optional": {
                          "type": "boolean",
                          "description": "LABS ONLY optional will determine if the param value is optional for the behavior of the action."
                        },
                        "required": {
                          "type": "boolean",
                          "description": "required will determine if the param value is required for the behavior of the action."
                        },
                        "options": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "type": "string",
                                "description": "The value of an option that will be used within the application."
                              },
                              "label": {
                                "type": "string",
                                "description": "The display value of an option suitable for displaying in a UI."
                              }
                            }
                          },
                          "description": "The allowable options for this param."
                        }
                      }
                    },
                    "description": "The configuration that must be provided by an action when it is bound to a trigger."
                  },
                  "required_secrets": {
                    "x-swagger-docs": false,
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "param describes specific config / secrets required by an action.",
                      "required": ["name", "label", "type"],
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "name is analogous to the name attribute in an input form element."
                        },
                        "label": {
                          "type": "string",
                          "description": "label is analogous to what you put in the label form element."
                        },
                        "type": {
                          "type": "string",
                          "description": "type will dictate how the form element is displayed.",
                          "enum": ["string"]
                        },
                        "placeholder": {
                          "type": "string",
                          "description": "placeholder is analogous to the placeholder attribute in an input form element."
                        },
                        "description": {
                          "type": "string",
                          "description": "description provides more context for certain fields which requires more explanation."
                        },
                        "default_value": {
                          "type": "string",
                          "description": "default_value becomes the pre-filled value for a given input. Useful to provide smart defaults."
                        },
                        "optional": {
                          "type": "boolean",
                          "description": "LABS ONLY optional will determine if the param value is optional for the behavior of the action."
                        },
                        "required": {
                          "type": "boolean",
                          "description": "required will determine if the param value is required for the behavior of the action."
                        },
                        "options": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "type": "string",
                                "description": "The value of an option that will be used within the application."
                              },
                              "label": {
                                "type": "string",
                                "description": "The display value of an option suitable for displaying in a UI."
                              }
                            }
                          },
                          "description": "The allowable options for this param."
                        }
                      }
                    },
                    "description": "The secrets that must be provided by an action when it is bound to a trigger."
                  },
                  "code": {
                    "type": "string",
                    "description": "The source code of the action.",
                    "defaultValue": "module.exports = () => {}"
                  },
                  "dependencies": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "name is the name of the npm module, e.g. lodash"
                        },
                        "version": {
                          "type": "string",
                          "description": "description is the version of the npm module, e.g. 4.17.1"
                        },
                        "registry_url": {
                          "type": "string",
                          "description": "registry_url is an optional value used primarily for private npm registries."
                        }
                      },
                      "description": "Dependency is an npm module. These values are used to produce an immutable artifact, which manifests as a layer_id."
                    },
                    "description": "The list of third party npm modules, and their versions, that this action depends on.",
                    "defaultValue": [{ "name": "lodash", "version": "1.0.0" }]
                  },
                  "runtime": {
                    "type": "string",
                    "description": "The Node runtime. For example: `node12`, defaults to `node12`",
                    "defaultValue": "node12"
                  },
                  "secrets": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of the particular secret, e.g. API_KEY.",
                          "defaultValue": "mySecret"
                        },
                        "updated_at": {
                          "type": "string",
                          "description": "The time when the secret was last updated.",
                          "format": "date-time",
                          "defaultValue": "2021-01-01T00:00:00.000Z"
                        }
                      }
                    },
                    "description": "The list of secrets that are included in an action or a version of an action.",
                    "defaultValue": [
                      {
                        "name": "mySecret",
                        "updated_at": "2021-01-01T00:00:00.000Z"
                      }
                    ]
                  },
                  "current_version": {
                    "x-swagger-docs": false,
                    "type": "object",
                    "items": {},
                    "description": "The version of the action that is currently deployed.",
                    "defaultValue": {}
                  },
                  "deployed_version": {
                    "type": "object",
                    "items": {},
                    "description": "The version of the action that is currently deployed.",
                    "defaultValue": {}
                  },
                  "installed_integration_id": {
                    "type": "string",
                    "description": "installed_integration_id is the fk reference to the InstalledIntegration entity.",
                    "defaultValue": "7d2bc0c9-c0c2-433a-9f4e-86ef80270aad"
                  },
                  "integration": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "id is a system generated GUID. This same ID is designed to be federated in\nall the applicable localities.",
                        "defaultValue": "8e9fe2d0-a2fc-4c8c-9e35-dae5afadb70b"
                      },
                      "catalog_id": {
                        "type": "string",
                        "defaultValue": "awesome-auth0-integration",
                        "description": "catalog_id refers to the ID in the marketplace catalog"
                      },
                      "url_slug": {
                        "type": "string",
                        "defaultValue": "awesome-auth0-integration-slug",
                        "description": "url_slug refers to the url_slug in the marketplace catalog"
                      },
                      "partner_id": {
                        "type": "string",
                        "description": "partner_id is the foreign key reference to the partner account this\nintegration belongs to.",
                        "defaultValue": "b8575c12-8d9d-4b5c-b28e-671fe9d39029"
                      },
                      "name": {
                        "type": "string",
                        "description": "name is the integration name, which will be used for display purposes in\nthe marketplace.\n\nTo start we're going to make sure the display name is at least 3\ncharacters. Can adjust this easily later.",
                        "defaultValue": "Example Auth0 integration"
                      },
                      "description": {
                        "type": "string",
                        "description": "description adds more text for the integration name -- also relevant for\nthe marketplace listing.",
                        "defaultValue": "An awesome Auth0 integration"
                      },
                      "short_description": {
                        "type": "string",
                        "defaultValue": "Awesome Auth0 integration",
                        "description": "short_description is the brief description of the integration, which is used for display purposes in cards"
                      },
                      "logo": { "type": "string" },
                      "feature_type": {
                        "type": "string",
                        "enum": [
                          "unspecified",
                          "action",
                          "social_connection",
                          "log_stream",
                          "sso_integration",
                          "sms_provider"
                        ],
                        "default": "unspecified",
                        "defaultValue": "action",
                        "description": "feature_type is the type of the integration."
                      },
                      "terms_of_use_url": { "type": "string" },
                      "privacy_policy_url": { "type": "string" },
                      "public_support_link": { "type": "string" },
                      "current_release": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The id of the associated IntegrationRelease"
                          },
                          "trigger": {
                            "type": "object",
                            "required": ["id"],
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "An actions extensibility point.",
                                "defaultValue": "post-login",
                                "enum": [
                                  "post-login",
                                  "credentials-exchange",
                                  "pre-user-registration",
                                  "post-user-registration",
                                  "post-change-password",
                                  "send-phone-message",
                                  "iga-approval",
                                  "iga-certification",
                                  "iga-fulfillment-assignment",
                                  "iga-fulfillment-execution"
                                ]
                              },
                              "version": {
                                "type": "string",
                                "description": "The version of a trigger. v1, v2, etc."
                              },
                              "status": {
                                "type": "string",
                                "description": "status points to the trigger status."
                              },
                              "runtimes": {
                                "type": "array",
                                "items": { "type": "string" },
                                "description": "runtimes supported by this trigger."
                              },
                              "default_runtime": {
                                "type": "string",
                                "description": "Runtime that will be used when none is specified when creating an action."
                              },
                              "url": {
                                "x-swagger-docs": false,
                                "type": "string",
                                "description": "url refers to some documentation or reference for this trigger."
                              },
                              "compatible_triggers": {
                                "type": "array",
                                "description": "compatible_triggers informs which other trigger supports the same event and api.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "An actions extensibility point.",
                                      "defaultValue": "post-login",
                                      "enum": [
                                        "post-login",
                                        "credentials-exchange",
                                        "pre-user-registration",
                                        "post-user-registration",
                                        "post-change-password",
                                        "send-phone-message",
                                        "iga-approval",
                                        "iga-certification",
                                        "iga-fulfillment-assignment",
                                        "iga-fulfillment-execution"
                                      ]
                                    },
                                    "version": {
                                      "type": "string",
                                      "description": "The version of a trigger. v1, v2, etc."
                                    }
                                  },
                                  "required": ["id", "version"]
                                }
                              }
                            }
                          },
                          "semver": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "major": {
                                "type": "integer",
                                "description": "Major is the major number of a semver",
                                "defaultValue": 1
                              },
                              "minor": {
                                "type": "integer",
                                "description": "Minior is the minior number of a semver",
                                "defaultValue": 1
                              }
                            },
                            "description": "Semver denotes the major.minor version of an integration release"
                          },
                          "required_secrets": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": ["UNSPECIFIED", "STRING"],
                                  "default": "UNSPECIFIED"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the parameter."
                                },
                                "required": {
                                  "type": "boolean",
                                  "description": "The flag for if this parameter is required."
                                },
                                "optional": {
                                  "type": "boolean",
                                  "description": "The temp flag for if this parameter is required (experimental; for Labs use only)."
                                },
                                "label": {
                                  "type": "string",
                                  "description": "The short label for this parameter."
                                },
                                "description": {
                                  "type": "string",
                                  "description": "The lengthier description for this parameter."
                                },
                                "default_value": {
                                  "type": "string",
                                  "description": "The default value for this parameter."
                                },
                                "placeholder": {
                                  "type": "string",
                                  "description": "Placeholder text for this parameter."
                                },
                                "options": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "value": {
                                        "type": "string",
                                        "description": "The value of an option that will be used within the application."
                                      },
                                      "label": {
                                        "type": "string",
                                        "description": "The display value of an option suitable for displaying in a UI."
                                      }
                                    }
                                  },
                                  "description": "The allowable options for this param."
                                }
                              },
                              "description": "Param are form input values, primarily utilized when specifying secrets and\nconfiguration values for actions.\n\nThese are especially important for partner integrations -- but can be\nexposed to tenant admins as well if they want to parameterize their custom\nactions."
                            },
                            "description": "required_secrets declares all the necessary secrets for an integration to\nwork."
                          },
                          "required_configuration": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": ["UNSPECIFIED", "STRING"],
                                  "default": "UNSPECIFIED"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the parameter."
                                },
                                "required": {
                                  "type": "boolean",
                                  "description": "The flag for if this parameter is required."
                                },
                                "optional": {
                                  "type": "boolean",
                                  "description": "The temp flag for if this parameter is required (experimental; for Labs use only)."
                                },
                                "label": {
                                  "type": "string",
                                  "description": "The short label for this parameter."
                                },
                                "description": {
                                  "type": "string",
                                  "description": "The lengthier description for this parameter."
                                },
                                "default_value": {
                                  "type": "string",
                                  "description": "The default value for this parameter."
                                },
                                "placeholder": {
                                  "type": "string",
                                  "description": "Placeholder text for this parameter."
                                },
                                "options": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "value": {
                                        "type": "string",
                                        "description": "The value of an option that will be used within the application."
                                      },
                                      "label": {
                                        "type": "string",
                                        "description": "The display value of an option suitable for displaying in a UI."
                                      }
                                    }
                                  },
                                  "description": "The allowable options for this param."
                                }
                              },
                              "description": "Param are form input values, primarily utilized when specifying secrets and\nconfiguration values for actions.\n\nThese are especially important for partner integrations -- but can be\nexposed to tenant admins as well if they want to parameterize their custom\nactions."
                            },
                            "description": "required_configuration declares all the necessary configuration fields for an integration to work."
                          }
                        }
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "defaultValue": "2021-06-21T15:47:29.072Z"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "defaultValue": "2021-06-21T15:47:29.072Z"
                      }
                    },
                    "description": "Integration defines a self contained functioning unit which partners\npublish. A partner may create one or many of these integrations."
                  },
                  "status": {
                    "type": "string",
                    "description": "The build status of this action.",
                    "enum": [
                      "pending",
                      "building",
                      "packaged",
                      "built",
                      "retrying",
                      "failed"
                    ],
                    "defaultValue": "built"
                  },
                  "all_changes_deployed": {
                    "type": "boolean",
                    "description": "True if all of an Action's contents have been deployed.",
                    "defaultValue": false
                  },
                  "built_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time when this action was built successfully.",
                    "defaultValue": "2021-01-01T00:00:00.000Z"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time when this action was created.",
                    "defaultValue": "2021-01-01T00:00:00.000Z"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time when this action was updated.",
                    "defaultValue": "2021-01-01T00:00:00.000Z"
                  }
                }
              },
              "configuration": {
                "x-swagger-docs": false,
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the particular secret, e.g. API_KEY."
                    },
                    "value": {
                      "type": "string",
                      "description": "The value of the particular secret, e.g. secret123. A secret's value can only be set upon creation. A secret's value will never be returned by the API."
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "The time when the secret was last updated.",
                      "format": "date-time"
                    }
                  }
                }
              },
              "secrets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the particular secret, e.g. API_KEY.",
                      "defaultValue": "mySecret"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "The time when the secret was last updated.",
                      "format": "date-time",
                      "defaultValue": "2021-01-01T00:00:00.000Z"
                    }
                  }
                },
                "description": "The list of secrets that are included in an action or a version of an action.",
                "defaultValue": [
                  {
                    "name": "mySecret",
                    "updated_at": "2021-01-01T00:00:00.000Z"
                  }
                ],
                "x-swagger-docs": false
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "The time when the binding was created.",
                "defaultValue": "2021-01-01T00:00:00.000Z"
              },
              "updated_at": {
                "type": "string",
                "format": "date-time",
                "description": "The time when the binding was updated.",
                "defaultValue": "2021-01-01T00:00:00.000Z"
              }
            }
          },
          "description": "The list of actions that are bound to this trigger in the order in which they will be executed.",
          "defaultValue": {
            "id": "4a881e22-0562-4178-bc91-b0f2b321dc13",
            "trigger_id": "post-login",
            "action": {
              "id": "910b1053-577f-4d81-a8c8-020e7319a38a",
              "installed_integration_id": "7d2bc0c9-c0c2-433a-9f4e-86ef80270aad",
              "name": "my-action",
              "code": "module.exports = () => {}",
              "runtime": "node12",
              "supported_triggers": [{ "id": "post-login", "version": "v2" }],
              "dependencies": [{ "name": "lodash", "version": "1.0.0" }],
              "secrets": [
                { "name": "mySecret", "updated_at": "2021-01-01T00:00:00.000Z" }
              ],
              "status": "built",
              "all_changes_deployed": false,
              "created_at": "2021-01-01T00:00:00.000Z",
              "updated_at": "2021-01-01T00:00:00.000Z",
              "built_at": "2021-01-01T00:00:00.000Z"
            },
            "created_at": "2021-01-01T00:00:00.000Z",
            "updated_at": "2021-01-01T00:00:00.000Z",
            "display_name": "my-action-1"
          }
        }
      },
      "additionalProperties": false
    },
    "patch_bindings_response": {
      "type": "object",
      "properties": {
        "bindings": {
          "type": "array",
          "items": {
            "additionalProperties": false,
            "type": "object",
            "description": "Binding is the associative entity joining a trigger, and an action together.",
            "properties": {
              "id": {
                "type": "string",
                "description": "The unique ID of this binding.",
                "defaultValue": "4a881e22-0562-4178-bc91-b0f2b321dc13"
              },
              "trigger_id": {
                "type": "string",
                "description": "An actions extensibility point.",
                "defaultValue": "post-login",
                "enum": [
                  "post-login",
                  "credentials-exchange",
                  "pre-user-registration",
                  "post-user-registration",
                  "post-change-password",
                  "send-phone-message",
                  "iga-approval",
                  "iga-certification",
                  "iga-fulfillment-assignment",
                  "iga-fulfillment-execution"
                ]
              },
              "trigger_instance_id": {
                "x-swagger-docs": false,
                "description": "The identifier to which this instance of the trigger is bound."
              },
              "display_name": {
                "type": "string",
                "description": "The name of the binding.",
                "defaultValue": "my-action-1"
              },
              "metadata": {
                "x-swagger-docs": false,
                "type": "object",
                "additionalProperties": {
                  "type": "string",
                  "description": "metadata expresses connection_id, client_id, or connection_name filters for the binding."
                }
              },
              "action": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The unique ID of the action.",
                    "defaultValue": "910b1053-577f-4d81-a8c8-020e7319a38a"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of an action.",
                    "defaultValue": "my-action"
                  },
                  "supported_triggers": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": ["id"],
                      "additionalProperties": false,
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "An actions extensibility point.",
                          "defaultValue": "post-login",
                          "enum": [
                            "post-login",
                            "credentials-exchange",
                            "pre-user-registration",
                            "post-user-registration",
                            "post-change-password",
                            "send-phone-message",
                            "iga-approval",
                            "iga-certification",
                            "iga-fulfillment-assignment",
                            "iga-fulfillment-execution"
                          ]
                        },
                        "version": {
                          "type": "string",
                          "description": "The version of a trigger. v1, v2, etc."
                        },
                        "status": {
                          "type": "string",
                          "description": "status points to the trigger status."
                        },
                        "runtimes": {
                          "type": "array",
                          "items": { "type": "string" },
                          "description": "runtimes supported by this trigger."
                        },
                        "default_runtime": {
                          "type": "string",
                          "description": "Runtime that will be used when none is specified when creating an action."
                        },
                        "url": {
                          "x-swagger-docs": false,
                          "type": "string",
                          "description": "url refers to some documentation or reference for this trigger."
                        },
                        "compatible_triggers": {
                          "type": "array",
                          "description": "compatible_triggers informs which other trigger supports the same event and api.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "An actions extensibility point.",
                                "defaultValue": "post-login",
                                "enum": [
                                  "post-login",
                                  "credentials-exchange",
                                  "pre-user-registration",
                                  "post-user-registration",
                                  "post-change-password",
                                  "send-phone-message",
                                  "iga-approval",
                                  "iga-certification",
                                  "iga-fulfillment-assignment",
                                  "iga-fulfillment-execution"
                                ]
                              },
                              "version": {
                                "type": "string",
                                "description": "The version of a trigger. v1, v2, etc."
                              }
                            },
                            "required": ["id", "version"]
                          }
                        }
                      }
                    },
                    "description": "The list of triggers that this action supports. At this time, an action can only target a single trigger at a time.",
                    "minItems": 1,
                    "maxItems": 1,
                    "defaultValue": [{ "id": "post-login", "version": "v2" }]
                  },
                  "required_configuration": {
                    "x-swagger-docs": false,
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "param describes specific config / secrets required by an action.",
                      "required": ["name", "label", "type"],
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "name is analogous to the name attribute in an input form element."
                        },
                        "label": {
                          "type": "string",
                          "description": "label is analogous to what you put in the label form element."
                        },
                        "type": {
                          "type": "string",
                          "description": "type will dictate how the form element is displayed.",
                          "enum": ["string"]
                        },
                        "placeholder": {
                          "type": "string",
                          "description": "placeholder is analogous to the placeholder attribute in an input form element."
                        },
                        "description": {
                          "type": "string",
                          "description": "description provides more context for certain fields which requires more explanation."
                        },
                        "default_value": {
                          "type": "string",
                          "description": "default_value becomes the pre-filled value for a given input. Useful to provide smart defaults."
                        },
                        "optional": {
                          "type": "boolean",
                          "description": "LABS ONLY optional will determine if the param value is optional for the behavior of the action."
                        },
                        "required": {
                          "type": "boolean",
                          "description": "required will determine if the param value is required for the behavior of the action."
                        },
                        "options": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "type": "string",
                                "description": "The value of an option that will be used within the application."
                              },
                              "label": {
                                "type": "string",
                                "description": "The display value of an option suitable for displaying in a UI."
                              }
                            }
                          },
                          "description": "The allowable options for this param."
                        }
                      }
                    },
                    "description": "The configuration that must be provided by an action when it is bound to a trigger."
                  },
                  "required_secrets": {
                    "x-swagger-docs": false,
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "param describes specific config / secrets required by an action.",
                      "required": ["name", "label", "type"],
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "name is analogous to the name attribute in an input form element."
                        },
                        "label": {
                          "type": "string",
                          "description": "label is analogous to what you put in the label form element."
                        },
                        "type": {
                          "type": "string",
                          "description": "type will dictate how the form element is displayed.",
                          "enum": ["string"]
                        },
                        "placeholder": {
                          "type": "string",
                          "description": "placeholder is analogous to the placeholder attribute in an input form element."
                        },
                        "description": {
                          "type": "string",
                          "description": "description provides more context for certain fields which requires more explanation."
                        },
                        "default_value": {
                          "type": "string",
                          "description": "default_value becomes the pre-filled value for a given input. Useful to provide smart defaults."
                        },
                        "optional": {
                          "type": "boolean",
                          "description": "LABS ONLY optional will determine if the param value is optional for the behavior of the action."
                        },
                        "required": {
                          "type": "boolean",
                          "description": "required will determine if the param value is required for the behavior of the action."
                        },
                        "options": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "type": "string",
                                "description": "The value of an option that will be used within the application."
                              },
                              "label": {
                                "type": "string",
                                "description": "The display value of an option suitable for displaying in a UI."
                              }
                            }
                          },
                          "description": "The allowable options for this param."
                        }
                      }
                    },
                    "description": "The secrets that must be provided by an action when it is bound to a trigger."
                  },
                  "code": {
                    "type": "string",
                    "description": "The source code of the action.",
                    "defaultValue": "module.exports = () => {}"
                  },
                  "dependencies": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "name is the name of the npm module, e.g. lodash"
                        },
                        "version": {
                          "type": "string",
                          "description": "description is the version of the npm module, e.g. 4.17.1"
                        },
                        "registry_url": {
                          "type": "string",
                          "description": "registry_url is an optional value used primarily for private npm registries."
                        }
                      },
                      "description": "Dependency is an npm module. These values are used to produce an immutable artifact, which manifests as a layer_id."
                    },
                    "description": "The list of third party npm modules, and their versions, that this action depends on.",
                    "defaultValue": [{ "name": "lodash", "version": "1.0.0" }]
                  },
                  "runtime": {
                    "type": "string",
                    "description": "The Node runtime. For example: `node12`, defaults to `node12`",
                    "defaultValue": "node12"
                  },
                  "secrets": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of the particular secret, e.g. API_KEY.",
                          "defaultValue": "mySecret"
                        },
                        "updated_at": {
                          "type": "string",
                          "description": "The time when the secret was last updated.",
                          "format": "date-time",
                          "defaultValue": "2021-01-01T00:00:00.000Z"
                        }
                      }
                    },
                    "description": "The list of secrets that are included in an action or a version of an action.",
                    "defaultValue": [
                      {
                        "name": "mySecret",
                        "updated_at": "2021-01-01T00:00:00.000Z"
                      }
                    ]
                  },
                  "current_version": {
                    "x-swagger-docs": false,
                    "type": "object",
                    "items": {},
                    "description": "The version of the action that is currently deployed.",
                    "defaultValue": {}
                  },
                  "deployed_version": {
                    "type": "object",
                    "items": {},
                    "description": "The version of the action that is currently deployed.",
                    "defaultValue": {}
                  },
                  "installed_integration_id": {
                    "type": "string",
                    "description": "installed_integration_id is the fk reference to the InstalledIntegration entity.",
                    "defaultValue": "7d2bc0c9-c0c2-433a-9f4e-86ef80270aad"
                  },
                  "integration": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "id is a system generated GUID. This same ID is designed to be federated in\nall the applicable localities.",
                        "defaultValue": "8e9fe2d0-a2fc-4c8c-9e35-dae5afadb70b"
                      },
                      "catalog_id": {
                        "type": "string",
                        "defaultValue": "awesome-auth0-integration",
                        "description": "catalog_id refers to the ID in the marketplace catalog"
                      },
                      "url_slug": {
                        "type": "string",
                        "defaultValue": "awesome-auth0-integration-slug",
                        "description": "url_slug refers to the url_slug in the marketplace catalog"
                      },
                      "partner_id": {
                        "type": "string",
                        "description": "partner_id is the foreign key reference to the partner account this\nintegration belongs to.",
                        "defaultValue": "b8575c12-8d9d-4b5c-b28e-671fe9d39029"
                      },
                      "name": {
                        "type": "string",
                        "description": "name is the integration name, which will be used for display purposes in\nthe marketplace.\n\nTo start we're going to make sure the display name is at least 3\ncharacters. Can adjust this easily later.",
                        "defaultValue": "Example Auth0 integration"
                      },
                      "description": {
                        "type": "string",
                        "description": "description adds more text for the integration name -- also relevant for\nthe marketplace listing.",
                        "defaultValue": "An awesome Auth0 integration"
                      },
                      "short_description": {
                        "type": "string",
                        "defaultValue": "Awesome Auth0 integration",
                        "description": "short_description is the brief description of the integration, which is used for display purposes in cards"
                      },
                      "logo": { "type": "string" },
                      "feature_type": {
                        "type": "string",
                        "enum": [
                          "unspecified",
                          "action",
                          "social_connection",
                          "log_stream",
                          "sso_integration",
                          "sms_provider"
                        ],
                        "default": "unspecified",
                        "defaultValue": "action",
                        "description": "feature_type is the type of the integration."
                      },
                      "terms_of_use_url": { "type": "string" },
                      "privacy_policy_url": { "type": "string" },
                      "public_support_link": { "type": "string" },
                      "current_release": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The id of the associated IntegrationRelease"
                          },
                          "trigger": {
                            "type": "object",
                            "required": ["id"],
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "An actions extensibility point.",
                                "defaultValue": "post-login",
                                "enum": [
                                  "post-login",
                                  "credentials-exchange",
                                  "pre-user-registration",
                                  "post-user-registration",
                                  "post-change-password",
                                  "send-phone-message",
                                  "iga-approval",
                                  "iga-certification",
                                  "iga-fulfillment-assignment",
                                  "iga-fulfillment-execution"
                                ]
                              },
                              "version": {
                                "type": "string",
                                "description": "The version of a trigger. v1, v2, etc."
                              },
                              "status": {
                                "type": "string",
                                "description": "status points to the trigger status."
                              },
                              "runtimes": {
                                "type": "array",
                                "items": { "type": "string" },
                                "description": "runtimes supported by this trigger."
                              },
                              "default_runtime": {
                                "type": "string",
                                "description": "Runtime that will be used when none is specified when creating an action."
                              },
                              "url": {
                                "x-swagger-docs": false,
                                "type": "string",
                                "description": "url refers to some documentation or reference for this trigger."
                              },
                              "compatible_triggers": {
                                "type": "array",
                                "description": "compatible_triggers informs which other trigger supports the same event and api.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "An actions extensibility point.",
                                      "defaultValue": "post-login",
                                      "enum": [
                                        "post-login",
                                        "credentials-exchange",
                                        "pre-user-registration",
                                        "post-user-registration",
                                        "post-change-password",
                                        "send-phone-message",
                                        "iga-approval",
                                        "iga-certification",
                                        "iga-fulfillment-assignment",
                                        "iga-fulfillment-execution"
                                      ]
                                    },
                                    "version": {
                                      "type": "string",
                                      "description": "The version of a trigger. v1, v2, etc."
                                    }
                                  },
                                  "required": ["id", "version"]
                                }
                              }
                            }
                          },
                          "semver": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "major": {
                                "type": "integer",
                                "description": "Major is the major number of a semver",
                                "defaultValue": 1
                              },
                              "minor": {
                                "type": "integer",
                                "description": "Minior is the minior number of a semver",
                                "defaultValue": 1
                              }
                            },
                            "description": "Semver denotes the major.minor version of an integration release"
                          },
                          "required_secrets": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": ["UNSPECIFIED", "STRING"],
                                  "default": "UNSPECIFIED"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the parameter."
                                },
                                "required": {
                                  "type": "boolean",
                                  "description": "The flag for if this parameter is required."
                                },
                                "optional": {
                                  "type": "boolean",
                                  "description": "The temp flag for if this parameter is required (experimental; for Labs use only)."
                                },
                                "label": {
                                  "type": "string",
                                  "description": "The short label for this parameter."
                                },
                                "description": {
                                  "type": "string",
                                  "description": "The lengthier description for this parameter."
                                },
                                "default_value": {
                                  "type": "string",
                                  "description": "The default value for this parameter."
                                },
                                "placeholder": {
                                  "type": "string",
                                  "description": "Placeholder text for this parameter."
                                },
                                "options": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "value": {
                                        "type": "string",
                                        "description": "The value of an option that will be used within the application."
                                      },
                                      "label": {
                                        "type": "string",
                                        "description": "The display value of an option suitable for displaying in a UI."
                                      }
                                    }
                                  },
                                  "description": "The allowable options for this param."
                                }
                              },
                              "description": "Param are form input values, primarily utilized when specifying secrets and\nconfiguration values for actions.\n\nThese are especially important for partner integrations -- but can be\nexposed to tenant admins as well if they want to parameterize their custom\nactions."
                            },
                            "description": "required_secrets declares all the necessary secrets for an integration to\nwork."
                          },
                          "required_configuration": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": ["UNSPECIFIED", "STRING"],
                                  "default": "UNSPECIFIED"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the parameter."
                                },
                                "required": {
                                  "type": "boolean",
                                  "description": "The flag for if this parameter is required."
                                },
                                "optional": {
                                  "type": "boolean",
                                  "description": "The temp flag for if this parameter is required (experimental; for Labs use only)."
                                },
                                "label": {
                                  "type": "string",
                                  "description": "The short label for this parameter."
                                },
                                "description": {
                                  "type": "string",
                                  "description": "The lengthier description for this parameter."
                                },
                                "default_value": {
                                  "type": "string",
                                  "description": "The default value for this parameter."
                                },
                                "placeholder": {
                                  "type": "string",
                                  "description": "Placeholder text for this parameter."
                                },
                                "options": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "value": {
                                        "type": "string",
                                        "description": "The value of an option that will be used within the application."
                                      },
                                      "label": {
                                        "type": "string",
                                        "description": "The display value of an option suitable for displaying in a UI."
                                      }
                                    }
                                  },
                                  "description": "The allowable options for this param."
                                }
                              },
                              "description": "Param are form input values, primarily utilized when specifying secrets and\nconfiguration values for actions.\n\nThese are especially important for partner integrations -- but can be\nexposed to tenant admins as well if they want to parameterize their custom\nactions."
                            },
                            "description": "required_configuration declares all the necessary configuration fields for an integration to work."
                          }
                        }
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "defaultValue": "2021-06-21T15:47:29.072Z"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "defaultValue": "2021-06-21T15:47:29.072Z"
                      }
                    },
                    "description": "Integration defines a self contained functioning unit which partners\npublish. A partner may create one or many of these integrations."
                  },
                  "status": {
                    "type": "string",
                    "description": "The build status of this action.",
                    "enum": [
                      "pending",
                      "building",
                      "packaged",
                      "built",
                      "retrying",
                      "failed"
                    ],
                    "defaultValue": "built"
                  },
                  "all_changes_deployed": {
                    "type": "boolean",
                    "description": "True if all of an Action's contents have been deployed.",
                    "defaultValue": false
                  },
                  "built_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time when this action was built successfully.",
                    "defaultValue": "2021-01-01T00:00:00.000Z"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time when this action was created.",
                    "defaultValue": "2021-01-01T00:00:00.000Z"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time when this action was updated.",
                    "defaultValue": "2021-01-01T00:00:00.000Z"
                  }
                }
              },
              "configuration": {
                "x-swagger-docs": false,
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the particular secret, e.g. API_KEY."
                    },
                    "value": {
                      "type": "string",
                      "description": "The value of the particular secret, e.g. secret123. A secret's value can only be set upon creation. A secret's value will never be returned by the API."
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "The time when the secret was last updated.",
                      "format": "date-time"
                    }
                  }
                }
              },
              "secrets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the particular secret, e.g. API_KEY.",
                      "defaultValue": "mySecret"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "The time when the secret was last updated.",
                      "format": "date-time",
                      "defaultValue": "2021-01-01T00:00:00.000Z"
                    }
                  }
                },
                "description": "The list of secrets that are included in an action or a version of an action.",
                "defaultValue": [
                  {
                    "name": "mySecret",
                    "updated_at": "2021-01-01T00:00:00.000Z"
                  }
                ],
                "x-swagger-docs": false
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "The time when the binding was created.",
                "defaultValue": "2021-01-01T00:00:00.000Z"
              },
              "updated_at": {
                "type": "string",
                "format": "date-time",
                "description": "The time when the binding was updated.",
                "defaultValue": "2021-01-01T00:00:00.000Z"
              }
            }
          },
          "defaultValue": [
            {
              "id": "4a881e22-0562-4178-bc91-b0f2b321dc13",
              "trigger_id": "post-login",
              "action": {
                "id": "910b1053-577f-4d81-a8c8-020e7319a38a",
                "installed_integration_id": "7d2bc0c9-c0c2-433a-9f4e-86ef80270aad",
                "name": "my-action",
                "code": "module.exports = () => {}",
                "runtime": "node12",
                "supported_triggers": [{ "id": "post-login", "version": "v2" }],
                "dependencies": [{ "name": "lodash", "version": "1.0.0" }],
                "secrets": [
                  {
                    "name": "mySecret",
                    "updated_at": "2021-01-01T00:00:00.000Z"
                  }
                ],
                "status": "built",
                "all_changes_deployed": false,
                "created_at": "2021-01-01T00:00:00.000Z",
                "updated_at": "2021-01-01T00:00:00.000Z",
                "built_at": "2021-01-01T00:00:00.000Z"
              },
              "created_at": "2021-01-01T00:00:00.000Z",
              "updated_at": "2021-01-01T00:00:00.000Z",
              "display_name": "my-action-1"
            },
            {
              "id": "cbdaf1b4-3318-4576-bdd4-1ae5304f04d1",
              "trigger_id": "post-login",
              "action": {
                "id": "a6a5a107-d2e3-45a3-8ff6-1218aa4bf8bd",
                "name": "my-action-2",
                "code": "module.exports = () => {}",
                "runtime": "node12",
                "supported_triggers": [{ "id": "post-login", "version": "v2" }],
                "dependencies": [],
                "secrets": [
                  {
                    "name": "mySecret",
                    "updated_at": "2021-01-01T00:00:00.000Z"
                  }
                ],
                "status": "built",
                "all_changes_deployed": false,
                "created_at": "2021-01-01T00:00:00.000Z",
                "updated_at": "2021-01-01T00:00:00.000Z",
                "built_at": "2021-01-01T00:00:00.000Z"
              },
              "created_at": "2021-01-01T00:00:00.000Z",
              "updated_at": "2021-01-01T00:00:00.000Z",
              "display_name": "my-action-2"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "patch_bindings_body": {
      "type": "object",
      "properties": {
        "bindings": {
          "type": "array",
          "items": {
            "type": "object",
            "oneOf": [{ "required": ["id"] }, { "required": ["ref"] }],
            "properties": {
              "id": { "x-swagger-docs": false, "type": "string" },
              "ref": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": ["binding_id", "action_id", "action_name"],
                    "description": "How the action is being referred to: `action_id` or `action_name`.",
                    "defaultValue": "action_name"
                  },
                  "value": {
                    "type": "string",
                    "description": "The id or name of an action that is being bound to a trigger.",
                    "defaultValue": "my-action"
                  }
                },
                "description": "A reference to an action. An action can be referred to by ID or by Name."
              },
              "display_name": {
                "type": "string",
                "description": "The name of the binding.",
                "defaultValue": "my-action-1"
              },
              "metadata": {
                "x-swagger-docs": false,
                "type": "object",
                "additionalProperties": {
                  "type": "string",
                  "description": "metadata expresses connection_id, client_id, or connection_name filters for the binding."
                }
              },
              "configuration": {
                "x-swagger-docs": false,
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the particular secret, e.g. API_KEY."
                    },
                    "value": {
                      "type": "string",
                      "description": "The value of the particular secret, e.g. secret123. A secret's value can only be set upon creation. A secret's value will never be returned by the API."
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "The time when the secret was last updated.",
                      "format": "date-time"
                    }
                  }
                }
              },
              "secrets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the particular secret, e.g. API_KEY.",
                      "defaultValue": "mySecret"
                    },
                    "value": {
                      "type": "string",
                      "description": "The value of the particular secret, e.g. secret123. A secret's value can only be set upon creation. A secret's value will never be returned by the API.",
                      "defaultValue": "mySecretValue"
                    }
                  }
                },
                "description": "The list of secrets that are included in an action or a version of an action.",
                "defaultValue": [
                  { "name": "mySecret", "value": "mySecretValue" }
                ]
              }
            },
            "additionalProperties": false
          },
          "description": "The actions that will be bound to this trigger. The order in which they are included will be the order in which they are executed.",
          "defaultValue": [
            {
              "ref": { "type": "action_name", "value": "my-action" },
              "display_name": "First Action"
            },
            {
              "ref": {
                "type": "action_id",
                "value": "a6a5a107-d2e3-45a3-8ff6-1218aa4bf8bd"
              },
              "display_name": "Second Action"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "get_action_version_response": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique id of an action version.",
          "defaultValue": "12a3b9e6-06e6-4a29-96bf-90c82fe79a0d"
        },
        "action_id": {
          "type": "string",
          "description": "The id of the action to which this version belongs.",
          "defaultValue": "910b1053-577f-4d81-a8c8-020e7319a38a"
        },
        "code": {
          "type": "string",
          "description": "The source code of this specific version of the action.",
          "defaultValue": "module.exports = () => {}"
        },
        "dependencies": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string",
                "description": "name is the name of the npm module, e.g. lodash"
              },
              "version": {
                "type": "string",
                "description": "description is the version of the npm module, e.g. 4.17.1"
              },
              "registry_url": {
                "type": "string",
                "description": "registry_url is an optional value used primarily for private npm registries."
              }
            },
            "description": "Dependency is an npm module. These values are used to produce an immutable artifact, which manifests as a layer_id."
          },
          "description": "The list of third party npm modules, and their versions, that this specific version depends on. ",
          "defaultValue": [{ "name": "lodash", "version": "1.0.0" }]
        },
        "deployed": {
          "type": "boolean",
          "description": "Indicates if this speciic version is the currently one deployed.",
          "defaultValue": true
        },
        "runtime": {
          "type": "string",
          "description": "The Node runtime. For example: `node12`",
          "defaultValue": "node12"
        },
        "secrets": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the particular secret, e.g. API_KEY.",
                "defaultValue": "mySecret"
              },
              "updated_at": {
                "type": "string",
                "description": "The time when the secret was last updated.",
                "format": "date-time",
                "defaultValue": "2021-01-01T00:00:00.000Z"
              }
            }
          },
          "description": "The list of secrets that are included in an action or a version of an action.",
          "defaultValue": [
            { "name": "mySecret", "updated_at": "2021-01-01T00:00:00.000Z" }
          ]
        },
        "status": {
          "type": "string",
          "description": "The build status of this specific version.",
          "enum": [
            "pending",
            "building",
            "packaged",
            "built",
            "retrying",
            "failed"
          ],
          "defaultValue": "built"
        },
        "number": {
          "type": "number",
          "description": "The index of this version in list of versions for the action.",
          "multipleOf": 1,
          "defaultValue": 1
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": { "type": "string" },
              "msg": { "type": "string" },
              "url": { "type": "string" }
            },
            "description": "Error is a generic error with a human readable id which should be easily referenced in support tickets."
          },
          "description": "Any errors that occurred while the version was being built."
        },
        "action": {
          "$ref": "get_action_version_response_action",
          "description": "The action to which this verison belongs."
        },
        "built_at": {
          "type": "string",
          "format": "date-time",
          "description": "The time when this version was built successfully.",
          "defaultValue": "2021-01-01T00:00:00.000Z"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "The time when this version was created.",
          "defaultValue": "2021-01-01T00:00:00.000Z"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "The time when a version was updated. Versions are never updated externally. Only Auth0 will update an action version as it is beiing built.",
          "defaultValue": "2021-01-01T00:00:00.000Z"
        },
        "supported_triggers": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["id"],
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "description": "An actions extensibility point.",
                "defaultValue": "post-login",
                "enum": [
                  "post-login",
                  "credentials-exchange",
                  "pre-user-registration",
                  "post-user-registration",
                  "post-change-password",
                  "send-phone-message",
                  "iga-approval",
                  "iga-certification",
                  "iga-fulfillment-assignment",
                  "iga-fulfillment-execution"
                ]
              },
              "version": {
                "type": "string",
                "description": "The version of a trigger. v1, v2, etc."
              },
              "status": {
                "type": "string",
                "description": "status points to the trigger status."
              },
              "runtimes": {
                "type": "array",
                "items": { "type": "string" },
                "description": "runtimes supported by this trigger."
              },
              "default_runtime": {
                "type": "string",
                "description": "Runtime that will be used when none is specified when creating an action."
              },
              "url": {
                "x-swagger-docs": false,
                "type": "string",
                "description": "url refers to some documentation or reference for this trigger."
              },
              "compatible_triggers": {
                "type": "array",
                "description": "compatible_triggers informs which other trigger supports the same event and api.",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An actions extensibility point.",
                      "defaultValue": "post-login",
                      "enum": [
                        "post-login",
                        "credentials-exchange",
                        "pre-user-registration",
                        "post-user-registration",
                        "post-change-password",
                        "send-phone-message",
                        "iga-approval",
                        "iga-certification",
                        "iga-fulfillment-assignment",
                        "iga-fulfillment-execution"
                      ]
                    },
                    "version": {
                      "type": "string",
                      "description": "The version of a trigger. v1, v2, etc."
                    }
                  },
                  "required": ["id", "version"]
                }
              }
            }
          },
          "description": "The list of triggers that this version supports. At this time, a version can only target a single trigger at a time.",
          "minItems": 1,
          "maxItems": 1
        }
      }
    },
    "get_action_version_response_action": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique ID of the action.",
          "defaultValue": "910b1053-577f-4d81-a8c8-020e7319a38a"
        },
        "name": {
          "type": "string",
          "description": "The name of an action.",
          "defaultValue": "my-action"
        },
        "supported_triggers": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["id"],
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "description": "An actions extensibility point.",
                "defaultValue": "post-login",
                "enum": [
                  "post-login",
                  "credentials-exchange",
                  "pre-user-registration",
                  "post-user-registration",
                  "post-change-password",
                  "send-phone-message",
                  "iga-approval",
                  "iga-certification",
                  "iga-fulfillment-assignment",
                  "iga-fulfillment-execution"
                ]
              },
              "version": {
                "type": "string",
                "description": "The version of a trigger. v1, v2, etc."
              },
              "status": {
                "type": "string",
                "description": "status points to the trigger status."
              },
              "runtimes": {
                "type": "array",
                "items": { "type": "string" },
                "description": "runtimes supported by this trigger."
              },
              "default_runtime": {
                "type": "string",
                "description": "Runtime that will be used when none is specified when creating an action."
              },
              "url": {
                "x-swagger-docs": false,
                "type": "string",
                "description": "url refers to some documentation or reference for this trigger."
              },
              "compatible_triggers": {
                "type": "array",
                "description": "compatible_triggers informs which other trigger supports the same event and api.",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An actions extensibility point.",
                      "defaultValue": "post-login",
                      "enum": [
                        "post-login",
                        "credentials-exchange",
                        "pre-user-registration",
                        "post-user-registration",
                        "post-change-password",
                        "send-phone-message",
                        "iga-approval",
                        "iga-certification",
                        "iga-fulfillment-assignment",
                        "iga-fulfillment-execution"
                      ]
                    },
                    "version": {
                      "type": "string",
                      "description": "The version of a trigger. v1, v2, etc."
                    }
                  },
                  "required": ["id", "version"]
                }
              }
            }
          },
          "description": "The list of triggers that this action supports. At this time, an action can only target a single trigger at a time.",
          "minItems": 1,
          "maxItems": 1,
          "defaultValue": [{ "id": "post-login", "version": "v2" }]
        },
        "code": {
          "type": "string",
          "description": "The source code of the action.",
          "defaultValue": "module.exports = () => {}"
        },
        "dependencies": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string",
                "description": "name is the name of the npm module, e.g. lodash"
              },
              "version": {
                "type": "string",
                "description": "description is the version of the npm module, e.g. 4.17.1"
              },
              "registry_url": {
                "type": "string",
                "description": "registry_url is an optional value used primarily for private npm registries."
              }
            },
            "description": "Dependency is an npm module. These values are used to produce an immutable artifact, which manifests as a layer_id."
          },
          "description": "The list of third party npm modules, and their versions, that this action depends on.",
          "defaultValue": [{ "name": "lodash", "version": "1.0.0" }]
        },
        "runtime": {
          "type": "string",
          "description": "The Node runtime. For example: `node12`, defaults to `node12`",
          "defaultValue": "node12"
        },
        "secrets": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the particular secret, e.g. API_KEY.",
                "defaultValue": "mySecret"
              },
              "updated_at": {
                "type": "string",
                "description": "The time when the secret was last updated.",
                "format": "date-time",
                "defaultValue": "2021-01-01T00:00:00.000Z"
              }
            }
          },
          "description": "The list of secrets that are included in an action or a version of an action.",
          "defaultValue": [
            { "name": "mySecret", "updated_at": "2021-01-01T00:00:00.000Z" }
          ]
        },
        "deployed_version": {
          "$ref": "get_action_version_response_deployed_version",
          "description": "The version of the action that is currently deployed."
        },
        "installed_integration_id": {
          "type": "string",
          "description": "installed_integration_id is the fk reference to the InstalledIntegration entity.",
          "defaultValue": "7d2bc0c9-c0c2-433a-9f4e-86ef80270aad"
        },
        "integration": {
          "$ref": "get_action_version_response_integration",
          "description": "Integration defines a self contained functioning unit which partners\npublish. A partner may create one or many of these integrations."
        },
        "status": {
          "type": "string",
          "description": "The build status of this action.",
          "enum": [
            "pending",
            "building",
            "packaged",
            "built",
            "retrying",
            "failed"
          ],
          "defaultValue": "built"
        },
        "all_changes_deployed": {
          "type": "boolean",
          "description": "True if all of an Action's contents have been deployed.",
          "defaultValue": false
        },
        "built_at": {
          "type": "string",
          "format": "date-time",
          "description": "The time when this action was built successfully.",
          "defaultValue": "2021-01-01T00:00:00.000Z"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "The time when this action was created.",
          "defaultValue": "2021-01-01T00:00:00.000Z"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "The time when this action was updated.",
          "defaultValue": "2021-01-01T00:00:00.000Z"
        }
      },
      "description": "The action to which this verison belongs."
    },
    "get_action_version_response_deployed_version": {
      "type": "object",
      "items": {},
      "description": "The version of the action that is currently deployed.",
      "defaultValue": {}
    },
    "get_action_version_response_integration": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "id is a system generated GUID. This same ID is designed to be federated in\nall the applicable localities.",
          "defaultValue": "8e9fe2d0-a2fc-4c8c-9e35-dae5afadb70b"
        },
        "catalog_id": {
          "type": "string",
          "defaultValue": "awesome-auth0-integration",
          "description": "catalog_id refers to the ID in the marketplace catalog"
        },
        "url_slug": {
          "type": "string",
          "defaultValue": "awesome-auth0-integration-slug",
          "description": "url_slug refers to the url_slug in the marketplace catalog"
        },
        "partner_id": {
          "type": "string",
          "description": "partner_id is the foreign key reference to the partner account this\nintegration belongs to.",
          "defaultValue": "b8575c12-8d9d-4b5c-b28e-671fe9d39029"
        },
        "name": {
          "type": "string",
          "description": "name is the integration name, which will be used for display purposes in\nthe marketplace.\n\nTo start we're going to make sure the display name is at least 3\ncharacters. Can adjust this easily later.",
          "defaultValue": "Example Auth0 integration"
        },
        "description": {
          "type": "string",
          "description": "description adds more text for the integration name -- also relevant for\nthe marketplace listing.",
          "defaultValue": "An awesome Auth0 integration"
        },
        "short_description": {
          "type": "string",
          "defaultValue": "Awesome Auth0 integration",
          "description": "short_description is the brief description of the integration, which is used for display purposes in cards"
        },
        "logo": { "type": "string" },
        "feature_type": {
          "type": "string",
          "enum": [
            "unspecified",
            "action",
            "social_connection",
            "log_stream",
            "sso_integration",
            "sms_provider"
          ],
          "default": "unspecified",
          "defaultValue": "action",
          "description": "feature_type is the type of the integration."
        },
        "terms_of_use_url": { "type": "string" },
        "privacy_policy_url": { "type": "string" },
        "public_support_link": { "type": "string" },
        "current_release": {
          "$ref": "get_action_version_response_current_release"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "defaultValue": "2021-06-21T15:47:29.072Z"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "defaultValue": "2021-06-21T15:47:29.072Z"
        }
      },
      "description": "Integration defines a self contained functioning unit which partners\npublish. A partner may create one or many of these integrations."
    },
    "get_action_version_response_current_release": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id of the associated IntegrationRelease"
        },
        "trigger": { "$ref": "get_action_version_response_trigger" },
        "semver": {
          "$ref": "get_action_version_response_semver",
          "description": "Semver denotes the major.minor version of an integration release"
        },
        "required_secrets": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": ["UNSPECIFIED", "STRING"],
                "default": "UNSPECIFIED"
              },
              "name": {
                "type": "string",
                "description": "The name of the parameter."
              },
              "required": {
                "type": "boolean",
                "description": "The flag for if this parameter is required."
              },
              "optional": {
                "type": "boolean",
                "description": "The temp flag for if this parameter is required (experimental; for Labs use only)."
              },
              "label": {
                "type": "string",
                "description": "The short label for this parameter."
              },
              "description": {
                "type": "string",
                "description": "The lengthier description for this parameter."
              },
              "default_value": {
                "type": "string",
                "description": "The default value for this parameter."
              },
              "placeholder": {
                "type": "string",
                "description": "Placeholder text for this parameter."
              },
              "options": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "The value of an option that will be used within the application."
                    },
                    "label": {
                      "type": "string",
                      "description": "The display value of an option suitable for displaying in a UI."
                    }
                  }
                },
                "description": "The allowable options for this param."
              }
            },
            "description": "Param are form input values, primarily utilized when specifying secrets and\nconfiguration values for actions.\n\nThese are especially important for partner integrations -- but can be\nexposed to tenant admins as well if they want to parameterize their custom\nactions."
          },
          "description": "required_secrets declares all the necessary secrets for an integration to\nwork."
        },
        "required_configuration": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": ["UNSPECIFIED", "STRING"],
                "default": "UNSPECIFIED"
              },
              "name": {
                "type": "string",
                "description": "The name of the parameter."
              },
              "required": {
                "type": "boolean",
                "description": "The flag for if this parameter is required."
              },
              "optional": {
                "type": "boolean",
                "description": "The temp flag for if this parameter is required (experimental; for Labs use only)."
              },
              "label": {
                "type": "string",
                "description": "The short label for this parameter."
              },
              "description": {
                "type": "string",
                "description": "The lengthier description for this parameter."
              },
              "default_value": {
                "type": "string",
                "description": "The default value for this parameter."
              },
              "placeholder": {
                "type": "string",
                "description": "Placeholder text for this parameter."
              },
              "options": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "The value of an option that will be used within the application."
                    },
                    "label": {
                      "type": "string",
                      "description": "The display value of an option suitable for displaying in a UI."
                    }
                  }
                },
                "description": "The allowable options for this param."
              }
            },
            "description": "Param are form input values, primarily utilized when specifying secrets and\nconfiguration values for actions.\n\nThese are especially important for partner integrations -- but can be\nexposed to tenant admins as well if they want to parameterize their custom\nactions."
          },
          "description": "required_configuration declares all the necessary configuration fields for an integration to work."
        }
      }
    },
    "get_action_version_response_trigger": {
      "type": "object",
      "required": ["id"],
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "description": "An actions extensibility point.",
          "defaultValue": "post-login",
          "enum": [
            "post-login",
            "credentials-exchange",
            "pre-user-registration",
            "post-user-registration",
            "post-change-password",
            "send-phone-message",
            "iga-approval",
            "iga-certification",
            "iga-fulfillment-assignment",
            "iga-fulfillment-execution"
          ]
        },
        "version": {
          "type": "string",
          "description": "The version of a trigger. v1, v2, etc."
        },
        "status": {
          "type": "string",
          "description": "status points to the trigger status."
        },
        "runtimes": {
          "type": "array",
          "items": { "type": "string" },
          "description": "runtimes supported by this trigger."
        },
        "default_runtime": {
          "type": "string",
          "description": "Runtime that will be used when none is specified when creating an action."
        },
        "compatible_triggers": {
          "type": "array",
          "description": "compatible_triggers informs which other trigger supports the same event and api.",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "An actions extensibility point.",
                "defaultValue": "post-login",
                "enum": [
                  "post-login",
                  "credentials-exchange",
                  "pre-user-registration",
                  "post-user-registration",
                  "post-change-password",
                  "send-phone-message",
                  "iga-approval",
                  "iga-certification",
                  "iga-fulfillment-assignment",
                  "iga-fulfillment-execution"
                ]
              },
              "version": {
                "type": "string",
                "description": "The version of a trigger. v1, v2, etc."
              }
            },
            "required": ["id", "version"]
          }
        }
      }
    },
    "get_action_version_response_semver": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "major": {
          "type": "integer",
          "description": "Major is the major number of a semver",
          "defaultValue": 1
        },
        "minor": {
          "type": "integer",
          "description": "Minior is the minior number of a semver",
          "defaultValue": 1
        }
      },
      "description": "Semver denotes the major.minor version of an integration release"
    },
    "post_test_action_response": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "payload": {
          "$ref": "post_test_action_response_payload",
          "description": "The resulting payload after an action was executed."
        }
      }
    },
    "post_test_action_response_payload": {
      "type": "object",
      "description": "The resulting payload after an action was executed."
    },
    "post_test_action_body": {
      "type": "object",
      "additionalProperties": false,
      "required": ["payload"],
      "properties": {
        "payload": {
          "$ref": "post_test_action_body_payload",
          "description": "The payload for the action."
        }
      }
    },
    "post_test_action_body_payload": {
      "type": "object",
      "description": "The payload for the action."
    },
    "post_deploy_action_response": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique id of an action version.",
          "defaultValue": "12a3b9e6-06e6-4a29-96bf-90c82fe79a0d"
        },
        "action_id": {
          "type": "string",
          "description": "The id of the action to which this version belongs.",
          "defaultValue": "910b1053-577f-4d81-a8c8-020e7319a38a"
        },
        "code": {
          "type": "string",
          "description": "The source code of this specific version of the action.",
          "defaultValue": "module.exports = () => {}"
        },
        "dependencies": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string",
                "description": "name is the name of the npm module, e.g. lodash"
              },
              "version": {
                "type": "string",
                "description": "description is the version of the npm module, e.g. 4.17.1"
              },
              "registry_url": {
                "type": "string",
                "description": "registry_url is an optional value used primarily for private npm registries."
              }
            },
            "description": "Dependency is an npm module. These values are used to produce an immutable artifact, which manifests as a layer_id."
          },
          "description": "The list of third party npm modules, and their versions, that this specific version depends on. ",
          "defaultValue": [{ "name": "lodash", "version": "1.0.0" }]
        },
        "deployed": {
          "type": "boolean",
          "description": "Indicates if this speciic version is the currently one deployed.",
          "defaultValue": true
        },
        "runtime": {
          "type": "string",
          "description": "The Node runtime. For example: `node12`",
          "defaultValue": "node12"
        },
        "secrets": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the particular secret, e.g. API_KEY.",
                "defaultValue": "mySecret"
              },
              "updated_at": {
                "type": "string",
                "description": "The time when the secret was last updated.",
                "format": "date-time",
                "defaultValue": "2021-01-01T00:00:00.000Z"
              }
            }
          },
          "description": "The list of secrets that are included in an action or a version of an action.",
          "defaultValue": [
            { "name": "mySecret", "updated_at": "2021-01-01T00:00:00.000Z" }
          ]
        },
        "status": {
          "type": "string",
          "description": "The build status of this specific version.",
          "enum": [
            "pending",
            "building",
            "packaged",
            "built",
            "retrying",
            "failed"
          ],
          "defaultValue": "built"
        },
        "number": {
          "type": "number",
          "description": "The index of this version in list of versions for the action.",
          "multipleOf": 1,
          "defaultValue": 1
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": { "type": "string" },
              "msg": { "type": "string" },
              "url": { "type": "string" }
            },
            "description": "Error is a generic error with a human readable id which should be easily referenced in support tickets."
          },
          "description": "Any errors that occurred while the version was being built."
        },
        "action": {
          "$ref": "post_deploy_action_response_action",
          "description": "The action to which this verison belongs."
        },
        "built_at": {
          "type": "string",
          "format": "date-time",
          "description": "The time when this version was built successfully.",
          "defaultValue": "2021-01-01T00:00:00.000Z"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "The time when this version was created.",
          "defaultValue": "2021-01-01T00:00:00.000Z"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "The time when a version was updated. Versions are never updated externally. Only Auth0 will update an action version as it is beiing built.",
          "defaultValue": "2021-01-01T00:00:00.000Z"
        },
        "supported_triggers": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["id"],
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "description": "An actions extensibility point.",
                "defaultValue": "post-login",
                "enum": [
                  "post-login",
                  "credentials-exchange",
                  "pre-user-registration",
                  "post-user-registration",
                  "post-change-password",
                  "send-phone-message",
                  "iga-approval",
                  "iga-certification",
                  "iga-fulfillment-assignment",
                  "iga-fulfillment-execution"
                ]
              },
              "version": {
                "type": "string",
                "description": "The version of a trigger. v1, v2, etc."
              },
              "status": {
                "type": "string",
                "description": "status points to the trigger status."
              },
              "runtimes": {
                "type": "array",
                "items": { "type": "string" },
                "description": "runtimes supported by this trigger."
              },
              "default_runtime": {
                "type": "string",
                "description": "Runtime that will be used when none is specified when creating an action."
              },
              "url": {
                "x-swagger-docs": false,
                "type": "string",
                "description": "url refers to some documentation or reference for this trigger."
              },
              "compatible_triggers": {
                "type": "array",
                "description": "compatible_triggers informs which other trigger supports the same event and api.",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An actions extensibility point.",
                      "defaultValue": "post-login",
                      "enum": [
                        "post-login",
                        "credentials-exchange",
                        "pre-user-registration",
                        "post-user-registration",
                        "post-change-password",
                        "send-phone-message",
                        "iga-approval",
                        "iga-certification",
                        "iga-fulfillment-assignment",
                        "iga-fulfillment-execution"
                      ]
                    },
                    "version": {
                      "type": "string",
                      "description": "The version of a trigger. v1, v2, etc."
                    }
                  },
                  "required": ["id", "version"]
                }
              }
            }
          },
          "description": "The list of triggers that this version supports. At this time, a version can only target a single trigger at a time.",
          "minItems": 1,
          "maxItems": 1
        }
      }
    },
    "post_deploy_action_response_action": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique ID of the action.",
          "defaultValue": "910b1053-577f-4d81-a8c8-020e7319a38a"
        },
        "name": {
          "type": "string",
          "description": "The name of an action.",
          "defaultValue": "my-action"
        },
        "supported_triggers": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["id"],
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "description": "An actions extensibility point.",
                "defaultValue": "post-login",
                "enum": [
                  "post-login",
                  "credentials-exchange",
                  "pre-user-registration",
                  "post-user-registration",
                  "post-change-password",
                  "send-phone-message",
                  "iga-approval",
                  "iga-certification",
                  "iga-fulfillment-assignment",
                  "iga-fulfillment-execution"
                ]
              },
              "version": {
                "type": "string",
                "description": "The version of a trigger. v1, v2, etc."
              },
              "status": {
                "type": "string",
                "description": "status points to the trigger status."
              },
              "runtimes": {
                "type": "array",
                "items": { "type": "string" },
                "description": "runtimes supported by this trigger."
              },
              "default_runtime": {
                "type": "string",
                "description": "Runtime that will be used when none is specified when creating an action."
              },
              "url": {
                "x-swagger-docs": false,
                "type": "string",
                "description": "url refers to some documentation or reference for this trigger."
              },
              "compatible_triggers": {
                "type": "array",
                "description": "compatible_triggers informs which other trigger supports the same event and api.",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An actions extensibility point.",
                      "defaultValue": "post-login",
                      "enum": [
                        "post-login",
                        "credentials-exchange",
                        "pre-user-registration",
                        "post-user-registration",
                        "post-change-password",
                        "send-phone-message",
                        "iga-approval",
                        "iga-certification",
                        "iga-fulfillment-assignment",
                        "iga-fulfillment-execution"
                      ]
                    },
                    "version": {
                      "type": "string",
                      "description": "The version of a trigger. v1, v2, etc."
                    }
                  },
                  "required": ["id", "version"]
                }
              }
            }
          },
          "description": "The list of triggers that this action supports. At this time, an action can only target a single trigger at a time.",
          "minItems": 1,
          "maxItems": 1,
          "defaultValue": [{ "id": "post-login", "version": "v2" }]
        },
        "code": {
          "type": "string",
          "description": "The source code of the action.",
          "defaultValue": "module.exports = () => {}"
        },
        "dependencies": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string",
                "description": "name is the name of the npm module, e.g. lodash"
              },
              "version": {
                "type": "string",
                "description": "description is the version of the npm module, e.g. 4.17.1"
              },
              "registry_url": {
                "type": "string",
                "description": "registry_url is an optional value used primarily for private npm registries."
              }
            },
            "description": "Dependency is an npm module. These values are used to produce an immutable artifact, which manifests as a layer_id."
          },
          "description": "The list of third party npm modules, and their versions, that this action depends on.",
          "defaultValue": [{ "name": "lodash", "version": "1.0.0" }]
        },
        "runtime": {
          "type": "string",
          "description": "The Node runtime. For example: `node12`, defaults to `node12`",
          "defaultValue": "node12"
        },
        "secrets": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the particular secret, e.g. API_KEY.",
                "defaultValue": "mySecret"
              },
              "updated_at": {
                "type": "string",
                "description": "The time when the secret was last updated.",
                "format": "date-time",
                "defaultValue": "2021-01-01T00:00:00.000Z"
              }
            }
          },
          "description": "The list of secrets that are included in an action or a version of an action.",
          "defaultValue": [
            { "name": "mySecret", "updated_at": "2021-01-01T00:00:00.000Z" }
          ]
        },
        "deployed_version": {
          "$ref": "post_deploy_action_response_deployed_version",
          "description": "The version of the action that is currently deployed."
        },
        "installed_integration_id": {
          "type": "string",
          "description": "installed_integration_id is the fk reference to the InstalledIntegration entity.",
          "defaultValue": "7d2bc0c9-c0c2-433a-9f4e-86ef80270aad"
        },
        "integration": {
          "$ref": "post_deploy_action_response_integration",
          "description": "Integration defines a self contained functioning unit which partners\npublish. A partner may create one or many of these integrations."
        },
        "status": {
          "type": "string",
          "description": "The build status of this action.",
          "enum": [
            "pending",
            "building",
            "packaged",
            "built",
            "retrying",
            "failed"
          ],
          "defaultValue": "built"
        },
        "all_changes_deployed": {
          "type": "boolean",
          "description": "True if all of an Action's contents have been deployed.",
          "defaultValue": false
        },
        "built_at": {
          "type": "string",
          "format": "date-time",
          "description": "The time when this action was built successfully.",
          "defaultValue": "2021-01-01T00:00:00.000Z"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "The time when this action was created.",
          "defaultValue": "2021-01-01T00:00:00.000Z"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "The time when this action was updated.",
          "defaultValue": "2021-01-01T00:00:00.000Z"
        }
      },
      "description": "The action to which this verison belongs."
    },
    "post_deploy_action_response_deployed_version": {
      "type": "object",
      "items": {},
      "description": "The version of the action that is currently deployed.",
      "defaultValue": {}
    },
    "post_deploy_action_response_integration": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "id is a system generated GUID. This same ID is designed to be federated in\nall the applicable localities.",
          "defaultValue": "8e9fe2d0-a2fc-4c8c-9e35-dae5afadb70b"
        },
        "catalog_id": {
          "type": "string",
          "defaultValue": "awesome-auth0-integration",
          "description": "catalog_id refers to the ID in the marketplace catalog"
        },
        "url_slug": {
          "type": "string",
          "defaultValue": "awesome-auth0-integration-slug",
          "description": "url_slug refers to the url_slug in the marketplace catalog"
        },
        "partner_id": {
          "type": "string",
          "description": "partner_id is the foreign key reference to the partner account this\nintegration belongs to.",
          "defaultValue": "b8575c12-8d9d-4b5c-b28e-671fe9d39029"
        },
        "name": {
          "type": "string",
          "description": "name is the integration name, which will be used for display purposes in\nthe marketplace.\n\nTo start we're going to make sure the display name is at least 3\ncharacters. Can adjust this easily later.",
          "defaultValue": "Example Auth0 integration"
        },
        "description": {
          "type": "string",
          "description": "description adds more text for the integration name -- also relevant for\nthe marketplace listing.",
          "defaultValue": "An awesome Auth0 integration"
        },
        "short_description": {
          "type": "string",
          "defaultValue": "Awesome Auth0 integration",
          "description": "short_description is the brief description of the integration, which is used for display purposes in cards"
        },
        "logo": { "type": "string" },
        "feature_type": {
          "type": "string",
          "enum": [
            "unspecified",
            "action",
            "social_connection",
            "log_stream",
            "sso_integration",
            "sms_provider"
          ],
          "default": "unspecified",
          "defaultValue": "action",
          "description": "feature_type is the type of the integration."
        },
        "terms_of_use_url": { "type": "string" },
        "privacy_policy_url": { "type": "string" },
        "public_support_link": { "type": "string" },
        "current_release": {
          "$ref": "post_deploy_action_response_current_release"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "defaultValue": "2021-06-21T15:47:29.072Z"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "defaultValue": "2021-06-21T15:47:29.072Z"
        }
      },
      "description": "Integration defines a self contained functioning unit which partners\npublish. A partner may create one or many of these integrations."
    },
    "post_deploy_action_response_current_release": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id of the associated IntegrationRelease"
        },
        "trigger": { "$ref": "post_deploy_action_response_trigger" },
        "semver": {
          "$ref": "post_deploy_action_response_semver",
          "description": "Semver denotes the major.minor version of an integration release"
        },
        "required_secrets": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": ["UNSPECIFIED", "STRING"],
                "default": "UNSPECIFIED"
              },
              "name": {
                "type": "string",
                "description": "The name of the parameter."
              },
              "required": {
                "type": "boolean",
                "description": "The flag for if this parameter is required."
              },
              "optional": {
                "type": "boolean",
                "description": "The temp flag for if this parameter is required (experimental; for Labs use only)."
              },
              "label": {
                "type": "string",
                "description": "The short label for this parameter."
              },
              "description": {
                "type": "string",
                "description": "The lengthier description for this parameter."
              },
              "default_value": {
                "type": "string",
                "description": "The default value for this parameter."
              },
              "placeholder": {
                "type": "string",
                "description": "Placeholder text for this parameter."
              },
              "options": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "The value of an option that will be used within the application."
                    },
                    "label": {
                      "type": "string",
                      "description": "The display value of an option suitable for displaying in a UI."
                    }
                  }
                },
                "description": "The allowable options for this param."
              }
            },
            "description": "Param are form input values, primarily utilized when specifying secrets and\nconfiguration values for actions.\n\nThese are especially important for partner integrations -- but can be\nexposed to tenant admins as well if they want to parameterize their custom\nactions."
          },
          "description": "required_secrets declares all the necessary secrets for an integration to\nwork."
        },
        "required_configuration": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": ["UNSPECIFIED", "STRING"],
                "default": "UNSPECIFIED"
              },
              "name": {
                "type": "string",
                "description": "The name of the parameter."
              },
              "required": {
                "type": "boolean",
                "description": "The flag for if this parameter is required."
              },
              "optional": {
                "type": "boolean",
                "description": "The temp flag for if this parameter is required (experimental; for Labs use only)."
              },
              "label": {
                "type": "string",
                "description": "The short label for this parameter."
              },
              "description": {
                "type": "string",
                "description": "The lengthier description for this parameter."
              },
              "default_value": {
                "type": "string",
                "description": "The default value for this parameter."
              },
              "placeholder": {
                "type": "string",
                "description": "Placeholder text for this parameter."
              },
              "options": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "The value of an option that will be used within the application."
                    },
                    "label": {
                      "type": "string",
                      "description": "The display value of an option suitable for displaying in a UI."
                    }
                  }
                },
                "description": "The allowable options for this param."
              }
            },
            "description": "Param are form input values, primarily utilized when specifying secrets and\nconfiguration values for actions.\n\nThese are especially important for partner integrations -- but can be\nexposed to tenant admins as well if they want to parameterize their custom\nactions."
          },
          "description": "required_configuration declares all the necessary configuration fields for an integration to work."
        }
      }
    },
    "post_deploy_action_response_trigger": {
      "type": "object",
      "required": ["id"],
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "description": "An actions extensibility point.",
          "defaultValue": "post-login",
          "enum": [
            "post-login",
            "credentials-exchange",
            "pre-user-registration",
            "post-user-registration",
            "post-change-password",
            "send-phone-message",
            "iga-approval",
            "iga-certification",
            "iga-fulfillment-assignment",
            "iga-fulfillment-execution"
          ]
        },
        "version": {
          "type": "string",
          "description": "The version of a trigger. v1, v2, etc."
        },
        "status": {
          "type": "string",
          "description": "status points to the trigger status."
        },
        "runtimes": {
          "type": "array",
          "items": { "type": "string" },
          "description": "runtimes supported by this trigger."
        },
        "default_runtime": {
          "type": "string",
          "description": "Runtime that will be used when none is specified when creating an action."
        },
        "compatible_triggers": {
          "type": "array",
          "description": "compatible_triggers informs which other trigger supports the same event and api.",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "An actions extensibility point.",
                "defaultValue": "post-login",
                "enum": [
                  "post-login",
                  "credentials-exchange",
                  "pre-user-registration",
                  "post-user-registration",
                  "post-change-password",
                  "send-phone-message",
                  "iga-approval",
                  "iga-certification",
                  "iga-fulfillment-assignment",
                  "iga-fulfillment-execution"
                ]
              },
              "version": {
                "type": "string",
                "description": "The version of a trigger. v1, v2, etc."
              }
            },
            "required": ["id", "version"]
          }
        }
      }
    },
    "post_deploy_action_response_semver": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "major": {
          "type": "integer",
          "description": "Major is the major number of a semver",
          "defaultValue": 1
        },
        "minor": {
          "type": "integer",
          "description": "Minior is the minior number of a semver",
          "defaultValue": 1
        }
      },
      "description": "Semver denotes the major.minor version of an integration release"
    },
    "post_deploy_draft_version_response": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique id of an action version.",
          "defaultValue": "12a3b9e6-06e6-4a29-96bf-90c82fe79a0d"
        },
        "action_id": {
          "type": "string",
          "description": "The id of the action to which this version belongs.",
          "defaultValue": "910b1053-577f-4d81-a8c8-020e7319a38a"
        },
        "code": {
          "type": "string",
          "description": "The source code of this specific version of the action.",
          "defaultValue": "module.exports = () => {}"
        },
        "dependencies": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string",
                "description": "name is the name of the npm module, e.g. lodash"
              },
              "version": {
                "type": "string",
                "description": "description is the version of the npm module, e.g. 4.17.1"
              },
              "registry_url": {
                "type": "string",
                "description": "registry_url is an optional value used primarily for private npm registries."
              }
            },
            "description": "Dependency is an npm module. These values are used to produce an immutable artifact, which manifests as a layer_id."
          },
          "description": "The list of third party npm modules, and their versions, that this specific version depends on. ",
          "defaultValue": [{ "name": "lodash", "version": "1.0.0" }]
        },
        "deployed": {
          "type": "boolean",
          "description": "Indicates if this speciic version is the currently one deployed.",
          "defaultValue": true
        },
        "runtime": {
          "type": "string",
          "description": "The Node runtime. For example: `node12`",
          "defaultValue": "node12"
        },
        "secrets": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the particular secret, e.g. API_KEY.",
                "defaultValue": "mySecret"
              },
              "updated_at": {
                "type": "string",
                "description": "The time when the secret was last updated.",
                "format": "date-time",
                "defaultValue": "2021-01-01T00:00:00.000Z"
              }
            }
          },
          "description": "The list of secrets that are included in an action or a version of an action.",
          "defaultValue": [
            { "name": "mySecret", "updated_at": "2021-01-01T00:00:00.000Z" }
          ]
        },
        "status": {
          "type": "string",
          "description": "The build status of this specific version.",
          "enum": [
            "pending",
            "building",
            "packaged",
            "built",
            "retrying",
            "failed"
          ],
          "defaultValue": "built"
        },
        "number": {
          "type": "number",
          "description": "The index of this version in list of versions for the action.",
          "multipleOf": 1,
          "defaultValue": 1
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": { "type": "string" },
              "msg": { "type": "string" },
              "url": { "type": "string" }
            },
            "description": "Error is a generic error with a human readable id which should be easily referenced in support tickets."
          },
          "description": "Any errors that occurred while the version was being built."
        },
        "action": {
          "$ref": "post_deploy_draft_version_response_action",
          "description": "The action to which this verison belongs."
        },
        "built_at": {
          "type": "string",
          "format": "date-time",
          "description": "The time when this version was built successfully.",
          "defaultValue": "2021-01-01T00:00:00.000Z"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "The time when this version was created.",
          "defaultValue": "2021-01-01T00:00:00.000Z"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "The time when a version was updated. Versions are never updated externally. Only Auth0 will update an action version as it is beiing built.",
          "defaultValue": "2021-01-01T00:00:00.000Z"
        },
        "supported_triggers": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["id"],
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "description": "An actions extensibility point.",
                "defaultValue": "post-login",
                "enum": [
                  "post-login",
                  "credentials-exchange",
                  "pre-user-registration",
                  "post-user-registration",
                  "post-change-password",
                  "send-phone-message",
                  "iga-approval",
                  "iga-certification",
                  "iga-fulfillment-assignment",
                  "iga-fulfillment-execution"
                ]
              },
              "version": {
                "type": "string",
                "description": "The version of a trigger. v1, v2, etc."
              },
              "status": {
                "type": "string",
                "description": "status points to the trigger status."
              },
              "runtimes": {
                "type": "array",
                "items": { "type": "string" },
                "description": "runtimes supported by this trigger."
              },
              "default_runtime": {
                "type": "string",
                "description": "Runtime that will be used when none is specified when creating an action."
              },
              "url": {
                "x-swagger-docs": false,
                "type": "string",
                "description": "url refers to some documentation or reference for this trigger."
              },
              "compatible_triggers": {
                "type": "array",
                "description": "compatible_triggers informs which other trigger supports the same event and api.",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An actions extensibility point.",
                      "defaultValue": "post-login",
                      "enum": [
                        "post-login",
                        "credentials-exchange",
                        "pre-user-registration",
                        "post-user-registration",
                        "post-change-password",
                        "send-phone-message",
                        "iga-approval",
                        "iga-certification",
                        "iga-fulfillment-assignment",
                        "iga-fulfillment-execution"
                      ]
                    },
                    "version": {
                      "type": "string",
                      "description": "The version of a trigger. v1, v2, etc."
                    }
                  },
                  "required": ["id", "version"]
                }
              }
            }
          },
          "description": "The list of triggers that this version supports. At this time, a version can only target a single trigger at a time.",
          "minItems": 1,
          "maxItems": 1
        }
      }
    },
    "post_deploy_draft_version_response_action": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique ID of the action.",
          "defaultValue": "910b1053-577f-4d81-a8c8-020e7319a38a"
        },
        "name": {
          "type": "string",
          "description": "The name of an action.",
          "defaultValue": "my-action"
        },
        "supported_triggers": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["id"],
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "description": "An actions extensibility point.",
                "defaultValue": "post-login",
                "enum": [
                  "post-login",
                  "credentials-exchange",
                  "pre-user-registration",
                  "post-user-registration",
                  "post-change-password",
                  "send-phone-message",
                  "iga-approval",
                  "iga-certification",
                  "iga-fulfillment-assignment",
                  "iga-fulfillment-execution"
                ]
              },
              "version": {
                "type": "string",
                "description": "The version of a trigger. v1, v2, etc."
              },
              "status": {
                "type": "string",
                "description": "status points to the trigger status."
              },
              "runtimes": {
                "type": "array",
                "items": { "type": "string" },
                "description": "runtimes supported by this trigger."
              },
              "default_runtime": {
                "type": "string",
                "description": "Runtime that will be used when none is specified when creating an action."
              },
              "url": {
                "x-swagger-docs": false,
                "type": "string",
                "description": "url refers to some documentation or reference for this trigger."
              },
              "compatible_triggers": {
                "type": "array",
                "description": "compatible_triggers informs which other trigger supports the same event and api.",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An actions extensibility point.",
                      "defaultValue": "post-login",
                      "enum": [
                        "post-login",
                        "credentials-exchange",
                        "pre-user-registration",
                        "post-user-registration",
                        "post-change-password",
                        "send-phone-message",
                        "iga-approval",
                        "iga-certification",
                        "iga-fulfillment-assignment",
                        "iga-fulfillment-execution"
                      ]
                    },
                    "version": {
                      "type": "string",
                      "description": "The version of a trigger. v1, v2, etc."
                    }
                  },
                  "required": ["id", "version"]
                }
              }
            }
          },
          "description": "The list of triggers that this action supports. At this time, an action can only target a single trigger at a time.",
          "minItems": 1,
          "maxItems": 1,
          "defaultValue": [{ "id": "post-login", "version": "v2" }]
        },
        "code": {
          "type": "string",
          "description": "The source code of the action.",
          "defaultValue": "module.exports = () => {}"
        },
        "dependencies": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string",
                "description": "name is the name of the npm module, e.g. lodash"
              },
              "version": {
                "type": "string",
                "description": "description is the version of the npm module, e.g. 4.17.1"
              },
              "registry_url": {
                "type": "string",
                "description": "registry_url is an optional value used primarily for private npm registries."
              }
            },
            "description": "Dependency is an npm module. These values are used to produce an immutable artifact, which manifests as a layer_id."
          },
          "description": "The list of third party npm modules, and their versions, that this action depends on.",
          "defaultValue": [{ "name": "lodash", "version": "1.0.0" }]
        },
        "runtime": {
          "type": "string",
          "description": "The Node runtime. For example: `node12`, defaults to `node12`",
          "defaultValue": "node12"
        },
        "secrets": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the particular secret, e.g. API_KEY.",
                "defaultValue": "mySecret"
              },
              "updated_at": {
                "type": "string",
                "description": "The time when the secret was last updated.",
                "format": "date-time",
                "defaultValue": "2021-01-01T00:00:00.000Z"
              }
            }
          },
          "description": "The list of secrets that are included in an action or a version of an action.",
          "defaultValue": [
            { "name": "mySecret", "updated_at": "2021-01-01T00:00:00.000Z" }
          ]
        },
        "deployed_version": {
          "$ref": "post_deploy_draft_version_response_deployed_version",
          "description": "The version of the action that is currently deployed."
        },
        "installed_integration_id": {
          "type": "string",
          "description": "installed_integration_id is the fk reference to the InstalledIntegration entity.",
          "defaultValue": "7d2bc0c9-c0c2-433a-9f4e-86ef80270aad"
        },
        "integration": {
          "$ref": "post_deploy_draft_version_response_integration",
          "description": "Integration defines a self contained functioning unit which partners\npublish. A partner may create one or many of these integrations."
        },
        "status": {
          "type": "string",
          "description": "The build status of this action.",
          "enum": [
            "pending",
            "building",
            "packaged",
            "built",
            "retrying",
            "failed"
          ],
          "defaultValue": "built"
        },
        "all_changes_deployed": {
          "type": "boolean",
          "description": "True if all of an Action's contents have been deployed.",
          "defaultValue": false
        },
        "built_at": {
          "type": "string",
          "format": "date-time",
          "description": "The time when this action was built successfully.",
          "defaultValue": "2021-01-01T00:00:00.000Z"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "The time when this action was created.",
          "defaultValue": "2021-01-01T00:00:00.000Z"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "The time when this action was updated.",
          "defaultValue": "2021-01-01T00:00:00.000Z"
        }
      },
      "description": "The action to which this verison belongs."
    },
    "post_deploy_draft_version_response_deployed_version": {
      "type": "object",
      "items": {},
      "description": "The version of the action that is currently deployed.",
      "defaultValue": {}
    },
    "post_deploy_draft_version_response_integration": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "id is a system generated GUID. This same ID is designed to be federated in\nall the applicable localities.",
          "defaultValue": "8e9fe2d0-a2fc-4c8c-9e35-dae5afadb70b"
        },
        "catalog_id": {
          "type": "string",
          "defaultValue": "awesome-auth0-integration",
          "description": "catalog_id refers to the ID in the marketplace catalog"
        },
        "url_slug": {
          "type": "string",
          "defaultValue": "awesome-auth0-integration-slug",
          "description": "url_slug refers to the url_slug in the marketplace catalog"
        },
        "partner_id": {
          "type": "string",
          "description": "partner_id is the foreign key reference to the partner account this\nintegration belongs to.",
          "defaultValue": "b8575c12-8d9d-4b5c-b28e-671fe9d39029"
        },
        "name": {
          "type": "string",
          "description": "name is the integration name, which will be used for display purposes in\nthe marketplace.\n\nTo start we're going to make sure the display name is at least 3\ncharacters. Can adjust this easily later.",
          "defaultValue": "Example Auth0 integration"
        },
        "description": {
          "type": "string",
          "description": "description adds more text for the integration name -- also relevant for\nthe marketplace listing.",
          "defaultValue": "An awesome Auth0 integration"
        },
        "short_description": {
          "type": "string",
          "defaultValue": "Awesome Auth0 integration",
          "description": "short_description is the brief description of the integration, which is used for display purposes in cards"
        },
        "logo": { "type": "string" },
        "feature_type": {
          "type": "string",
          "enum": [
            "unspecified",
            "action",
            "social_connection",
            "log_stream",
            "sso_integration",
            "sms_provider"
          ],
          "default": "unspecified",
          "defaultValue": "action",
          "description": "feature_type is the type of the integration."
        },
        "terms_of_use_url": { "type": "string" },
        "privacy_policy_url": { "type": "string" },
        "public_support_link": { "type": "string" },
        "current_release": {
          "$ref": "post_deploy_draft_version_response_current_release"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "defaultValue": "2021-06-21T15:47:29.072Z"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "defaultValue": "2021-06-21T15:47:29.072Z"
        }
      },
      "description": "Integration defines a self contained functioning unit which partners\npublish. A partner may create one or many of these integrations."
    },
    "post_deploy_draft_version_response_current_release": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id of the associated IntegrationRelease"
        },
        "trigger": { "$ref": "post_deploy_draft_version_response_trigger" },
        "semver": {
          "$ref": "post_deploy_draft_version_response_semver",
          "description": "Semver denotes the major.minor version of an integration release"
        },
        "required_secrets": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": ["UNSPECIFIED", "STRING"],
                "default": "UNSPECIFIED"
              },
              "name": {
                "type": "string",
                "description": "The name of the parameter."
              },
              "required": {
                "type": "boolean",
                "description": "The flag for if this parameter is required."
              },
              "optional": {
                "type": "boolean",
                "description": "The temp flag for if this parameter is required (experimental; for Labs use only)."
              },
              "label": {
                "type": "string",
                "description": "The short label for this parameter."
              },
              "description": {
                "type": "string",
                "description": "The lengthier description for this parameter."
              },
              "default_value": {
                "type": "string",
                "description": "The default value for this parameter."
              },
              "placeholder": {
                "type": "string",
                "description": "Placeholder text for this parameter."
              },
              "options": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "The value of an option that will be used within the application."
                    },
                    "label": {
                      "type": "string",
                      "description": "The display value of an option suitable for displaying in a UI."
                    }
                  }
                },
                "description": "The allowable options for this param."
              }
            },
            "description": "Param are form input values, primarily utilized when specifying secrets and\nconfiguration values for actions.\n\nThese are especially important for partner integrations -- but can be\nexposed to tenant admins as well if they want to parameterize their custom\nactions."
          },
          "description": "required_secrets declares all the necessary secrets for an integration to\nwork."
        },
        "required_configuration": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": ["UNSPECIFIED", "STRING"],
                "default": "UNSPECIFIED"
              },
              "name": {
                "type": "string",
                "description": "The name of the parameter."
              },
              "required": {
                "type": "boolean",
                "description": "The flag for if this parameter is required."
              },
              "optional": {
                "type": "boolean",
                "description": "The temp flag for if this parameter is required (experimental; for Labs use only)."
              },
              "label": {
                "type": "string",
                "description": "The short label for this parameter."
              },
              "description": {
                "type": "string",
                "description": "The lengthier description for this parameter."
              },
              "default_value": {
                "type": "string",
                "description": "The default value for this parameter."
              },
              "placeholder": {
                "type": "string",
                "description": "Placeholder text for this parameter."
              },
              "options": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "The value of an option that will be used within the application."
                    },
                    "label": {
                      "type": "string",
                      "description": "The display value of an option suitable for displaying in a UI."
                    }
                  }
                },
                "description": "The allowable options for this param."
              }
            },
            "description": "Param are form input values, primarily utilized when specifying secrets and\nconfiguration values for actions.\n\nThese are especially important for partner integrations -- but can be\nexposed to tenant admins as well if they want to parameterize their custom\nactions."
          },
          "description": "required_configuration declares all the necessary configuration fields for an integration to work."
        }
      }
    },
    "post_deploy_draft_version_response_trigger": {
      "type": "object",
      "required": ["id"],
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "description": "An actions extensibility point.",
          "defaultValue": "post-login",
          "enum": [
            "post-login",
            "credentials-exchange",
            "pre-user-registration",
            "post-user-registration",
            "post-change-password",
            "send-phone-message",
            "iga-approval",
            "iga-certification",
            "iga-fulfillment-assignment",
            "iga-fulfillment-execution"
          ]
        },
        "version": {
          "type": "string",
          "description": "The version of a trigger. v1, v2, etc."
        },
        "status": {
          "type": "string",
          "description": "status points to the trigger status."
        },
        "runtimes": {
          "type": "array",
          "items": { "type": "string" },
          "description": "runtimes supported by this trigger."
        },
        "default_runtime": {
          "type": "string",
          "description": "Runtime that will be used when none is specified when creating an action."
        },
        "compatible_triggers": {
          "type": "array",
          "description": "compatible_triggers informs which other trigger supports the same event and api.",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "An actions extensibility point.",
                "defaultValue": "post-login",
                "enum": [
                  "post-login",
                  "credentials-exchange",
                  "pre-user-registration",
                  "post-user-registration",
                  "post-change-password",
                  "send-phone-message",
                  "iga-approval",
                  "iga-certification",
                  "iga-fulfillment-assignment",
                  "iga-fulfillment-execution"
                ]
              },
              "version": {
                "type": "string",
                "description": "The version of a trigger. v1, v2, etc."
              }
            },
            "required": ["id", "version"]
          }
        }
      }
    },
    "post_deploy_draft_version_response_semver": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "major": {
          "type": "integer",
          "description": "Major is the major number of a semver",
          "defaultValue": 1
        },
        "minor": {
          "type": "integer",
          "description": "Minior is the minior number of a semver",
          "defaultValue": 1
        }
      },
      "description": "Semver denotes the major.minor version of an integration release"
    },
    "post_deploy_draft_version_body": {
      "type": "object",
      "properties": {
        "update_draft": {
          "type": "boolean",
          "description": "True if the draft of the action should be updated with the reverted version.",
          "defaultValue": false
        }
      },
      "additionalProperties": false
    }
  }
}
